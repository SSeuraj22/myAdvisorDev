"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createAdaptiveCardsHostConfig;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _normalizeStyleOptions = _interopRequireDefault(require("../normalizeStyleOptions"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

// https://docs.microsoft.com/en-us/adaptive-cards/rendering-cards/host-config
function createAdaptiveCardsHostConfig(styleOptions) {
  var _normalizeStyleOption = _objectSpread(_objectSpread({}, (0, _botframeworkWebchatApi.normalizeStyleOptions)(styleOptions)), (0, _normalizeStyleOptions.default)(styleOptions)),
      accent = _normalizeStyleOption.accent,
      bubbleTextColor = _normalizeStyleOption.bubbleTextColor,
      cardEmphasisBackgroundColor = _normalizeStyleOption.cardEmphasisBackgroundColor,
      primaryFont = _normalizeStyleOption.primaryFont,
      subtle = _normalizeStyleOption.subtle;

  return {
    containerStyles: {
      default: {
        foregroundColors: {
          default: {
            default: bubbleTextColor,
            subtle: subtle
          },
          accent: {
            default: accent,
            subtle: accent
          }
        }
      },
      emphasis: {
        backgroundColor: cardEmphasisBackgroundColor,
        foregroundColors: {
          default: {
            default: bubbleTextColor,
            subtle: subtle
          }
        }
      },
      accent: {
        backgroundColor: '#C7DEF9',
        foregroundColors: {
          default: {
            default: '#333333',
            subtle: '#EE333333'
          }
        }
      },
      good: {
        backgroundColor: '#CCFFCC',
        foregroundColors: {
          default: {
            default: '#333333',
            subtle: '#EE333333'
          }
        }
      },
      attention: {
        backgroundColor: '#FFC5B2',
        foregroundColors: {
          default: {
            default: '#333333',
            subtle: '#EE333333'
          }
        }
      },
      warning: {
        backgroundColor: '#FFE2B2',
        foregroundColors: {
          default: {
            default: '#333333',
            subtle: '#EE333333'
          }
        }
      }
    },
    supportsInteractivity: true,
    fontFamily: primaryFont,
    imageSizes: {
      small: 40,
      medium: 80,
      large: 160
    },
    actions: {
      actionAlignment: 'stretch',
      actionsOrientation: 'vertical',
      buttonSpacing: 8,
      maxActions: 100,
      showCard: {
        actionMode: 'inline',
        inlineTopMargin: 8
      },
      spacing: 'default'
    },
    adaptiveCard: {
      allowCustomStyle: false
    },
    imageSet: {
      imageSize: 'medium',
      maxImageHeight: 100
    },
    factSet: {
      title: {
        color: 'default',
        size: 'default',
        isSubtle: false,
        weight: 'bolder',
        wrap: true,
        maxWidth: 150
      },
      value: {
        color: 'default',
        size: 'default',
        isSubtle: false,
        weight: 'default',
        wrap: true
      },
      spacing: 8
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hZGFwdGl2ZUNhcmRzL1N0eWxlcy9hZGFwdGl2ZUNhcmRIb3N0Q29uZmlnLnRzIl0sIm5hbWVzIjpbImNyZWF0ZUFkYXB0aXZlQ2FyZHNIb3N0Q29uZmlnIiwic3R5bGVPcHRpb25zIiwiYWNjZW50IiwiYnViYmxlVGV4dENvbG9yIiwiY2FyZEVtcGhhc2lzQmFja2dyb3VuZENvbG9yIiwicHJpbWFyeUZvbnQiLCJzdWJ0bGUiLCJjb250YWluZXJTdHlsZXMiLCJkZWZhdWx0IiwiZm9yZWdyb3VuZENvbG9ycyIsImVtcGhhc2lzIiwiYmFja2dyb3VuZENvbG9yIiwiZ29vZCIsImF0dGVudGlvbiIsIndhcm5pbmciLCJzdXBwb3J0c0ludGVyYWN0aXZpdHkiLCJmb250RmFtaWx5IiwiaW1hZ2VTaXplcyIsInNtYWxsIiwibWVkaXVtIiwibGFyZ2UiLCJhY3Rpb25zIiwiYWN0aW9uQWxpZ25tZW50IiwiYWN0aW9uc09yaWVudGF0aW9uIiwiYnV0dG9uU3BhY2luZyIsIm1heEFjdGlvbnMiLCJzaG93Q2FyZCIsImFjdGlvbk1vZGUiLCJpbmxpbmVUb3BNYXJnaW4iLCJzcGFjaW5nIiwiYWRhcHRpdmVDYXJkIiwiYWxsb3dDdXN0b21TdHlsZSIsImltYWdlU2V0IiwiaW1hZ2VTaXplIiwibWF4SW1hZ2VIZWlnaHQiLCJmYWN0U2V0IiwidGl0bGUiLCJjb2xvciIsInNpemUiLCJpc1N1YnRsZSIsIndlaWdodCIsIndyYXAiLCJtYXhXaWR0aCIsInZhbHVlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQUdBOzs7Ozs7QUFFQTtBQUVlLFNBQVNBLDZCQUFULENBQXVDQyxZQUF2QyxFQUE2RTtBQUFBLDhEQUVyRixtREFBc0JBLFlBQXRCLENBRnFGLEdBR3JGLG9DQUFtQ0EsWUFBbkMsQ0FIcUY7QUFBQSxNQUNsRkMsTUFEa0YseUJBQ2xGQSxNQURrRjtBQUFBLE1BQzFFQyxlQUQwRSx5QkFDMUVBLGVBRDBFO0FBQUEsTUFDekRD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S0FBSyxFQUFFLFNBREY7QUFFTEMsUUFBQUEsSUFBSSxFQUFFLFNBRkQ7QUFHTEMsUUFBQUEsUUFBUSxFQUFFLEtBSEw7QUFJTEMsUUFBQUEsTUFBTSxFQUFFLFFBSkg7QUFLTEMsUUFBQUEsSUFBSSxFQUFFLElBTEQ7QUFNTEMsUUFBQUEsUUFBUSxFQUFFO0FBTkwsT0FEQTtBQVNQQyxNQUFBQSxLQUFLLEVBQUU7QUFDTE4sUUFBQUEsS0FBSyxFQUFFLFNBREY7QUFFTEMsUUFBQUEsSUFBSSxFQUFFLFNBRkQ7QUFHTEMsUUFBQUEsUUFBUSxFQUFFLEtBSEw7QUFJTEMsUUFBQUEsTUFBTSxFQUFFLFNBSkg7QUFLTEMsUUFBQUEsSUFBSSxFQUFFO0FBTEQsT0FUQTtBQWdCUFosTUFBQUEsT0FBTyxFQUFFO0FBaEJGO0FBckZKLEdBQVA7QUF3R0QiLCJzb3VyY2VSb290IjoiYnVuZGxlOi8vLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG5vcm1hbGl6ZVN0eWxlT3B0aW9ucyB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWFwaSc7XG5cbmltcG9ydCBGdWxsQnVuZGxlU3R5bGVPcHRpb25zIGZyb20gJy4uLy4uL0Z1bGxCdW5kbGVTdHlsZU9wdGlvbnMnO1xuaW1wb3J0IG5vcm1hbGl6ZUFkYXB0aXZlQ2FyZHNTdHlsZU9wdGlvbnMgZnJvbSAnLi4vbm9ybWFsaXplU3R5bGVPcHRpb25zJztcblxuLy8gaHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvYWRhcHRpdmUtY2FyZHMvcmVuZGVyaW5nLWNhcmRzL2hvc3QtY29uZmlnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZUFkYXB0aXZlQ2FyZHNIb3N0Q29uZmlnKHN0eWxlT3B0aW9uczogRnVsbEJ1bmRsZVN0eWxlT3B0aW9ucykge1xuICBjb25zdCB7IGFjY2VudCwgYnViYmxlVGV4dENvbG9yLCBjYXJkRW1waGFzaXNCYWNrZ3JvdW5kQ29sb3IsIHByaW1hcnlGb250LCBzdWJ0bGUgfSA9IHtcbiAgICAuLi5ub3JtYWxpemVTdHlsZU9wdGlvbnMoc3R5bGVPcHRpb25zKSxcbiAgICAuLi5ub3JtYWxpemVBZGFwdGl2ZUNhcmRzU3R5bGVPcHRpb25zKHN0eWxlT3B0aW9ucylcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIGNvbnRhaW5lclN0eWxlczoge1xuICAgICAgZGVmYXVsdDoge1xuICAgICAgICBmb3JlZ3JvdW5kQ29sb3JzOiB7XG4gICAgICAgICAgZGVmYXVsdDoge1xuICAgICAgICAgICAgZGVmYXVsdDogYnViYmxlVGV4dENvbG9yLFxuICAgICAgICAgICAgc3VidGxlXG4gICAgICAgICAgfSxcbiAgICAgICAgICBhY2NlbnQ6IHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IGFjY2VudCxcbiAgICAgICAgICAgIHN1YnRsZTogYWNjZW50XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgZW1waGFzaXM6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiBjYXJkRW1waGFzaXNCYWNrZ3JvdW5kQ29sb3IsXG4gICAgICAgIGZvcmVncm91bmRDb2xvcnM6IHtcbiAgICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgICBkZWZhdWx0OiBidWJibGVUZXh0Q29sb3IsXG4gICAgICAgICAgICBzdWJ0bGVcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBhY2NlbnQ6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnI0M3REVGOScsXG4gICAgICAgIGZvcmVncm91bmRDb2xvcnM6IHtcbiAgICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgICBkZWZhdWx0OiAnIzMzMzMzMycsXG4gICAgICAgICAgICBzdWJ0bGU6ICcjRUUzMzMzMzMnXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgZ29vZDoge1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjQ0NGRkNDJyxcbiAgICAgICAgZm9yZWdyb3VuZENvbG9yczoge1xuICAgICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgIGRlZmF1bHQ6ICcjMzMzMzMzJyxcbiAgICAgICAgICAgIHN1YnRsZTogJyNFRTMzMzMzMydcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBhdHRlbnRpb246IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnI0ZGQzVCMicsXG4gICAgICAgIGZvcmVncm91bmRDb2xvcnM6IHtcbiAgICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgICBkZWZhdWx0OiAnIzMzMzMzMycsXG4gICAgICAgICAgICBzdWJ0bGU6ICcjRUUzMzMzMzMnXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgd2FybmluZzoge1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjRkZFMkIyJyxcbiAgICAgICAgZm9yZWdyb3VuZENvbG9yczoge1xuICAgICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgIGRlZmF1bHQ6ICcjMzMzMzMzJyxcbiAgICAgICAgICAgIHN1YnRsZTogJyNFRTMzMzMzMydcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIHN1cHBvcnRzSW50ZXJhY3Rpdml0eTogdHJ1ZSxcbiAgICBmb250RmFtaWx5OiBwcmltYXJ5Rm9udCxcbiAgICBpbWFnZVNpemVzOiB7XG4gICAgICBzbWFsbDogNDAsXG4gICAgICBtZWRpdW06IDgwLFxuICAgICAgbGFyZ2U6IDE2MFxuICAgIH0sXG4gICAgYWN0aW9uczoge1xuICAgICAgYWN0aW9uQWxpZ25tZW50OiAnc3RyZXRjaCcsXG4gICAgICBhY3Rpb25zT3JpZW50YXRpb246ICd2ZXJ0aWNhbCcsXG4gICAgICBidXR0b25TcGFjaW5nOiA4LFxuICAgICAgbWF4QWN0aW9uczogMTAwLFxuICAgICAgc2hvd0NhcmQ6IHtcbiAgICAgICAgYWN0aW9uTW9kZTogJ2lubGluZScsXG4gICAgICAgIGlubGluZVRvcE1hcmdpbjogOFxuICAgICAgfSxcbiAgICAgIHNwYWNpbmc6ICdkZWZhdWx0J1xuICAgIH0sXG4gICAgYWRhcHRpdmVDYXJkOiB7XG4gICAgICBhbGxvd0N1c3RvbVN0eWxlOiBmYWxzZVxuICAgIH0sXG4gICAgaW1hZ2VTZXQ6IHtcbiAgICAgIGltYWdlU2l6ZTogJ21lZGl1bScsXG4gICAgICBtYXhJbWFnZUhlaWdodDogMTAwXG4gICAgfSxcbiAgICBmYWN0U2V0OiB7XG4gICAgICB0aXRsZToge1xuICAgICAgICBjb2xvcjogJ2RlZmF1bHQnLFxuICAgICAgICBzaXplOiAnZGVmYXVsdCcsXG4gICAgICAgIGlzU3VidGxlOiBmYWxzZSxcbiAgICAgICAgd2VpZ2h0OiAnYm9sZGVyJyxcbiAgICAgICAgd3JhcDogdHJ1ZSxcbiAgICAgICAgbWF4V2lkdGg6IDE1MFxuICAgICAgfSxcbiAgICAgIHZhbHVlOiB7XG4gICAgICAgIGNvbG9yOiAnZGVmYXVsdCcsXG4gICAgICAgIHNpemU6ICdkZWZhdWx0JyxcbiAgICAgICAgaXNTdWJ0bGU6IGZhbHNlLFxuICAgICAgICB3ZWlnaHQ6ICdkZWZhdWx0JyxcbiAgICAgICAgd3JhcDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHNwYWNpbmc6IDhcbiAgICB9XG4gIH07XG59XG4iXX0=