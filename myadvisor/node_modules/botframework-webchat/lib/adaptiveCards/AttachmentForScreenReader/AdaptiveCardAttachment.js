"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _botframeworkWebchatComponent = require("botframework-webchat-component");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _useAdaptiveCardsPackage = _interopRequireDefault(require("../hooks/useAdaptiveCardsPackage"));

var _useParseAdaptiveCardJSON = _interopRequireDefault(require("../hooks/internal/useParseAdaptiveCardJSON"));

var _useUniqueId = _interopRequireDefault(require("../hooks/internal/useUniqueId"));

/* eslint-disable react/no-array-index-key */

/* eslint-disable react/forbid-dom-props */
var useLocalizer = _botframeworkWebchatComponent.hooks.useLocalizer; // Perform a depth-first search of the Adaptive Card tree.

function walkAllItems(node, fn) {
  fn(node);

  if (node.getItemAt && node.getItemCount) {
    for (var count = node.getItemCount(), index = 0; index < count; index++) {
      walkAllItems(node.getItemAt(index), fn);
    }
  }

  if (node.getActionAt && node.getActionCount) {
    for (var _count = node.getActionCount(), _index = 0; _index < _count; _index++) {
      fn(node.getActionAt(_index));
    }
  }
}

var AdaptiveCardChoiceSetInput = function AdaptiveCardChoiceSetInput(_ref) {
  var _ref$input = _ref.input,
      choices = _ref$input.choices,
      defaultValue = _ref$input.defaultValue;
  var labelId = (0, _useUniqueId.default)('webchat__id');
  var defaultChoice = choices.find(function (_ref2) {
    var value = _ref2.value;
    return defaultValue === value || !defaultValue && !value;
  });
  return /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("select", {
    "aria-labelledby": defaultChoice ? labelId : undefined,
    defaultValue: defaultValue,
    tabIndex: -1
  }, choices.map(function (choice) {
    return /*#__PURE__*/_react.default.createElement("option", {
      id: choice === defaultChoice ? labelId : undefined,
      key: choice.value,
      value: choice.value
    }, choice.title);
  })));
};

AdaptiveCardChoiceSetInput.propTypes = {
  input: _propTypes.default.shape({
    choices: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      value: _propTypes.default.any
    })),
    defaultValue: _propTypes.default.any,
    value: _propTypes.default.any
  }).isRequired
};

var AdaptiveCardAttachment = function AdaptiveCardAttachment(_ref3) {
  var content = _ref3.content;
  var labelId = (0, _useUniqueId.default)('webchat__id');
  var localize = useLocalizer();
  var parseAdaptiveCardJSON = (0, _useParseAdaptiveCardJSON.default)();

  var _useAdaptiveCardsPack = (0, _useAdaptiveCardsPackage.default)(),
      _useAdaptiveCardsPack2 = (0, _slicedToArray2.default)(_useAdaptiveCardsPack, 1),
      _useAdaptiveCardsPack3 = _useAdaptiveCardsPack2[0],
      ChoiceSetInput = _useAdaptiveCardsPack3.ChoiceSetInput,
      DateInput = _useAdaptiveCardsPack3.DateInput,
      NumberInput = _useAdaptiveCardsPack3.NumberInput,
      OpenUrlAction = _useAdaptiveCardsPack3.OpenUrlAction,
      ShowCardAction = _useAdaptiveCardsPack3.ShowCardAction,
      SubmitAction = _useAdaptiveCardsPack3.SubmitAction,
      TextInput = _useAdaptiveCardsPack3.TextInput,
      TimeInput = _useAdaptiveCardsPack3.TimeInput,
      ToggleInput = _useAdaptiveCardsPack3.ToggleInput;

  var card = (0, _react.useMemo)(function () {
    return parseAdaptiveCardJSON(content, {
      ignoreErrors: true
    });
  }, [content, parseAdaptiveCardJSON]);
  var inputs = (0, _react.useMemo)(function () {
    var inputs = [];
    walkAllItems(card, function (node) {
      if (node instanceof ChoiceSetInput || node instanceof DateInput || node instanceof NumberInput || node instanceof OpenUrlAction || node instanceof ShowCardAction || node instanceof SubmitAction || node instanceof TextInput || node instanceof TimeInput || node instanceof ToggleInput) {
        inputs.push(node);
      }
    });
    return inputs;
  }, [card, ChoiceSetInput, DateInput, NumberInput, OpenUrlAction, ShowCardAction, SubmitAction, TextInput, TimeInput, ToggleInput]);
  var cardLabel = localize('ATTACHMENT_CARD', card.speak || '', '', '');
  return /*#__PURE__*/_react.default.createElement("article", {
    "aria-labelledby": labelId
  }, /*#__PURE__*/_react.default.createElement("div", {
    id: labelId
  }, cardLabel), inputs.map(function (input, index) {
    return input instanceof ChoiceSetInput ? /*#__PURE__*/_react.default.createElement(AdaptiveCardChoiceSetInput, {
      input: input,
      key: index
    }) : input instanceof DateInput ? /*#__PURE__*/_react.default.createElement("div", {
      key: index
    }, /*#__PURE__*/_react.default.createElement("input", {
      placeholder: input.placeholder,
      tabIndex: -1,
      type: "date"
    })) : input instanceof NumberInput ? /*#__PURE__*/_react.default.createElement("div", {
      key: index
    }, /*#__PURE__*/_react.default.createElement("input", {
      placeholder: input.placeholder,
      tabIndex: -1,
      type: "number"
    })) : input instanceof OpenUrlAction || input instanceof ShowCardAction || input instanceof SubmitAction ? /*#__PURE__*/_react.default.createElement("div", {
      key: index
    }, /*#__PURE__*/_react.default.createElement("button", {
      tabIndex: -1,
      type: "button"
    }, input.title)) : input instanceof TextInput ? /*#__PURE__*/_react.default.createElement("div", {
      key: index
    }, /*#__PURE__*/_react.default.createElement("input", {
      placeholder: input.placeholder,
      tabIndex: -1,
      type: "text"
    })) : input instanceof TimeInput ? /*#__PURE__*/_react.default.createElement("div", {
      key: index
    }, /*#__PURE__*/_react.default.createElement("input", {
      placeholder: input.placeholder,
      tabIndex: -1,
      type: "time"
    })) : input instanceof ToggleInput ? /*#__PURE__*/_react.default.createElement("div", {
      key: index
    }, input.title, /*#__PURE__*/_react.default.createElement("input", {
      defaultChecked: input.value === input.valueOn,
      tabIndex: -1,
      type: "checkbox"
    })) : false;
  }));
};

AdaptiveCardAttachment.propTypes = {
  content: _propTypes.default.any.isRequired
};
var _default = AdaptiveCardAttachment;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,