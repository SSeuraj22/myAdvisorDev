"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createCognitiveServicesSpeechServicesPonyfillFactory;

var _AudioConfig = require("microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioConfig");

var _SpeechServices = _interopRequireDefault(require("web-speech-cognitive-services/lib/SpeechServices"));

function createCognitiveServicesSpeechServicesPonyfillFactory(_ref) {
  var audioConfig = _ref.audioConfig,
      audioContext = _ref.audioContext,
      audioInputDeviceId = _ref.audioInputDeviceId,
      credentials = _ref.credentials,
      enableTelemetry = _ref.enableTelemetry,
      speechRecognitionEndpointId = _ref.speechRecognitionEndpointId,
      speechSynthesisDeploymentId = _ref.speechSynthesisDeploymentId,
      speechSynthesisOutputFormat = _ref.speechSynthesisOutputFormat,
      textNormalization = _ref.textNormalization;

  if (!window.navigator.mediaDevices && !audioConfig) {
    console.warn('botframework-webchat: Your browser does not support Web Audio or the page is not loaded via HTTPS or localhost. Cognitive Services Speech Services is disabled. However, you may pass a custom AudioConfig to enable speech in this environment.');
    return function () {
      return {};
    };
  }

  if (audioConfig && audioInputDeviceId) {
    console.warn('botframework-webchat: "audioConfig" and "audioInputDeviceId" cannot be set at the same time; ignoring "audioInputDeviceId".');
  } // WORKAROUND: We should prevent AudioContext object from being recreated because they may be blessed and UX-wise expensive to recreate.
  //             In Cognitive Services SDK, if they detect the "end" function is falsy, they will not call "end" but "suspend" instead.
  //             And on next recognition, they will re-use the AudioContext object.


  if (!audioConfig) {
    audioConfig = audioInputDeviceId ? _AudioConfig.AudioConfig.fromMicrophoneInput(audioInputDeviceId) : _AudioConfig.AudioConfig.fromDefaultMicrophoneInput();
  }

  return function () {
    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        referenceGrammarID = _ref2.referenceGrammarID;

    var _createPonyfill = (0, _SpeechServices.default)({
      audioConfig: audioConfig,
      audioContext: audioContext,
      credentials: credentials,
      enableTelemetry: enableTelemetry,
      referenceGrammars: referenceGrammarID ? ["luis/".concat(referenceGrammarID, "-PRODUCTION")] : [],
      speechRecognitionEndpointId: speechRecognitionEndpointId,
      speechSynthesisDeploymentId: speechSynthesisDeploymentId,
      speechSynthesisOutputFormat: speechSynthesisOutputFormat,
      textNormalization: textNormalization
    }),
        SpeechGrammarList = _createPonyfill.SpeechGrammarList,
        SpeechRecognition = _createPonyfill.SpeechRecognition,
        speechSynthesis = _createPonyfill.speechSynthesis,
        SpeechSynthesisUtterance = _createPonyfill.SpeechSynthesisUtterance;

    return {
      SpeechGrammarList: SpeechGrammarList,
      SpeechRecognition: SpeechRecognition,
      speechSynthesis: speechSynthesis,
      SpeechSynthesisUtterance: SpeechSynthesisUtterance
    };
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jcmVhdGVDb2duaXRpdmVTZXJ2aWNlc1NwZWVjaFNlcnZpY2VzUG9ueWZpbGxGYWN0b3J5LmpzIl0sIm5hbWVzIjpbImNyZWF0ZUNvZ25pdGl2ZVNlcnZpY2VzU3BlZWNoU2VydmljZXNQb255ZmlsbEZhY3RvcnkiLCJhdWRpb0NvbmZpZyIsImF1ZGlvQ29udGV4dCIsImF1ZGlvSW5wdXREZXZpY2VJZCIsImNyZWRlbnRpYWxzIiwiZW5hYmxlVGVsZW1ldHJ5Iiwic3BlZWNoUmVjb2duaXRpb25FbmRwb2ludElkIiwic3BlZWNoU3ludGhlc2lzRGVwbG95bWVudElkIiwic3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0IiwidGV4dE5vcm1hbGl6YXRpb24iLCJ3aW5kb3ciLCJuYXZpZ2F0b3IiLCJtZWRpYURldmljZXMiLCJjb25zb2xlIiwid2FybiIsIkF1ZGlvQ29uZmlnIiwiZnJvbU1pY3JvcGhvbmVJbnB1dCIsImZyb21EZWZhdWx0TWljcm9waG9uZUlucHV0IiwicmVmZXJlbmNlR3JhbW1hcklEIiwicmVmZXJlbmNlR3JhbW1hcnMiLCJTcGVlY2hHcmFtbWFyTGlzdCIsIlNwZWVjaFJlY29nbml0aW9uIiwic3BlZWNoU3ludGhlc2lzIiwiU3BlZWNoU3ludGhlc2lzVXR0ZXJhbmNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFZSxTQUFTQSxvREFBVCxPQVVaO0FBQUEsTUFUREMsV0FTQyxRQVREQSxXQVNDO0FBQUEsTUFSREMsWUFRQyxRQVJEQSxZQVFDO0FBQUEsTUFQREMsa0JBT0MsUUFQREEsa0JBT0M7QUFBQSxNQU5EQyxXQU1DLFFBTkRBLFdBTUM7QUFBQSxNQUxEQyxlQUtDLFFBTERBLGVBS0M7QUFBQSxNQUpEQywyQkFJQyxRQUpEQSwyQkFJQztBQUFBLE1BSERDLDJCQUdDLFFBSERBLDJCQUdDO0FBQUEsTUFGREMsMkJBRUMsUUFGREEsMkJBRUM7QUFBQSxNQUREQyxpQkFDQyxRQUREQSxpQkFDQzs7QUFDRCxNQUFJLENBQUNDLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkMsWUFBbEIsSUFBa0MsQ0FBQ1gsV0FBdkMsRUFBb0Q7QUFDbERZLElBQUFBLE9BQU8sQ0FBQ0MsSUFBUixDQUNFLGtQQURGO0FBSUEsV0FBTztBQUFBLGFBQU8sRUFBUDtBQUFBLEtBQVA7QUFDRDs7QUFFRCxNQUFJYixXQUFXLElBQUlFLGtCQUFuQixFQUF1QztBQUNyQ1UsSUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQ0UsNkhBREY7QUFHRCxHQWJBLENBZUQ7QUFDQTtBQUNBOzs7QUFDQSxNQUFJLENBQUNiLFdBQUwsRUFBa0I7QUFDaEJBLElBQUFBLFdBQVcsR0FBR0Usa0JBQWtCLEdBQzVCWSx5QkFBWUMsbUJBQVosQ0FBZ0NiLGtCQUFoQyxDQUQ0QixHQUU1QlkseUJBQVlFLDBCQUFaLEVBRko7QUFHRDs7QUFFRCxTQUFPLFlBQWlDO0FBQUEsb0ZBQVAsRUFBTztBQUFBLFFBQTlCQyxrQkFBOEIsU0FBOUJBLGtCQUE4Qjs7QUFBQSwwQkFDc0QsNkJBQWU7QUFDekdqQixNQUFBQSxXQUFXLEVBQVhBLFdBRHlHO0FBRXpHQyxNQUFBQSxZQUFZLEVBQVpBLFlBRnlHO0FBR3pHRSxNQUFBQSxXQUFXLEVBQVhBLFdBSHlHO0FBSXpHQyxNQUFBQSxlQUFlLEVBQWZBLGVBSnlHO0FBS3pHYyxNQUFBQSxpQkFBaUIsRUFBRUQsa0JBQWtCLEdBQUcsZ0JBQVNBLGtCQUFULGlCQUFILEdBQStDLEVBTHFCO0FBTXpHWixNQUFBQSwyQkFBMkIsRUFBM0JBLDJCQU55RztBQU96R0MsTUFBQUEsMkJBQTJCLEVBQTNCQSwyQkFQeUc7QUFRekdDLE1BQUFBLDJCQUEyQixFQUEzQkEsMkJBUnlHO0FBU3pHQyxNQUFBQSxpQkFBaUIsRUFBakJBO0FBVHlHLEtBQWYsQ0FEdEQ7QUFBQSxRQUM5QlcsaUJBRDhCLG1CQUM5QkEsaUJBRDhCO0FBQUEsUUFDWEMsaUJBRFcsbUJBQ1hBLGlCQURXO0FBQUEsUUFDUUMsZUFEUixtQkFDUUEsZUFEUjtBQUFBLFFBQ3lCQyx3QkFEekIsbUJBQ3lCQSx3QkFEekI7O0FBYXRDLFdBQU87QUFDTEgsTUFBQUEsaUJBQWlCLEVBQWpCQSxpQkFESztBQUVMQyxNQUFBQSxpQkFBaUIsRUFBakJBLGlCQUZLO0FBR0xDLE1BQUFBLGVBQWUsRUFBZkEsZUFISztBQUlMQyxNQUFBQSx3QkFBd0IsRUFBeEJBO0FBSkssS0FBUDtBQU1ELEdBbkJEO0FBb0JEIiwic291cmNlUm9vdCI6ImJ1bmRsZTovLy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBdWRpb0NvbmZpZyB9IGZyb20gJ21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvQXVkaW8vQXVkaW9Db25maWcnO1xuaW1wb3J0IGNyZWF0ZVBvbnlmaWxsIGZyb20gJ3dlYi1zcGVlY2gtY29nbml0aXZlLXNlcnZpY2VzL2xpYi9TcGVlY2hTZXJ2aWNlcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZUNvZ25pdGl2ZVNlcnZpY2VzU3BlZWNoU2VydmljZXNQb255ZmlsbEZhY3Rvcnkoe1xuICBhdWRpb0NvbmZpZyxcbiAgYXVkaW9Db250ZXh0LFxuICBhdWRpb0lucHV0RGV2aWNlSWQsXG4gIGNyZWRlbnRpYWxzLFxuICBlbmFibGVUZWxlbWV0cnksXG4gIHNwZWVjaFJlY29nbml0aW9uRW5kcG9pbnRJZCxcbiAgc3BlZWNoU3ludGhlc2lzRGVwbG95bWVudElkLFxuICBzcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXQsXG4gIHRleHROb3JtYWxpemF0aW9uXG59KSB7XG4gIGlmICghd2luZG93Lm5hdmlnYXRvci5tZWRpYURldmljZXMgJiYgIWF1ZGlvQ29uZmlnKSB7XG4gICAgY29uc29sZS53YXJuKFxuICAgICAgJ2JvdGZyYW1ld29yay13ZWJjaGF0OiBZb3VyIGJyb3dzZXIgZG9lcyBub3Qgc3VwcG9ydCBXZWIgQXVkaW8gb3IgdGhlIHBhZ2UgaXMgbm90IGxvYWRlZCB2aWEgSFRUUFMgb3IgbG9jYWxob3N0LiBDb2duaXRpdmUgU2VydmljZXMgU3BlZWNoIFNlcnZpY2VzIGlzIGRpc2FibGVkLiBIb3dldmVyLCB5b3UgbWF5IHBhc3MgYSBjdXN0b20gQXVkaW9Db25maWcgdG8gZW5hYmxlIHNwZWVjaCBpbiB0aGlzIGVudmlyb25tZW50LidcbiAgICApO1xuXG4gICAgcmV0dXJuICgpID0+ICh7fSk7XG4gIH1cblxuICBpZiAoYXVkaW9Db25maWcgJiYgYXVkaW9JbnB1dERldmljZUlkKSB7XG4gICAgY29uc29sZS53YXJuKFxuICAgICAgJ2JvdGZyYW1ld29yay13ZWJjaGF0OiBcImF1ZGlvQ29uZmlnXCIgYW5kIFwiYXVkaW9JbnB1dERldmljZUlkXCIgY2Fubm90IGJlIHNldCBhdCB0aGUgc2FtZSB0aW1lOyBpZ25vcmluZyBcImF1ZGlvSW5wdXREZXZpY2VJZFwiLidcbiAgICApO1xuICB9XG5cbiAgLy8gV09SS0FST1VORDogV2Ugc2hvdWxkIHByZXZlbnQgQXVkaW9Db250ZXh0IG9iamVjdCBmcm9tIGJlaW5nIHJlY3JlYXRlZCBiZWNhdXNlIHRoZXkgbWF5IGJlIGJsZXNzZWQgYW5kIFVYLXdpc2UgZXhwZW5zaXZlIHRvIHJlY3JlYXRlLlxuICAvLyAgICAgICAgICAgICBJbiBDb2duaXRpdmUgU2VydmljZXMgU0RLLCBpZiB0aGV5IGRldGVjdCB0aGUgXCJlbmRcIiBmdW5jdGlvbiBpcyBmYWxzeSwgdGhleSB3aWxsIG5vdCBjYWxsIFwiZW5kXCIgYnV0IFwic3VzcGVuZFwiIGluc3RlYWQuXG4gIC8vICAgICAgICAgICAgIEFuZCBvbiBuZXh0IHJlY29nbml0aW9uLCB0aGV5IHdpbGwgcmUtdXNlIHRoZSBBdWRpb0NvbnRleHQgb2JqZWN0LlxuICBpZiAoIWF1ZGlvQ29uZmlnKSB7XG4gICAgYXVkaW9Db25maWcgPSBhdWRpb0lucHV0RGV2aWNlSWRcbiAgICAgID8gQXVkaW9Db25maWcuZnJvbU1pY3JvcGhvbmVJbnB1dChhdWRpb0lucHV0RGV2aWNlSWQpXG4gICAgICA6IEF1ZGlvQ29uZmlnLmZyb21EZWZhdWx0TWljcm9waG9uZUlucHV0KCk7XG4gIH1cblxuICByZXR1cm4gKHsgcmVmZXJlbmNlR3JhbW1hcklEIH0gPSB7fSkgPT4ge1xuICAgIGNvbnN0IHsgU3BlZWNoR3JhbW1hckxpc3QsIFNwZWVjaFJlY29nbml0aW9uLCBzcGVlY2hTeW50aGVzaXMsIFNwZWVjaFN5bnRoZXNpc1V0dGVyYW5jZSB9ID0gY3JlYXRlUG9ueWZpbGwoe1xuICAgICAgYXVkaW9Db25maWcsXG4gICAgICBhdWRpb0NvbnRleHQsXG4gICAgICBjcmVkZW50aWFscyxcbiAgICAgIGVuYWJsZVRlbGVtZXRyeSxcbiAgICAgIHJlZmVyZW5jZUdyYW1tYXJzOiByZWZlcmVuY2VHcmFtbWFySUQgPyBbYGx1aXMvJHtyZWZlcmVuY2VHcmFtbWFySUR9LVBST0RVQ1RJT05gXSA6IFtdLFxuICAgICAgc3BlZWNoUmVjb2duaXRpb25FbmRwb2ludElkLFxuICAgICAgc3BlZWNoU3ludGhlc2lzRGVwbG95bWVudElkLFxuICAgICAgc3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0LFxuICAgICAgdGV4dE5vcm1hbGl6YXRpb25cbiAgICB9KTtcblxuICAgIHJldHVybiB7XG4gICAgICBTcGVlY2hHcmFtbWFyTGlzdCxcbiAgICAgIFNwZWVjaFJlY29nbml0aW9uLFxuICAgICAgc3BlZWNoU3ludGhlc2lzLFxuICAgICAgU3BlZWNoU3ludGhlc2lzVXR0ZXJhbmNlXG4gICAgfTtcbiAgfTtcbn1cbiJdfQ==