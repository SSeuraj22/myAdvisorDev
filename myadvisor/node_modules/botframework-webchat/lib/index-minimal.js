"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Constants", {
  enumerable: true,
  get: function get() {
    return _botframeworkWebchatCore.Constants;
  }
});
Object.defineProperty(exports, "createStore", {
  enumerable: true,
  get: function get() {
    return _botframeworkWebchatCore.createStore;
  }
});
Object.defineProperty(exports, "createStoreWithDevTools", {
  enumerable: true,
  get: function get() {
    return _botframeworkWebchatCore.createStoreWithDevTools;
  }
});
Object.defineProperty(exports, "version", {
  enumerable: true,
  get: function get() {
    return _botframeworkWebchatCore.version;
  }
});
Object.defineProperty(exports, "Components", {
  enumerable: true,
  get: function get() {
    return _botframeworkWebchatComponent.Components;
  }
});
Object.defineProperty(exports, "concatMiddleware", {
  enumerable: true,
  get: function get() {
    return _botframeworkWebchatComponent.concatMiddleware;
  }
});
Object.defineProperty(exports, "connectToWebChat", {
  enumerable: true,
  get: function get() {
    return _botframeworkWebchatComponent.connectToWebChat;
  }
});
Object.defineProperty(exports, "createStyleSet", {
  enumerable: true,
  get: function get() {
    return _botframeworkWebchatComponent.createStyleSet;
  }
});
Object.defineProperty(exports, "hooks", {
  enumerable: true,
  get: function get() {
    return _botframeworkWebchatComponent.hooks;
  }
});
Object.defineProperty(exports, "createBrowserWebSpeechPonyfillFactory", {
  enumerable: true,
  get: function get() {
    return _createBrowserWebSpeechPonyfillFactory.default;
  }
});
exports.renderWebChat = exports.default = exports.createDirectLineAppServiceExtension = exports.createDirectLine = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _botframeworkWebchatCore = require("botframework-webchat-core");

var _botframeworkWebchatComponent = _interopRequireWildcard(require("botframework-webchat-component"));

var _addVersion = _interopRequireDefault(require("./addVersion"));

var _renderWebChat = _interopRequireDefault(require("./renderWebChat"));

var _createBrowserWebSpeechPonyfillFactory = _interopRequireDefault(require("./createBrowserWebSpeechPonyfillFactory"));

var _createDirectLine = _interopRequireDefault(require("./createDirectLine"));

var _createDirectLineAppServiceExtension = _interopRequireDefault(require("./createDirectLineAppServiceExtension"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var renderWebChat = _renderWebChat.default.bind(null, _botframeworkWebchatComponent.default);

exports.renderWebChat = renderWebChat;

var createDirectLine = function createDirectLine(options) {
  options.botAgent && console.warn('Web Chat: Developers are not currently allowed to set botAgent in the createDirectLine function. See https://github.com/microsoft/BotFramework-WebChat/issues/2119 for more details.');
  return (0, _createDirectLine.default)(_objectSpread(_objectSpread({}, options), {}, {
    botAgent: "WebChat/".concat(_botframeworkWebchatCore.version, " (Minimal)")
  }));
};

exports.createDirectLine = createDirectLine;

var createDirectLineAppServiceExtension = function createDirectLineAppServiceExtension(options) {
  options.botAgent && console.warn('Web Chat: Developers are not currently allowed to set botAgent in the createDirectLine function. See https://github.com/microsoft/BotFramework-WebChat/issues/2119 for more details.');
  return (0, _createDirectLineAppServiceExtension.default)(_objectSpread(_objectSpread({}, options), {}, {
    botAgent: "WebChat/".concat(_botframeworkWebchatCore.version, " (Minimal)")
  }));
};

exports.createDirectLineAppServiceExtension = createDirectLineAppServiceExtension;
var _default = _botframeworkWebchatComponent.default;
exports.default = _default;
// Until we have a development-specific bundle, we are not shipping createStoreWithDevTools in bundle.
window['WebChat'] = _objectSpread(_objectSpread({}, window['WebChat']), {}, {
  concatMiddleware: _botframeworkWebchatComponent.concatMiddleware,
  connectToWebChat: _botframeworkWebchatComponent.connectToWebChat,
  Constants: _botframeworkWebchatCore.Constants,
  createBrowserWebSpeechPonyfillFactory: _createBrowserWebSpeechPonyfillFactory.default,
  createDirectLine: createDirectLine,
  createDirectLineAppServiceExtension: createDirectLineAppServiceExtension,
  createStore: _botframeworkWebchatCore.createStore,
  createStyleSet: _botframeworkWebchatComponent.createStyleSet,
  hooks: _botframeworkWebchatComponent.hooks,
  ReactWebChat: _botframeworkWebchatComponent.default,
  renderWebChat: renderWebChat
});
(0, _addVersion.default)('minimal');
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC1taW5pbWFsLnRzIl0sIm5hbWVzIjpbInJlbmRlcldlYkNoYXQiLCJjb3JlUmVuZGVyV2ViQ2hhdCIsImJpbmQiLCJSZWFjdFdlYkNoYXQiLCJjcmVhdGVEaXJlY3RMaW5lIiwib3B0aW9ucyIsImJvdEFnZW50IiwiY29uc29sZSIsIndhcm4iLCJ2ZXJzaW9uIiwiY3JlYXRlRGlyZWN0TGluZUFwcFNlcnZpY2VFeHRlbnNpb24iLCJ3aW5kb3ciLCJjb25jYXRNaWRkbGV3YXJlIiwiY29ubmVjdFRvV2ViQ2hhdCIsIkNvbnN0YW50cyIsImNyZWF0ZUJyb3dzZXJXZWJTcGVlY2hQb255ZmlsbEZhY3RvcnkiLCJjcmVhdGVTdG9yZSIsImNyZWF0ZVN0eWxlU2V0IiwiaG9va3MiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFLQTs7QUFFQTs7QUFRQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7O0FBRUEsSUFBTUEsYUFBYSxHQUFHQyx1QkFBa0JDLElBQWxCLENBQXVCLElBQXZCLEVBQTZCQyxxQ0FBN0IsQ0FBdEI7Ozs7QUFFTyxJQUFNQyxnQkFBZ0IsR0FBRyxTQUFuQkEsZ0JBQW1CLENBQUFDLE9BQU8sRUFBSTtBQUN6Q0EsRUFBQUEsT0FBTyxDQUFDQyxRQUFSLElBQ0VDLE9BQU8sQ0FBQ0MsSUFBUixDQUNFLHNMQURGLENBREY7QUFLQSxTQUFPLCtEQUE2QkgsT0FBN0I7QUFBc0NDLElBQUFBLFFBQVEsb0JBQWFHLGdDQUFiO0FBQTlDLEtBQVA7QUFDRCxDQVBNOzs7O0FBU0EsSUFBTUMsbUNBQW1DLEdBQUcsU0FBdENBLG1DQUFzQyxDQUFBTCxPQUFPLEVBQUk7QUFDNURBLEVBQUFBLE9BQU8sQ0FBQ0MsUUFBUixJQUNFQyxPQUFPLENBQUNDLElBQVIsQ0FDRSxzTEFERixDQURGO0FBS0EsU0FBTyxrRkFBZ0RILE9BQWhEO0FBQXlEQyxJQUFBQSxRQUFRLG9CQUFhRyxnQ0FBYjtBQUFqRSxLQUFQO0FBQ0QsQ0FQTTs7O2VBU1FOLHFDOztBQWdCZjtBQUNBUSxNQUFNLENBQUMsU0FBRCxDQUFOLG1DQUNLQSxNQUFNLENBQUMsU0FBRCxDQURYO0FBRUVDLEVBQUFBLGdCQUFnQixFQUFoQkEsOENBRkY7QUFHRUMsRUFBQUEsZ0JBQWdCLEVBQWhCQSw4Q0FIRjtBQUlFQyxFQUFBQSxTQUFTLEVBQVRBLGtDQUpGO0FBS0VDLEVBQUFBLHFDQUFxQyxFQUFyQ0EsOENBTEY7QUFNRVgsRUFBQUEsZ0JBQWdCLEVBQWhCQSxnQkFORjtBQU9FTSxFQUFBQSxtQ0FBbUMsRUFBbkNBLG1DQVBGO0FBUUVNLEVBQUFBLFdBQVcsRUFBWEEsb0NBUkY7QUFTRUMsRUFBQUEsY0FBYyxFQUFkQSw0Q0FURjtBQVVFQyxFQUFBQSxLQUFLLEVBQUxBLG1DQVZGO0FBV0VmLEVBQUFBLFlBQVksRUFBWkEscUNBWEY7QUFZRUgsRUFBQUEsYUFBYSxFQUFiQTtBQVpGO0FBZUEseUJBQVcsU0FBWCIsInNvdXJjZVJvb3QiOiJidW5kbGU6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSU1QT1JUQU5UOiBUbyBleHBvcnQgYW55dGhpbmcgZnJvbSB0aGlzIGZpbGUsIGFkZCBpdCB0byBpbmRleC1taW5pbWFsLnRzeCwgd2hpY2ggaXMgdGhlIC5kLnRzIGZvciB0aGlzIGZpbGUuXG5cbi8qIGVzbGludCBkb3Qtbm90YXRpb246IFtcImVycm9yXCIsIHsgXCJhbGxvd1BhdHRlcm5cIjogXCJeV2ViQ2hhdCRcIiB9XSAqL1xuLy8gd2luZG93WydXZWJDaGF0J10gaXMgcmVxdWlyZWQgZm9yIFR5cGVTY3JpcHRcblxuaW1wb3J0IHsgQ29uc3RhbnRzLCBjcmVhdGVTdG9yZSwgY3JlYXRlU3RvcmVXaXRoRGV2VG9vbHMsIHZlcnNpb24gfSBmcm9tICdib3RmcmFtZXdvcmstd2ViY2hhdC1jb3JlJztcblxuaW1wb3J0IFJlYWN0V2ViQ2hhdCwge1xuICBDb21wb25lbnRzLFxuICBjb25jYXRNaWRkbGV3YXJlLFxuICBjb25uZWN0VG9XZWJDaGF0LFxuICBjcmVhdGVTdHlsZVNldCxcbiAgaG9va3Ncbn0gZnJvbSAnYm90ZnJhbWV3b3JrLXdlYmNoYXQtY29tcG9uZW50JztcblxuaW1wb3J0IGFkZFZlcnNpb24gZnJvbSAnLi9hZGRWZXJzaW9uJztcbmltcG9ydCBjb3JlUmVuZGVyV2ViQ2hhdCBmcm9tICcuL3JlbmRlcldlYkNoYXQnO1xuaW1wb3J0IGNyZWF0ZUJyb3dzZXJXZWJTcGVlY2hQb255ZmlsbEZhY3RvcnkgZnJvbSAnLi9jcmVhdGVCcm93c2VyV2ViU3BlZWNoUG9ueWZpbGxGYWN0b3J5JztcbmltcG9ydCBkZWZhdWx0Q3JlYXRlRGlyZWN0TGluZSBmcm9tICcuL2NyZWF0ZURpcmVjdExpbmUnO1xuaW1wb3J0IGRlZmF1bHRDcmVhdGVEaXJlY3RMaW5lQXBwU2VydmljZUV4dGVuc2lvbiBmcm9tICcuL2NyZWF0ZURpcmVjdExpbmVBcHBTZXJ2aWNlRXh0ZW5zaW9uJztcblxuY29uc3QgcmVuZGVyV2ViQ2hhdCA9IGNvcmVSZW5kZXJXZWJDaGF0LmJpbmQobnVsbCwgUmVhY3RXZWJDaGF0KTtcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZURpcmVjdExpbmUgPSBvcHRpb25zID0+IHtcbiAgb3B0aW9ucy5ib3RBZ2VudCAmJlxuICAgIGNvbnNvbGUud2FybihcbiAgICAgICdXZWIgQ2hhdDogRGV2ZWxvcGVycyBhcmUgbm90IGN1cnJlbnRseSBhbGxvd2VkIHRvIHNldCBib3RBZ2VudCBpbiB0aGUgY3JlYXRlRGlyZWN0TGluZSBmdW5jdGlvbi4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9taWNyb3NvZnQvQm90RnJhbWV3b3JrLVdlYkNoYXQvaXNzdWVzLzIxMTkgZm9yIG1vcmUgZGV0YWlscy4nXG4gICAgKTtcblxuICByZXR1cm4gZGVmYXVsdENyZWF0ZURpcmVjdExpbmUoeyAuLi5vcHRpb25zLCBib3RBZ2VudDogYFdlYkNoYXQvJHt2ZXJzaW9ufSAoTWluaW1hbClgIH0pO1xufTtcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZURpcmVjdExpbmVBcHBTZXJ2aWNlRXh0ZW5zaW9uID0gb3B0aW9ucyA9PiB7XG4gIG9wdGlvbnMuYm90QWdlbnQgJiZcbiAgICBjb25zb2xlLndhcm4oXG4gICAgICAnV2ViIENoYXQ6IERldmVsb3BlcnMgYXJlIG5vdCBjdXJyZW50bHkgYWxsb3dlZCB0byBzZXQgYm90QWdlbnQgaW4gdGhlIGNyZWF0ZURpcmVjdExpbmUgZnVuY3Rpb24uIFNlZSBodHRwczovL2dpdGh1Yi5jb20vbWljcm9zb2Z0L0JvdEZyYW1ld29yay1XZWJDaGF0L2lzc3Vlcy8yMTE5IGZvciBtb3JlIGRldGFpbHMuJ1xuICAgICk7XG5cbiAgcmV0dXJuIGRlZmF1bHRDcmVhdGVEaXJlY3RMaW5lQXBwU2VydmljZUV4dGVuc2lvbih7IC4uLm9wdGlvbnMsIGJvdEFnZW50OiBgV2ViQ2hhdC8ke3ZlcnNpb259IChNaW5pbWFsKWAgfSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBSZWFjdFdlYkNoYXQ7XG5cbmV4cG9ydCB7XG4gIENvbXBvbmVudHMsXG4gIGNvbmNhdE1pZGRsZXdhcmUsXG4gIGNvbm5lY3RUb1dlYkNoYXQsXG4gIENvbnN0YW50cyxcbiAgY3JlYXRlQnJvd3NlcldlYlNwZWVjaFBvbnlmaWxsRmFjdG9yeSxcbiAgY3JlYXRlU3RvcmUsXG4gIGNyZWF0ZVN0b3JlV2l0aERldlRvb2xzLFxuICBjcmVhdGVTdHlsZVNldCxcbiAgaG9va3MsXG4gIHJlbmRlcldlYkNoYXQsXG4gIHZlcnNpb25cbn07XG5cbi8vIFVudGlsIHdlIGhhdmUgYSBkZXZlbG9wbWVudC1zcGVjaWZpYyBidW5kbGUsIHdlIGFyZSBub3Qgc2hpcHBpbmcgY3JlYXRlU3RvcmVXaXRoRGV2VG9vbHMgaW4gYnVuZGxlLlxud2luZG93WydXZWJDaGF0J10gPSB7XG4gIC4uLndpbmRvd1snV2ViQ2hhdCddLFxuICBjb25jYXRNaWRkbGV3YXJlLFxuICBjb25uZWN0VG9XZWJDaGF0LFxuICBDb25zdGFudHMsXG4gIGNyZWF0ZUJyb3dzZXJXZWJTcGVlY2hQb255ZmlsbEZhY3RvcnksXG4gIGNyZWF0ZURpcmVjdExpbmUsXG4gIGNyZWF0ZURpcmVjdExpbmVBcHBTZXJ2aWNlRXh0ZW5zaW9uLFxuICBjcmVhdGVTdG9yZSxcbiAgY3JlYXRlU3R5bGVTZXQsXG4gIGhvb2tzLFxuICBSZWFjdFdlYkNoYXQsXG4gIHJlbmRlcldlYkNoYXRcbn07XG5cbmFkZFZlcnNpb24oJ21pbmltYWwnKTtcbiJdfQ==