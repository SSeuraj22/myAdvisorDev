{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar React = require('react');\n\nvar React__default = _interopDefault(React);\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \".multiSelectContainer,.multiSelectContainer *,.multiSelectContainer :after,.multiSelectContainer :before{box-sizing:border-box}.multiSelectContainer{position:relative;text-align:left;width:100%}.disable_ms{opacity:.5;pointer-events:none}.display-none{display:none}.searchWrapper{border:1px solid #ccc;border-radius:4px;min-height:22px;padding:5px;position:relative}.multiSelectContainer input{background:transparent;border:none;margin-top:3px}.multiSelectContainer input:focus{outline:none}.chip{align-items:center;background:#0096fb;border-radius:11px;color:#fff;display:inline-flex;font-size:13px;line-height:19px;margin-bottom:5px;margin-right:5px;padding:4px 10px}.chip,.singleChip{white-space:nowrap}.singleChip{background:none;border-radius:none;color:inherit}.singleChip i{display:none}.closeIcon{cursor:pointer;float:right;height:13px;margin-left:5px;width:13px}.optionListContainer{background:#fff;border-radius:4px;margin-top:1px;position:absolute;width:100%;z-index:2}.multiSelectContainer ul{border:1px solid #ccc;border-radius:4px;display:block;margin:0;max-height:250px;overflow-y:auto;padding:0}.multiSelectContainer li{padding:10px}.multiSelectContainer li:hover{background:#0096fb;color:#fff;cursor:pointer}.checkbox{margin-right:10px}.disableSelection{opacity:.5;pointer-events:none}.highlightOption{background:#0096fb;color:#fff}.displayBlock{display:block}.displayNone{display:none}.notFound{display:block;padding:10px}.singleSelect{padding-right:20px}li.groupHeading{color:#908e8e;padding:5px 15px;pointer-events:none}li.groupChildEle{padding-left:30px}.icon_down_dir{position:absolute;right:10px;top:50%;transform:translateY(-50%);width:14px}.icon_down_dir:before{content:\\\"\\\\e803\\\"}.custom-close{display:flex}\";\nstyleInject(css_248z);\nvar CloseCircle = \"data:image/svg+xml,%3Csvg%20viewBox%3D%220%200%2096%2096%22%20%20%20%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%20%20%20%20%3Cstyle%20type%3D%22text%2Fcss%22%3E%20%20%20%20%20%20%20%20.st0%7B%20%20%20%20%20%20%20%20%20%20%20%20fill%3A%23fff%3B%20%20%20%20%20%20%20%20%7D%20%3C%2Fstyle%3E%20%20%20%20%3Cg%3E%20%20%20%20%20%20%20%20%3Cpath%20class%3D%22st0%22%20d%3D%22M48%2C0A48%2C48%2C0%2C1%2C0%2C96%2C48%2C48.0512%2C48.0512%2C0%2C0%2C0%2C48%2C0Zm0%2C84A36%2C36%2C0%2C1%2C1%2C84%2C48%2C36.0393%2C36.0393%2C0%2C0%2C1%2C48%2C84Z%22%2F%3E%20%20%20%20%20%20%20%20%3Cpath%20class%3D%22st0%22%20d%3D%22M64.2422%2C31.7578a5.9979%2C5.9979%2C0%2C0%2C0-8.4844%2C0L48%2C39.5156l-7.7578-7.7578a5.9994%2C5.9994%2C0%2C0%2C0-8.4844%2C8.4844L39.5156%2C48l-7.7578%2C7.7578a5.9994%2C5.9994%2C0%2C1%2C0%2C8.4844%2C8.4844L48%2C56.4844l7.7578%2C7.7578a5.9994%2C5.9994%2C0%2C0%2C0%2C8.4844-8.4844L56.4844%2C48l7.7578-7.7578A5.9979%2C5.9979%2C0%2C0%2C0%2C64.2422%2C31.7578Z%22%2F%3E%20%20%20%20%3C%2Fg%3E%3C%2Fsvg%3E\";\nvar CloseCircleDark = \"data:image/svg+xml,%3Csvg%20height%3D%22512px%22%20id%3D%22Layer_1%22%20style%3D%22enable-background%3Anew%200%200%20512%20512%3B%22%20version%3D%221.1%22%20viewBox%3D%220%200%20512%20512%22%20width%3D%22512px%22%20xml%3Aspace%3D%22preserve%22%20%20%20%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20%20%20%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%20%20%20%20%3Cstyle%20type%3D%22text%2Fcss%22%3E%20%20%20%20%20%20%20%20.st0%7B%20%20%20%20%20%20%20%20%20%20%20%20fill%3A%23fff%3B%20%20%20%20%20%20%20%20%7D%20%3C%2Fstyle%3E%20%20%20%20%3Cg%3E%20%20%20%20%20%20%20%20%3Cpath%20class%3D%22st0%22%20d%3D%22M256%2C33C132.3%2C33%2C32%2C133.3%2C32%2C257c0%2C123.7%2C100.3%2C224%2C224%2C224c123.7%2C0%2C224-100.3%2C224-224C480%2C133.3%2C379.7%2C33%2C256%2C33z%20%20%20%20M364.3%2C332.5c1.5%2C1.5%2C2.3%2C3.5%2C2.3%2C5.6c0%2C2.1-0.8%2C4.2-2.3%2C5.6l-21.6%2C21.7c-1.6%2C1.6-3.6%2C2.3-5.6%2C2.3c-2%2C0-4.1-0.8-5.6-2.3L256%2C289.8%20%20%20l-75.4%2C75.7c-1.5%2C1.6-3.6%2C2.3-5.6%2C2.3c-2%2C0-4.1-0.8-5.6-2.3l-21.6-21.7c-1.5-1.5-2.3-3.5-2.3-5.6c0-2.1%2C0.8-4.2%2C2.3-5.6l75.7-76%20%20%20l-75.9-75c-3.1-3.1-3.1-8.2%2C0-11.3l21.6-21.7c1.5-1.5%2C3.5-2.3%2C5.6-2.3c2.1%2C0%2C4.1%2C0.8%2C5.6%2C2.3l75.7%2C74.7l75.7-74.7%20%20%20c1.5-1.5%2C3.5-2.3%2C5.6-2.3c2.1%2C0%2C4.1%2C0.8%2C5.6%2C2.3l21.6%2C21.7c3.1%2C3.1%2C3.1%2C8.2%2C0%2C11.3l-75.9%2C75L364.3%2C332.5z%22%2F%3E%20%20%20%20%3C%2Fg%3E%3C%2Fsvg%3E\";\nvar CloseLine = \"data:image/svg+xml,%3Csvg%20height%3D%22512px%22%20id%3D%22Layer_1%22%20style%3D%22enable-background%3Anew%200%200%20512%20512%3B%22%20version%3D%221.1%22%20viewBox%3D%220%200%20512%20512%22%20width%3D%22512px%22%20xml%3Aspace%3D%22preserve%22%20%20%20%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20%20%20%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%20%20%20%20%3Cstyle%20type%3D%22text%2Fcss%22%3E%20%20%20%20%20%20%20%20.st0%7B%20%20%20%20%20%20%20%20%20%20%20%20fill%3A%23fff%3B%20%20%20%20%20%20%20%20%7D%20%3C%2Fstyle%3E%20%20%20%20%3Cpath%20class%3D%22st0%22%20d%3D%22M443.6%2C387.1L312.4%2C255.4l131.5-130c5.4-5.4%2C5.4-14.2%2C0-19.6l-37.4-37.6c-2.6-2.6-6.1-4-9.8-4c-3.7%2C0-7.2%2C1.5-9.8%2C4%20%20L256%2C197.8L124.9%2C68.3c-2.6-2.6-6.1-4-9.8-4c-3.7%2C0-7.2%2C1.5-9.8%2C4L68%2C105.9c-5.4%2C5.4-5.4%2C14.2%2C0%2C19.6l131.5%2C130L68.4%2C387.1%20%20c-2.6%2C2.6-4.1%2C6.1-4.1%2C9.8c0%2C3.7%2C1.4%2C7.2%2C4.1%2C9.8l37.4%2C37.6c2.7%2C2.7%2C6.2%2C4.1%2C9.8%2C4.1c3.5%2C0%2C7.1-1.3%2C9.8-4.1L256%2C313.1l130.7%2C131.1%20%20c2.7%2C2.7%2C6.2%2C4.1%2C9.8%2C4.1c3.5%2C0%2C7.1-1.3%2C9.8-4.1l37.4-37.6c2.6-2.6%2C4.1-6.1%2C4.1-9.8C447.7%2C393.2%2C446.2%2C389.7%2C443.6%2C387.1z%22%2F%3E%3C%2Fsvg%3E\";\nvar CloseSquare = \"data:image/svg+xml,%3Csvg%20height%3D%22135.467mm%22%20style%3D%22shape-rendering%3AgeometricPrecision%3B%20text-rendering%3AgeometricPrecision%3B%20image-rendering%3AoptimizeQuality%3B%20fill-rule%3Aevenodd%3B%20clip-rule%3Aevenodd%22%20viewBox%3D%220%200%2013547%2013547%22%20width%3D%22135.467mm%22%20xml%3Aspace%3D%22preserve%22%20%20%20%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20%20%20%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%20%20%20%20%3Cdefs%3E%20%20%20%20%20%20%20%20%3Cstyle%20type%3D%22text%2Fcss%22%3E%20%20%20%20%20%20%20%20%20%20%20%20.fil0%20%7Bfill%3Anone%7D%20%20%20%20%20%20%20%20%20%20%20%20.fil1%20%7Bfill%3A%23fff%7D%20%20%20%20%20%20%20%20%3C%2Fstyle%3E%20%20%20%20%3C%2Fdefs%3E%20%20%20%20%3Cg%20id%3D%22Ebene_x0020_1%22%3E%20%20%20%20%20%20%20%20%3Cpolygon%20class%3D%22fil0%22%20points%3D%220%2C0%2013547%2C0%2013547%2C13547%200%2C13547%20%22%2F%3E%20%20%20%20%20%20%20%20%3Cpath%20class%3D%22fil1%22%20d%3D%22M714%2012832l12118%200%200%20-12117%20-12118%200%200%2012117zm4188%20-2990l1871%20-1871%201871%201871%201197%20-1197%20-1871%20-1871%201871%20-1871%20-1197%20-1197%20-1871%201871%20-1871%20-1871%20-1197%201197%201871%201871%20-1871%201871%201197%201197z%22%2F%3E%20%20%20%20%3C%2Fg%3E%3C%2Fsvg%3E\";\nvar DownArrow = \"data:image/svg+xml,%3Csvg%20height%3D%2232%22%20viewBox%3D%220%200%2032%2032%22%20width%3D%2232%22%20%20%20%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%20%20%20%20%3Cg%20id%3D%22background%22%3E%20%20%20%20%20%20%20%20%3Crect%20fill%3D%22none%22%20height%3D%2232%22%20width%3D%2232%22%2F%3E%20%20%20%20%3C%2Fg%3E%20%20%20%20%3Cg%20id%3D%22arrow_x5F_down%22%3E%20%20%20%20%20%20%20%20%3Cpolygon%20points%3D%222.002%2C10%2016.001%2C24%2030.002%2C10%20%20%22%2F%3E%20%20%20%20%3C%2Fg%3E%3C%2Fsvg%3E\";\nvar closeIconTypes = {\n  circle: CloseCircleDark,\n  circle2: CloseCircle,\n  close: CloseSquare,\n  cancel: CloseLine\n};\n\nfunction useOutsideAlerter(ref, clickEvent) {\n  React.useEffect(function () {\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        clickEvent();\n      }\n    }\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return function () {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref]);\n}\n/**\r\n* Component that alerts if you click outside of it\r\n*/\n\n\nfunction OutsideAlerter(props) {\n  var wrapperRef = React.useRef(null);\n  useOutsideAlerter(wrapperRef, props.outsideClick);\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: wrapperRef\n  }, props.children);\n}\n\nvar Multiselect = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Multiselect, _React$Component);\n\n  function Multiselect(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      inputValue: \"\",\n      options: props.options,\n      filteredOptions: props.options,\n      unfilteredOptions: props.options,\n      selectedValues: Object.assign([], props.selectedValues),\n      preSelectedValues: Object.assign([], props.selectedValues),\n      toggleOptionsList: false,\n      highlightOption: props.avoidHighlightFirstOption ? -1 : 0,\n      showCheckbox: props.showCheckbox,\n      keepSearchTerm: props.keepSearchTerm,\n      groupedObject: [],\n      closeIconType: closeIconTypes[props.closeIcon] || closeIconTypes['circle']\n    }; // @ts-ignore\n\n    _this.optionTimeout = null; // @ts-ignore\n\n    _this.searchWrapper = /*#__PURE__*/React__default.createRef(); // @ts-ignore\n\n    _this.searchBox = /*#__PURE__*/React__default.createRef();\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.onKeyPress = _this.onKeyPress.bind(_assertThisInitialized(_this));\n    _this.onFocus = _this.onFocus.bind(_assertThisInitialized(_this));\n    _this.onBlur = _this.onBlur.bind(_assertThisInitialized(_this));\n    _this.renderMultiselectContainer = _this.renderMultiselectContainer.bind(_assertThisInitialized(_this));\n    _this.renderSelectedList = _this.renderSelectedList.bind(_assertThisInitialized(_this));\n    _this.onRemoveSelectedItem = _this.onRemoveSelectedItem.bind(_assertThisInitialized(_this));\n    _this.toggelOptionList = _this.toggelOptionList.bind(_assertThisInitialized(_this));\n    _this.onArrowKeyNavigation = _this.onArrowKeyNavigation.bind(_assertThisInitialized(_this));\n    _this.onSelectItem = _this.onSelectItem.bind(_assertThisInitialized(_this));\n    _this.filterOptionsByInput = _this.filterOptionsByInput.bind(_assertThisInitialized(_this));\n    _this.removeSelectedValuesFromOptions = _this.removeSelectedValuesFromOptions.bind(_assertThisInitialized(_this));\n    _this.isSelectedValue = _this.isSelectedValue.bind(_assertThisInitialized(_this));\n    _this.fadeOutSelection = _this.fadeOutSelection.bind(_assertThisInitialized(_this));\n    _this.isDisablePreSelectedValues = _this.isDisablePreSelectedValues.bind(_assertThisInitialized(_this));\n    _this.renderGroupByOptions = _this.renderGroupByOptions.bind(_assertThisInitialized(_this));\n    _this.renderNormalOption = _this.renderNormalOption.bind(_assertThisInitialized(_this));\n    _this.listenerCallback = _this.listenerCallback.bind(_assertThisInitialized(_this));\n    _this.resetSelectedValues = _this.resetSelectedValues.bind(_assertThisInitialized(_this));\n    _this.getSelectedItems = _this.getSelectedItems.bind(_assertThisInitialized(_this));\n    _this.getSelectedItemsCount = _this.getSelectedItemsCount.bind(_assertThisInitialized(_this));\n    _this.hideOnClickOutside = _this.hideOnClickOutside.bind(_assertThisInitialized(_this));\n    _this.onCloseOptionList = _this.onCloseOptionList.bind(_assertThisInitialized(_this));\n    _this.isVisible = _this.isVisible.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Multiselect.prototype;\n\n  _proto.initialSetValue = function initialSetValue() {\n    var _this$props = this.props,\n        showCheckbox = _this$props.showCheckbox,\n        groupBy = _this$props.groupBy,\n        singleSelect = _this$props.singleSelect;\n    var options = this.state.options;\n\n    if (!showCheckbox && !singleSelect) {\n      this.removeSelectedValuesFromOptions(false);\n    } // if (singleSelect) {\n    //   this.hideOnClickOutside();\n    // }\n\n\n    if (groupBy) {\n      this.groupByOptions(options);\n    }\n  };\n\n  _proto.resetSelectedValues = function resetSelectedValues() {\n    var _this2 = this;\n\n    var unfilteredOptions = this.state.unfilteredOptions;\n    return new Promise(function (resolve) {\n      _this2.setState({\n        selectedValues: [],\n        preSelectedValues: [],\n        options: unfilteredOptions,\n        filteredOptions: unfilteredOptions\n      }, function () {\n        // @ts-ignore\n        resolve();\n\n        _this2.initialSetValue();\n      });\n    });\n  };\n\n  _proto.getSelectedItems = function getSelectedItems() {\n    return this.state.selectedValues;\n  };\n\n  _proto.getSelectedItemsCount = function getSelectedItemsCount() {\n    return this.state.selectedValues.length;\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.initialSetValue(); // @ts-ignore\n\n    this.searchWrapper.current.addEventListener(\"click\", this.listenerCallback);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this$props2 = this.props,\n        options = _this$props2.options,\n        selectedValues = _this$props2.selectedValues;\n    var prevOptions = prevProps.options,\n        prevSelectedvalues = prevProps.selectedValues;\n\n    if (JSON.stringify(prevOptions) !== JSON.stringify(options)) {\n      this.setState({\n        options: options,\n        filteredOptions: options,\n        unfilteredOptions: options\n      }, this.initialSetValue);\n    }\n\n    if (JSON.stringify(prevSelectedvalues) !== JSON.stringify(selectedValues)) {\n      this.setState({\n        selectedValues: Object.assign([], selectedValues),\n        preSelectedValues: Object.assign([], selectedValues)\n      }, this.initialSetValue);\n    }\n  };\n\n  _proto.listenerCallback = function listenerCallback() {\n    // @ts-ignore\n    this.searchBox.current.focus();\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    // @ts-ignore\n    if (this.optionTimeout) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    } // @ts-ignore\n\n\n    this.searchWrapper.current.removeEventListener('click', this.listenerCallback);\n  } // Skipcheck flag - value will be true when the func called from on deselect anything.\n  ;\n\n  _proto.removeSelectedValuesFromOptions = function removeSelectedValuesFromOptions(skipCheck) {\n    var _this$props3 = this.props,\n        isObject = _this$props3.isObject,\n        displayValue = _this$props3.displayValue,\n        groupBy = _this$props3.groupBy;\n    var _this$state = this.state,\n        _this$state$selectedV = _this$state.selectedValues,\n        selectedValues = _this$state$selectedV === void 0 ? [] : _this$state$selectedV,\n        unfilteredOptions = _this$state.unfilteredOptions,\n        options = _this$state.options;\n\n    if (!skipCheck && groupBy) {\n      this.groupByOptions(options);\n    }\n\n    if (!selectedValues.length && !skipCheck) {\n      return;\n    }\n\n    if (isObject) {\n      var _optionList = unfilteredOptions.filter(function (item) {\n        return selectedValues.findIndex(function (v) {\n          return v[displayValue] === item[displayValue];\n        }) === -1 ? true : false;\n      });\n\n      if (groupBy) {\n        this.groupByOptions(_optionList);\n      }\n\n      this.setState({\n        options: _optionList,\n        filteredOptions: _optionList\n      }, this.filterOptionsByInput);\n      return;\n    }\n\n    var optionList = unfilteredOptions.filter(function (item) {\n      return selectedValues.indexOf(item) === -1;\n    });\n    this.setState({\n      options: optionList,\n      filteredOptions: optionList\n    }, this.filterOptionsByInput);\n  };\n\n  _proto.groupByOptions = function groupByOptions(options) {\n    var groupBy = this.props.groupBy;\n    var groupedObject = options.reduce(function (r, a) {\n      var key = a[groupBy] || \"Others\";\n      r[key] = r[key] || [];\n      r[key].push(a);\n      return r;\n    }, Object.create({}));\n    this.setState({\n      groupedObject: groupedObject\n    });\n  };\n\n  _proto.onChange = function onChange(event) {\n    var onSearch = this.props.onSearch;\n    this.setState({\n      inputValue: event.target.value\n    }, this.filterOptionsByInput);\n\n    if (onSearch) {\n      onSearch(event.target.value);\n    }\n  };\n\n  _proto.onKeyPress = function onKeyPress(event) {\n    var onKeyPressFn = this.props.onKeyPressFn;\n\n    if (onKeyPressFn) {\n      onKeyPressFn(event, event.target.value);\n    }\n  };\n\n  _proto.filterOptionsByInput = function filterOptionsByInput() {\n    var _this3 = this;\n\n    var _this$state2 = this.state,\n        options = _this$state2.options,\n        filteredOptions = _this$state2.filteredOptions,\n        inputValue = _this$state2.inputValue;\n    var _this$props4 = this.props,\n        isObject = _this$props4.isObject,\n        displayValue = _this$props4.displayValue;\n\n    if (isObject) {\n      options = filteredOptions.filter(function (i) {\n        return _this3.matchValues(i[displayValue], inputValue);\n      });\n    } else {\n      options = filteredOptions.filter(function (i) {\n        return _this3.matchValues(i, inputValue);\n      });\n    }\n\n    this.groupByOptions(options);\n    this.setState({\n      options: options\n    });\n  };\n\n  _proto.matchValues = function matchValues(value, search) {\n    if (this.props.caseSensitiveSearch) {\n      return value.indexOf(search) > -1;\n    }\n\n    if (value.toLowerCase) {\n      return value.toLowerCase().indexOf(search.toLowerCase()) > -1;\n    }\n\n    return value.toString().indexOf(search) > -1;\n  };\n\n  _proto.onArrowKeyNavigation = function onArrowKeyNavigation(e) {\n    var _this$state3 = this.state,\n        options = _this$state3.options,\n        highlightOption = _this$state3.highlightOption,\n        toggleOptionsList = _this$state3.toggleOptionsList,\n        inputValue = _this$state3.inputValue,\n        selectedValues = _this$state3.selectedValues;\n    var disablePreSelectedValues = this.props.disablePreSelectedValues;\n\n    if (e.keyCode === 8 && !inputValue && !disablePreSelectedValues && selectedValues.length) {\n      this.onRemoveSelectedItem(selectedValues.length - 1);\n    }\n\n    if (!options.length) {\n      return;\n    }\n\n    if (e.keyCode === 38) {\n      if (highlightOption > 0) {\n        this.setState(function (previousState) {\n          return {\n            highlightOption: previousState.highlightOption - 1\n          };\n        });\n      } else {\n        this.setState({\n          highlightOption: options.length - 1\n        });\n      }\n    } else if (e.keyCode === 40) {\n      if (highlightOption < options.length - 1) {\n        this.setState(function (previousState) {\n          return {\n            highlightOption: previousState.highlightOption + 1\n          };\n        });\n      } else {\n        this.setState({\n          highlightOption: 0\n        });\n      }\n    } else if (e.key === \"Enter\" && options.length && toggleOptionsList) {\n      if (highlightOption === -1) {\n        return;\n      }\n\n      this.onSelectItem(options[highlightOption]);\n    } // TODO: Instead of scrollIntoView need to find better soln for scroll the dropwdown container.\n    // setTimeout(() => {\n    //   const element = document.querySelector(\"ul.optionContainer .highlight\");\n    //   if (element) {\n    //     element.scrollIntoView();\n    //   }\n    // });\n\n  };\n\n  _proto.onRemoveSelectedItem = function onRemoveSelectedItem(item) {\n    var _this4 = this;\n\n    var _this$state4 = this.state,\n        selectedValues = _this$state4.selectedValues,\n        _this$state4$index = _this$state4.index,\n        index = _this$state4$index === void 0 ? 0 : _this$state4$index;\n    var _this$props5 = this.props,\n        onRemove = _this$props5.onRemove,\n        showCheckbox = _this$props5.showCheckbox,\n        displayValue = _this$props5.displayValue,\n        isObject = _this$props5.isObject;\n\n    if (isObject) {\n      index = selectedValues.findIndex(function (i) {\n        return i[displayValue] === item[displayValue];\n      });\n    } else {\n      index = selectedValues.indexOf(item);\n    }\n\n    selectedValues.splice(index, 1);\n    onRemove(selectedValues, item);\n    this.setState({\n      selectedValues: selectedValues\n    }, function () {\n      if (!showCheckbox) {\n        _this4.removeSelectedValuesFromOptions(true);\n      }\n    });\n\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  };\n\n  _proto.onSelectItem = function onSelectItem(item) {\n    var _this5 = this;\n\n    var selectedValues = this.state.selectedValues;\n    var _this$props6 = this.props,\n        selectionLimit = _this$props6.selectionLimit,\n        onSelect = _this$props6.onSelect,\n        singleSelect = _this$props6.singleSelect,\n        showCheckbox = _this$props6.showCheckbox;\n\n    if (!this.state.keepSearchTerm) {\n      this.setState({\n        inputValue: ''\n      });\n    }\n\n    if (singleSelect) {\n      this.onSingleSelect(item);\n      onSelect([item], item);\n      return;\n    }\n\n    if (this.isSelectedValue(item)) {\n      this.onRemoveSelectedItem(item);\n      return;\n    }\n\n    if (selectionLimit == selectedValues.length) {\n      return;\n    }\n\n    selectedValues.push(item);\n    onSelect(selectedValues, item);\n    this.setState({\n      selectedValues: selectedValues\n    }, function () {\n      if (!showCheckbox) {\n        _this5.removeSelectedValuesFromOptions(true);\n      } else {\n        _this5.filterOptionsByInput();\n      }\n    });\n\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  };\n\n  _proto.onSingleSelect = function onSingleSelect(item) {\n    this.setState({\n      selectedValues: [item],\n      toggleOptionsList: false\n    });\n  };\n\n  _proto.isSelectedValue = function isSelectedValue(item) {\n    var _this$props7 = this.props,\n        isObject = _this$props7.isObject,\n        displayValue = _this$props7.displayValue;\n    var selectedValues = this.state.selectedValues;\n\n    if (isObject) {\n      return selectedValues.filter(function (i) {\n        return i[displayValue] === item[displayValue];\n      }).length > 0;\n    }\n\n    return selectedValues.filter(function (i) {\n      return i === item;\n    }).length > 0;\n  };\n\n  _proto.renderOptionList = function renderOptionList() {\n    var _this$props8 = this.props,\n        groupBy = _this$props8.groupBy,\n        style = _this$props8.style,\n        emptyRecordMsg = _this$props8.emptyRecordMsg,\n        loading = _this$props8.loading,\n        _this$props8$loadingM = _this$props8.loadingMessage,\n        loadingMessage = _this$props8$loadingM === void 0 ? 'loading...' : _this$props8$loadingM;\n    var options = this.state.options;\n\n    if (loading) {\n      return /*#__PURE__*/React__default.createElement(\"ul\", {\n        className: \"optionContainer\",\n        style: style['optionContainer']\n      }, typeof loadingMessage === 'string' && /*#__PURE__*/React__default.createElement(\"span\", {\n        style: style['loadingMessage'],\n        className: \"notFound\"\n      }, loadingMessage), typeof loadingMessage !== 'string' && loadingMessage);\n    }\n\n    return /*#__PURE__*/React__default.createElement(\"ul\", {\n      className: \"optionContainer\",\n      style: style['optionContainer']\n    }, options.length === 0 && /*#__PURE__*/React__default.createElement(\"span\", {\n      style: style['notFound'],\n      className: \"notFound\"\n    }, emptyRecordMsg), !groupBy ? this.renderNormalOption() : this.renderGroupByOptions());\n  };\n\n  _proto.renderGroupByOptions = function renderGroupByOptions() {\n    var _this6 = this;\n\n    var _this$props9 = this.props,\n        _this$props9$isObject = _this$props9.isObject,\n        isObject = _this$props9$isObject === void 0 ? false : _this$props9$isObject,\n        displayValue = _this$props9.displayValue,\n        showCheckbox = _this$props9.showCheckbox,\n        style = _this$props9.style,\n        singleSelect = _this$props9.singleSelect;\n    var groupedObject = this.state.groupedObject;\n    return Object.keys(groupedObject).map(function (obj) {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, {\n        key: obj\n      }, /*#__PURE__*/React__default.createElement(\"li\", {\n        className: \"groupHeading\",\n        style: style['groupHeading']\n      }, obj), groupedObject[obj].map(function (option, i) {\n        var isSelected = _this6.isSelectedValue(option);\n\n        return /*#__PURE__*/React__default.createElement(\"li\", {\n          key: \"option\" + i,\n          style: style['option'],\n          className: \"groupChildEle option \" + (isSelected ? 'selected' : '') + \" \" + (_this6.fadeOutSelection(option) ? 'disableSelection' : '') + \" \" + (_this6.isDisablePreSelectedValues(option) ? 'disableSelection' : ''),\n          onClick: function onClick() {\n            return _this6.onSelectItem(option);\n          }\n        }, showCheckbox && !singleSelect && /*#__PURE__*/React__default.createElement(\"input\", {\n          type: \"checkbox\",\n          className: 'checkbox',\n          readOnly: true,\n          checked: isSelected\n        }), _this6.props.optionValueDecorator(isObject ? option[displayValue] : (option || '').toString(), option));\n      }));\n    });\n  };\n\n  _proto.renderNormalOption = function renderNormalOption() {\n    var _this7 = this;\n\n    var _this$props10 = this.props,\n        _this$props10$isObjec = _this$props10.isObject,\n        isObject = _this$props10$isObjec === void 0 ? false : _this$props10$isObjec,\n        displayValue = _this$props10.displayValue,\n        showCheckbox = _this$props10.showCheckbox,\n        style = _this$props10.style,\n        singleSelect = _this$props10.singleSelect;\n    var highlightOption = this.state.highlightOption;\n    return this.state.options.map(function (option, i) {\n      var isSelected = _this7.isSelectedValue(option);\n\n      return /*#__PURE__*/React__default.createElement(\"li\", {\n        key: \"option\" + i,\n        style: style['option'],\n        className: \"option \" + (isSelected ? 'selected' : '') + \" \" + (highlightOption === i ? \"highlightOption highlight\" : \"\") + \" \" + (_this7.fadeOutSelection(option) ? 'disableSelection' : '') + \" \" + (_this7.isDisablePreSelectedValues(option) ? 'disableSelection' : ''),\n        onClick: function onClick() {\n          return _this7.onSelectItem(option);\n        }\n      }, showCheckbox && !singleSelect && /*#__PURE__*/React__default.createElement(\"input\", {\n        type: \"checkbox\",\n        readOnly: true,\n        className: \"checkbox\",\n        checked: isSelected\n      }), _this7.props.optionValueDecorator(isObject ? option[displayValue] : (option || '').toString(), option));\n    });\n  };\n\n  _proto.renderSelectedList = function renderSelectedList() {\n    var _this8 = this;\n\n    var _this$props11 = this.props,\n        _this$props11$isObjec = _this$props11.isObject,\n        isObject = _this$props11$isObjec === void 0 ? false : _this$props11$isObjec,\n        displayValue = _this$props11.displayValue,\n        style = _this$props11.style,\n        singleSelect = _this$props11.singleSelect,\n        customCloseIcon = _this$props11.customCloseIcon;\n    var _this$state5 = this.state,\n        selectedValues = _this$state5.selectedValues,\n        closeIconType = _this$state5.closeIconType;\n    return selectedValues.map(function (value, index) {\n      return /*#__PURE__*/React__default.createElement(\"span\", {\n        className: \"chip  \" + (singleSelect && 'singleChip') + \" \" + (_this8.isDisablePreSelectedValues(value) && 'disableSelection'),\n        key: index,\n        style: style['chips']\n      }, _this8.props.selectedValueDecorator(!isObject ? (value || '').toString() : value[displayValue], value), !_this8.isDisablePreSelectedValues(value) && (!customCloseIcon ? /*#__PURE__*/React__default.createElement(\"img\", {\n        className: \"icon_cancel closeIcon\",\n        src: closeIconType,\n        onClick: function onClick() {\n          return _this8.onRemoveSelectedItem(value);\n        }\n      }) : /*#__PURE__*/React__default.createElement(\"i\", {\n        className: \"custom-close\",\n        onClick: function onClick() {\n          return _this8.onRemoveSelectedItem(value);\n        }\n      }, customCloseIcon)));\n    });\n  };\n\n  _proto.isDisablePreSelectedValues = function isDisablePreSelectedValues(value) {\n    var _this$props12 = this.props,\n        isObject = _this$props12.isObject,\n        disablePreSelectedValues = _this$props12.disablePreSelectedValues,\n        displayValue = _this$props12.displayValue;\n    var preSelectedValues = this.state.preSelectedValues;\n\n    if (!disablePreSelectedValues || !preSelectedValues.length) {\n      return false;\n    }\n\n    if (isObject) {\n      return preSelectedValues.filter(function (i) {\n        return i[displayValue] === value[displayValue];\n      }).length > 0;\n    }\n\n    return preSelectedValues.filter(function (i) {\n      return i === value;\n    }).length > 0;\n  };\n\n  _proto.fadeOutSelection = function fadeOutSelection(item) {\n    var _this$props13 = this.props,\n        selectionLimit = _this$props13.selectionLimit,\n        showCheckbox = _this$props13.showCheckbox,\n        singleSelect = _this$props13.singleSelect;\n\n    if (singleSelect) {\n      return;\n    }\n\n    var selectedValues = this.state.selectedValues;\n\n    if (selectionLimit == -1) {\n      return false;\n    }\n\n    if (selectionLimit != selectedValues.length) {\n      return false;\n    }\n\n    if (selectionLimit == selectedValues.length) {\n      if (!showCheckbox) {\n        return true;\n      } else {\n        if (this.isSelectedValue(item)) {\n          return false;\n        }\n\n        return true;\n      }\n    }\n  };\n\n  _proto.toggelOptionList = function toggelOptionList() {\n    this.setState({\n      toggleOptionsList: !this.state.toggleOptionsList,\n      highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0\n    });\n  };\n\n  _proto.onCloseOptionList = function onCloseOptionList() {\n    this.setState({\n      toggleOptionsList: false,\n      highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0,\n      inputValue: ''\n    });\n  };\n\n  _proto.onFocus = function onFocus() {\n    if (this.state.toggleOptionsList) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    } else {\n      this.toggelOptionList();\n    }\n  };\n\n  _proto.onBlur = function onBlur() {\n    this.setState({\n      inputValue: ''\n    }, this.filterOptionsByInput); // @ts-ignore\n\n    this.optionTimeout = setTimeout(this.onCloseOptionList, 250);\n  };\n\n  _proto.isVisible = function isVisible(elem) {\n    return !!elem && !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\n  };\n\n  _proto.hideOnClickOutside = function hideOnClickOutside() {\n    var _this9 = this;\n\n    var element = document.getElementsByClassName('multiselect-container')[0];\n\n    var outsideClickListener = function outsideClickListener(event) {\n      if (element && !element.contains(event.target) && _this9.isVisible(element)) {\n        _this9.toggelOptionList();\n      }\n    };\n\n    document.addEventListener('click', outsideClickListener);\n  };\n\n  _proto.renderMultiselectContainer = function renderMultiselectContainer() {\n    var _this$state6 = this.state,\n        inputValue = _this$state6.inputValue,\n        toggleOptionsList = _this$state6.toggleOptionsList,\n        selectedValues = _this$state6.selectedValues;\n    var _this$props14 = this.props,\n        placeholder = _this$props14.placeholder,\n        style = _this$props14.style,\n        singleSelect = _this$props14.singleSelect,\n        id = _this$props14.id,\n        name = _this$props14.name,\n        hidePlaceholder = _this$props14.hidePlaceholder,\n        disable = _this$props14.disable,\n        showArrow = _this$props14.showArrow,\n        className = _this$props14.className,\n        customArrow = _this$props14.customArrow,\n        hideSelectedList = _this$props14.hideSelectedList;\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"multiselect-container multiSelectContainer \" + (disable ? \"disable_ms\" : '') + \" \" + (className || ''),\n      id: id || 'multiselectContainerReact',\n      style: style['multiselectContainer']\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"search-wrapper searchWrapper \" + (singleSelect ? 'singleSelect' : ''),\n      ref: this.searchWrapper,\n      style: style['searchBox'],\n      onClick: singleSelect ? this.toggelOptionList : function () {}\n    }, !hideSelectedList && this.renderSelectedList(), /*#__PURE__*/React__default.createElement(\"input\", {\n      type: \"text\",\n      ref: this.searchBox,\n      className: \"searchBox \" + (singleSelect && selectedValues.length ? 'display-none' : ''),\n      id: (id || 'search') + \"_input\",\n      name: (name || 'search_name') + \"_input\",\n      onChange: this.onChange,\n      onKeyPress: this.onKeyPress,\n      value: inputValue,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      placeholder: singleSelect && selectedValues.length || hidePlaceholder && selectedValues.length ? '' : placeholder,\n      onKeyDown: this.onArrowKeyNavigation,\n      style: style['inputField'],\n      autoComplete: \"off\",\n      disabled: singleSelect || disable\n    }), (singleSelect || showArrow) && /*#__PURE__*/React__default.createElement(React__default.Fragment, null, customArrow ? /*#__PURE__*/React__default.createElement(\"span\", {\n      className: \"icon_down_dir\"\n    }, customArrow) : /*#__PURE__*/React__default.createElement(\"img\", {\n      src: DownArrow,\n      className: \"icon_cancel icon_down_dir\"\n    }))), /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"optionListContainer \" + (toggleOptionsList ? 'displayBlock' : 'displayNone'),\n      onMouseDown: function onMouseDown(e) {\n        e.preventDefault();\n      }\n    }, this.renderOptionList()));\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React__default.createElement(OutsideAlerter, {\n      outsideClick: this.onCloseOptionList\n    }, this.renderMultiselectContainer());\n  };\n\n  return Multiselect;\n}(React__default.Component);\n\nMultiselect.defaultProps = {\n  options: [],\n  disablePreSelectedValues: false,\n  selectedValues: [],\n  isObject: true,\n  displayValue: \"model\",\n  showCheckbox: false,\n  selectionLimit: -1,\n  placeholder: \"Select\",\n  groupBy: \"\",\n  style: {},\n  emptyRecordMsg: \"No Options Available\",\n  onSelect: function onSelect() {},\n  onRemove: function onRemove() {},\n  onKeyPressFn: function onKeyPressFn() {},\n  closeIcon: 'circle2',\n  singleSelect: false,\n  caseSensitiveSearch: false,\n  id: '',\n  name: '',\n  closeOnSelect: true,\n  avoidHighlightFirstOption: false,\n  hidePlaceholder: false,\n  showArrow: false,\n  keepSearchTerm: false,\n  customCloseIcon: '',\n  className: '',\n  customArrow: undefined,\n  selectedValueDecorator: function selectedValueDecorator(v) {\n    return v;\n  },\n  optionValueDecorator: function optionValueDecorator(v) {\n    return v;\n  }\n};\nexports.Multiselect = Multiselect;\nexports.default = Multiselect;","map":{"version":3,"sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/multiselect/multiselect.component.tsx"],"names":["closeIconTypes","circle","circle2","close","cancel","CloseLine","useEffect","ref","event","clickEvent","document","wrapperRef","useRef","useOutsideAlerter","props","Multiselect","React","inputValue","options","filteredOptions","unfilteredOptions","selectedValues","Object","preSelectedValues","toggleOptionsList","highlightOption","showCheckbox","keepSearchTerm","groupedObject","closeIconType","initialSetValue","groupBy","singleSelect","resetSelectedValues","resolve","getSelectedItems","getSelectedItemsCount","componentDidMount","componentDidUpdate","prevOptions","prevSelectedvalues","prevProps","JSON","listenerCallback","componentWillUnmount","clearTimeout","removeSelectedValuesFromOptions","isObject","displayValue","optionList","v","item","groupByOptions","key","a","r","onChange","onSearch","value","onKeyPress","onKeyPressFn","filterOptionsByInput","i","matchValues","search","onArrowKeyNavigation","disablePreSelectedValues","e","previousState","onRemoveSelectedItem","index","onRemove","onSelectItem","selectionLimit","onSelect","onSingleSelect","isSelectedValue","renderOptionList","style","emptyRecordMsg","loading","loadingMessage","className","renderGroupByOptions","obj","isSelected","onClick","type","readOnly","checked","option","renderNormalOption","renderSelectedList","customCloseIcon","src","isDisablePreSelectedValues","fadeOutSelection","toggelOptionList","onCloseOptionList","onFocus","onBlur","setTimeout","isVisible","elem","hideOnClickOutside","element","outsideClickListener","renderMultiselectContainer","placeholder","id","name","hidePlaceholder","disable","showArrow","customArrow","hideSelectedList","searchWrapper","searchBox","onKeyDown","autoComplete","disabled","DownArrow","onMouseDown","render","outsideClick","closeIcon","caseSensitiveSearch","closeOnSelect","avoidHighlightFirstOption","selectedValueDecorator","optionValueDecorator"],"mappings":"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","sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// @ts-nocheck\nimport React, { useRef, useEffect } from \"react\";\nimport \"./styles.css\";\nimport CloseCircle from '../assets/svg/closeCircle.svg';\nimport CloseCircleDark from '../assets/svg/closeCircleDark.svg';\nimport CloseLine from '../assets/svg/closeLine.svg';\nimport CloseSquare from '../assets/svg/closeSquare.svg';\nimport DownArrow from '../assets/svg/downArrow.svg';\nimport {IMultiselectProps} from \"./interface\";\n\nconst closeIconTypes = {\n  circle: CloseCircleDark,\n  circle2: CloseCircle,\n  close: CloseSquare,\n  cancel: CloseLine\n};\n\nfunction useOutsideAlerter(ref, clickEvent) {\n  useEffect(() => {\n      function handleClickOutside(event) {\n          if (ref.current && !ref.current.contains(event.target)) {\n            clickEvent();\n          }\n      }\n\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n  }, [ref]);\n}\n\n/**\n* Component that alerts if you click outside of it\n*/\nfunction OutsideAlerter(props) {\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef, props.outsideClick);\n  return <div ref={wrapperRef}>{props.children}</div>;\n}\n\nexport class Multiselect extends React.Component<IMultiselectProps, any> {\n  static defaultProps: IMultiselectProps;\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      options: props.options,\n      filteredOptions: props.options,\n      unfilteredOptions: props.options,\n      selectedValues: Object.assign([], props.selectedValues),\n      preSelectedValues: Object.assign([], props.selectedValues),\n      toggleOptionsList: false,\n      highlightOption: props.avoidHighlightFirstOption ? -1 : 0,\n\t\t\tshowCheckbox: props.showCheckbox,\n      keepSearchTerm: props.keepSearchTerm,\n      groupedObject: [],\n      closeIconType: closeIconTypes[props.closeIcon] || closeIconTypes['circle']\n    };\n    // @ts-ignore\n    this.optionTimeout = null;\n    // @ts-ignore\n\t\tthis.searchWrapper = React.createRef();\n    // @ts-ignore\n\t\tthis.searchBox = React.createRef();\n    this.onChange = this.onChange.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.renderMultiselectContainer = this.renderMultiselectContainer.bind(this);\n    this.renderSelectedList = this.renderSelectedList.bind(this);\n    this.onRemoveSelectedItem = this.onRemoveSelectedItem.bind(this);\n    this.toggelOptionList = this.toggelOptionList.bind(this);\n    this.onArrowKeyNavigation = this.onArrowKeyNavigation.bind(this);\n    this.onSelectItem = this.onSelectItem.bind(this);\n    this.filterOptionsByInput = this.filterOptionsByInput.bind(this);\n    this.removeSelectedValuesFromOptions = this.removeSelectedValuesFromOptions.bind(this);\n    this.isSelectedValue = this.isSelectedValue.bind(this);\n    this.fadeOutSelection = this.fadeOutSelection.bind(this);\n    this.isDisablePreSelectedValues = this.isDisablePreSelectedValues.bind(this);\n    this.renderGroupByOptions = this.renderGroupByOptions.bind(this);\n    this.renderNormalOption = this.renderNormalOption.bind(this);\n    this.listenerCallback = this.listenerCallback.bind(this);\n    this.resetSelectedValues = this.resetSelectedValues.bind(this);\n    this.getSelectedItems = this.getSelectedItems.bind(this);\n    this.getSelectedItemsCount = this.getSelectedItemsCount.bind(this);\n    this.hideOnClickOutside = this.hideOnClickOutside.bind(this);\n    this.onCloseOptionList = this.onCloseOptionList.bind(this);\n    this.isVisible = this.isVisible.bind(this);\n  }\n\n  initialSetValue() {\n    const { showCheckbox, groupBy, singleSelect } = this.props;\n\t\tconst { options } = this.state;\n    if (!showCheckbox && !singleSelect) {\n      this.removeSelectedValuesFromOptions(false);\n\t\t}\n    // if (singleSelect) {\n    //   this.hideOnClickOutside();\n    // }\n\t\tif (groupBy) {\n\t\t\tthis.groupByOptions(options);\n\t\t}\n  }\n\n  resetSelectedValues() {\n    const { unfilteredOptions } = this.state;\n    return new Promise((resolve) => {\n      this.setState({\n        selectedValues: [],\n        preSelectedValues: [],\n        options: unfilteredOptions,\n        filteredOptions: unfilteredOptions\n      }, () => {\n        // @ts-ignore\n        resolve();\n        this.initialSetValue();\n      });\n    });\n  }\n\n  getSelectedItems() {\n    return this.state.selectedValues;\n  }\n\n  getSelectedItemsCount() {\n    return this.state.selectedValues.length;\n  }\n\n  componentDidMount() {\n\t\tthis.initialSetValue();\n    // @ts-ignore\n    this.searchWrapper.current.addEventListener(\"click\", this.listenerCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedValues } = this.props;\n    const { options: prevOptions, selectedValues: prevSelectedvalues } = prevProps;\n    if (JSON.stringify(prevOptions) !== JSON.stringify(options)) {\n      this.setState({ options, filteredOptions: options, unfilteredOptions: options }, this.initialSetValue);\n    }\n    if (JSON.stringify(prevSelectedvalues) !== JSON.stringify(selectedValues)) {\n      this.setState({ selectedValues: Object.assign([], selectedValues), preSelectedValues: Object.assign([], selectedValues) }, this.initialSetValue);\n    }\n  }\n\n  listenerCallback() {\n    // @ts-ignore\n    this.searchBox.current.focus();\n  }\n\n  componentWillUnmount() {\n    // @ts-ignore\n    if (this.optionTimeout) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    }\n    // @ts-ignore\n    this.searchWrapper.current.removeEventListener('click', this.listenerCallback);\n  }\n\n  // Skipcheck flag - value will be true when the func called from on deselect anything.\n  removeSelectedValuesFromOptions(skipCheck) {\n    const { isObject, displayValue, groupBy } = this.props;\n    const { selectedValues = [], unfilteredOptions, options } = this.state;\n    if (!skipCheck && groupBy) {\n      this.groupByOptions(options);\n    }\n    if (!selectedValues.length && !skipCheck) {\n      return;\n    }\n    if (isObject) {\n      let optionList = unfilteredOptions.filter(item => {\n        return selectedValues.findIndex(\n          v => v[displayValue] === item[displayValue]\n        ) === -1\n          ? true\n          : false;\n      });\n      if (groupBy) {\n        this.groupByOptions(optionList);\n      }\n      this.setState(\n        { options: optionList, filteredOptions: optionList },\n        this.filterOptionsByInput\n      );\n      return;\n    }\n    let optionList = unfilteredOptions.filter(\n      item => selectedValues.indexOf(item) === -1\n    );\n\n    this.setState(\n      { options: optionList, filteredOptions: optionList },\n      this.filterOptionsByInput\n    );\n  }\n\n  groupByOptions(options) {\n    const { groupBy } = this.props;\n    const groupedObject = options.reduce(function(r, a) {\n      const key = a[groupBy] || \"Others\";\n      r[key] = r[key] || [];\n      r[key].push(a);\n      return r;\n    }, Object.create({}));\n\n    this.setState({ groupedObject });\n  }\n\n  onChange(event) {\n    const { onSearch } = this.props;\n    this.setState(\n      { inputValue: event.target.value },\n      this.filterOptionsByInput\n    );\n    if (onSearch) {\n      onSearch(event.target.value);\n    }\n  }\n\n  onKeyPress(event) {\n    const { onKeyPressFn } = this.props;\n    if (onKeyPressFn) {\n        onKeyPressFn(event, event.target.value);\n    }\n  }\n\n  filterOptionsByInput() {\n    let { options, filteredOptions, inputValue } = this.state;\n    const { isObject, displayValue } = this.props;\n    if (isObject) {\n      options = filteredOptions.filter(i => this.matchValues(i[displayValue], inputValue))\n    } else {\n      options = filteredOptions.filter(i => this.matchValues(i, inputValue));\n    }\n    this.groupByOptions(options);\n    this.setState({ options });\n  }\n\n  matchValues(value, search) {\n    if (this.props.caseSensitiveSearch) {\n      return value.indexOf(search) > -1;\n    }\n    if (value.toLowerCase) {\n      return value.toLowerCase().indexOf(search.toLowerCase()) > -1;\n    }\n    return value.toString().indexOf(search) > -1;\n  }\n\n  onArrowKeyNavigation(e) {\n    const {\n      options,\n      highlightOption,\n      toggleOptionsList,\n      inputValue,\n      selectedValues\n    } = this.state;\n    const { disablePreSelectedValues } = this.props;\n    if (e.keyCode === 8 && !inputValue && !disablePreSelectedValues && selectedValues.length) {\n      this.onRemoveSelectedItem(selectedValues.length - 1);\n    }\n    if (!options.length) {\n      return;\n    }\n    if (e.keyCode === 38) {\n      if (highlightOption > 0) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption - 1\n        }));\n      } else {\n        this.setState({ highlightOption: options.length - 1 });\n      }\n    } else if (e.keyCode === 40) {\n      if (highlightOption < options.length - 1) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption + 1\n        }));\n      } else {\n        this.setState({ highlightOption: 0 });\n      }\n    } else if (e.key === \"Enter\" && options.length && toggleOptionsList) {\n      if (highlightOption === -1) {\n        return;\n      }\n      this.onSelectItem(options[highlightOption]);\n    }\n    // TODO: Instead of scrollIntoView need to find better soln for scroll the dropwdown container.\n    // setTimeout(() => {\n    //   const element = document.querySelector(\"ul.optionContainer .highlight\");\n    //   if (element) {\n    //     element.scrollIntoView();\n    //   }\n    // });\n  }\n\n  onRemoveSelectedItem(item) {\n\t\tlet { selectedValues, index = 0 } = this.state;\n\t\tconst { onRemove, showCheckbox, displayValue, isObject } = this.props;\n    if (isObject) {\n      index = selectedValues.findIndex(\n        i => i[displayValue] === item[displayValue]\n      );\n    } else {\n      index = selectedValues.indexOf(item);\n    }\n\t\tselectedValues.splice(index, 1);\n\t\tonRemove(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSelectItem(item) {\n    const { selectedValues } = this.state;\n    const { selectionLimit, onSelect, singleSelect, showCheckbox } = this.props;\n    if (!this.state.keepSearchTerm){\n      this.setState({\n        inputValue: ''\n      });\n    }\n    if (singleSelect) {\n      this.onSingleSelect(item);\n      onSelect([item], item);\n      return;\n    }\n    if (this.isSelectedValue(item)) {\n      this.onRemoveSelectedItem(item);\n      return;\n    }\n    if (selectionLimit == selectedValues.length) {\n      return;\n    }\n\t\tselectedValues.push(item);\n\t\tonSelect(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      } else {\n        this.filterOptionsByInput();\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSingleSelect(item) {\n    this.setState({ selectedValues: [item], toggleOptionsList: false });\n  }\n\n  isSelectedValue(item) {\n    const { isObject, displayValue } = this.props;\n    const { selectedValues } = this.state;\n    if (isObject) {\n      return (\n        selectedValues.filter(i => i[displayValue] === item[displayValue])\n          .length > 0\n      );\n    }\n    return selectedValues.filter(i => i === item).length > 0;\n  }\n\n  renderOptionList() {\n    const { groupBy, style, emptyRecordMsg, loading, loadingMessage = 'loading...' } = this.props;\n    const { options } = this.state;\n    if (loading) {\n      return (\n        <ul className={`optionContainer`} style={style['optionContainer']}>\n          {typeof loadingMessage === 'string' && <span style={style['loadingMessage']} className={`notFound`}>{loadingMessage}</span>}\n          {typeof loadingMessage !== 'string' && loadingMessage}\n        </ul>\n      );\n    }\n    return (\n      <ul className={`optionContainer`} style={style['optionContainer']}>\n        {options.length === 0 && <span style={style['notFound']} className={`notFound`}>{emptyRecordMsg}</span>}\n        {!groupBy ? this.renderNormalOption() : this.renderGroupByOptions()}\n      </ul>\n    );\n  }\n\n  renderGroupByOptions() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { groupedObject } = this.state;\n    return Object.keys(groupedObject).map(obj => {\n\t\t\treturn (\n\t\t\t\t<React.Fragment key={obj}>\n\t\t\t\t\t<li className=\"groupHeading\" style={style['groupHeading']}>{obj}</li>\n\t\t\t\t\t{groupedObject[obj].map((option, i) => {\n            const isSelected = this.isSelectedValue(option);\n            return (\n              <li\n                key={`option${i}`}\n                style={style['option']}\n                className={`groupChildEle option ${isSelected ? 'selected' : ''} ${this.fadeOutSelection(option) ? 'disableSelection' : ''} ${this.isDisablePreSelectedValues(option) ? 'disableSelection' : ''}`}\n                onClick={() => this.onSelectItem(option)}\n              >\n                {showCheckbox && !singleSelect && (\n                    <input\n                      type=\"checkbox\"\n                      className={'checkbox'}\n                      readOnly\n                      checked={isSelected}\n                    />\n                )}\n                {this.props.optionValueDecorator(isObject ? option[displayValue] : (option || '').toString(), option)}\n              </li>\n            )}\n          )}\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t});\n  }\n\n  renderNormalOption() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { highlightOption } = this.state;\n    return this.state.options.map((option, i) => {\n        const isSelected = this.isSelectedValue(option);\n        return (\n          <li\n            key={`option${i}`}\n            style={style['option']}\n            className={`option ${isSelected ? 'selected' : ''} ${highlightOption === i ? `highlightOption highlight` : \"\"} ${this.fadeOutSelection(option) ? 'disableSelection' : ''} ${this.isDisablePreSelectedValues(option) ? 'disableSelection' : ''}`}\n            onClick={() => this.onSelectItem(option)}\n          >\n            {showCheckbox && !singleSelect && (\n              <input\n                type=\"checkbox\"\n                readOnly\n                className={`checkbox`}\n                checked={isSelected}\n              />\n            )}\n            {this.props.optionValueDecorator(isObject ? option[displayValue] : (option || '').toString(), option)}\n          </li>\n      )\n    });\n  }\n\n  renderSelectedList() {\n    const { isObject = false, displayValue, style, singleSelect, customCloseIcon } = this.props;\n    const { selectedValues, closeIconType } = this.state;\n    return selectedValues.map((value, index) => (\n      <span className={`chip  ${singleSelect && 'singleChip'} ${this.isDisablePreSelectedValues(value) && 'disableSelection'}`} key={index} style={style['chips']}>\n        {this.props.selectedValueDecorator(!isObject ? (value || '').toString() : value[displayValue], value)}\n        {!this.isDisablePreSelectedValues(value) && (!customCloseIcon ? <img\n          className=\"icon_cancel closeIcon\"\n          src={closeIconType}\n          onClick={() => this.onRemoveSelectedItem(value)}\n        /> : <i className=\"custom-close\" onClick={() => this.onRemoveSelectedItem(value)}>{customCloseIcon}</i>)}\n      </span>\n    ));\n  }\n\n  isDisablePreSelectedValues(value) {\n    const { isObject, disablePreSelectedValues, displayValue } = this.props;\n    const { preSelectedValues } = this.state;\n    if (!disablePreSelectedValues || !preSelectedValues.length) {\n      return false;\n    }\n    if (isObject) {\n      return (\n        preSelectedValues.filter(i => i[displayValue] === value[displayValue])\n          .length > 0\n      );\n    }\n    return preSelectedValues.filter(i => i === value).length > 0;\n  }\n\n  fadeOutSelection(item) {\n    const { selectionLimit, showCheckbox, singleSelect } = this.props;\n    if (singleSelect) {\n      return;\n    }\n    const { selectedValues } = this.state;\n    if (selectionLimit == -1) {\n      return false;\n    }\n    if (selectionLimit != selectedValues.length) {\n      return false;\n    }\n    if (selectionLimit == selectedValues.length) {\n      if (!showCheckbox) {\n        return true;\n      } else {\n        if (this.isSelectedValue(item)) {\n          return false;\n        }\n        return true;\n      }\n    }\n  }\n\n  toggelOptionList() {\n    this.setState({\n      toggleOptionsList: !this.state.toggleOptionsList,\n      highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0\n    });\n  }\n\n  onCloseOptionList() {\n    this.setState({\n      toggleOptionsList: false,\n      highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0,\n      inputValue: ''\n    });\n  }\n\n  onFocus(){\n    if (this.state.toggleOptionsList) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    } else {\n      this.toggelOptionList();\n    }\n  }\n\n  onBlur(){\n    this.setState({ inputValue: '' }, this.filterOptionsByInput);\n    // @ts-ignore\n    this.optionTimeout = setTimeout(this.onCloseOptionList, 250);\n  }\n\n  isVisible(elem) {\n    return !!elem && !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length )\n  }\n\n  hideOnClickOutside() {\n    const element = document.getElementsByClassName('multiselect-container')[0];\n    const outsideClickListener = event => {\n        if (element && !element.contains(event.target) && this.isVisible(element)) {\n          this.toggelOptionList();\n        }\n    }\n    document.addEventListener('click', outsideClickListener)\n  }\n\n  renderMultiselectContainer() {\n    const { inputValue, toggleOptionsList, selectedValues } = this.state;\n    const { placeholder, style, singleSelect, id, name, hidePlaceholder, disable, showArrow, className, customArrow, hideSelectedList } = this.props;\n    return (\n      <div className={`multiselect-container multiSelectContainer ${disable ? `disable_ms` : ''} ${className || ''}`} id={id || 'multiselectContainerReact'} style={style['multiselectContainer']}>\n        <div className={`search-wrapper searchWrapper ${singleSelect ? 'singleSelect' : ''}`}\n          ref={this.searchWrapper} style={style['searchBox']}\n          onClick={singleSelect ? this.toggelOptionList : () => {}}\n        >\n          {!hideSelectedList && this.renderSelectedList()}\n          <input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tref={this.searchBox}\n            className={`searchBox ${singleSelect && selectedValues.length ? 'display-none' : ''}`}\n            id={`${id || 'search'}_input`}\n\t          name={`${name || 'search_name'}_input`}\n            onChange={this.onChange}\n            onKeyPress={this.onKeyPress}\n            value={inputValue}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            placeholder={((singleSelect && selectedValues.length) || (hidePlaceholder && selectedValues.length)) ? '' : placeholder}\n            onKeyDown={this.onArrowKeyNavigation}\n            style={style['inputField']}\n            autoComplete=\"off\"\n            disabled={singleSelect || disable}\n          />\n          {(singleSelect || showArrow) && (\n            <>\n              {customArrow ? <span className=\"icon_down_dir\">{customArrow}</span> : <img src={DownArrow} className={`icon_cancel icon_down_dir`} />}\n            </>\n          )}\n        </div>\n        <div\n          className={`optionListContainer ${\n            toggleOptionsList ? 'displayBlock' : 'displayNone'\n          }`}\n          onMouseDown={(e) => {\n            e.preventDefault();\n          }}\n        >\n          {this.renderOptionList()}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <OutsideAlerter outsideClick={this.onCloseOptionList}>\n        {this.renderMultiselectContainer()}\n      </OutsideAlerter>\n    );\n  }\n}\n\nMultiselect.defaultProps = {\n  options: [],\n  disablePreSelectedValues: false,\n  selectedValues: [],\n  isObject: true,\n  displayValue: \"model\",\n  showCheckbox: false,\n  selectionLimit: -1,\n  placeholder: \"Select\",\n\tgroupBy: \"\",\n\tstyle: {},\n\temptyRecordMsg: \"No Options Available\",\n\tonSelect: () => {},\n  onRemove: () => {},\n  onKeyPressFn: () => {},\n  closeIcon: 'circle2',\n  singleSelect: false,\n  caseSensitiveSearch: false,\n  id: '',\n  name: '',\n  closeOnSelect: true,\n  avoidHighlightFirstOption: false,\n  hidePlaceholder: false,\n  showArrow: false,\n  keepSearchTerm: false,\n  customCloseIcon: '',\n  className: '',\n  customArrow: undefined,\n  selectedValueDecorator: v => v,\n  optionValueDecorator: v => v\n} as IMultiselectProps;\n"]},"metadata":{},"sourceType":"script"}