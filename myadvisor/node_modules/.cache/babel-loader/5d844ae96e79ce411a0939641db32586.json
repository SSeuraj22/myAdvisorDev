{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useEnterKeyHint;\n\nvar _react = require(\"react\");\n\nfunction useEnterKeyHint(elementRef, enterKeyHint) {\n  // The version of React we are using does not support the capitalized version of \"enterKeyHint\" yet.\n  // To prevent warnings from React, we need to set it manually using attributes.\n  (0, _react.useEffect)(function () {\n    var current = elementRef.current;\n\n    if (current) {\n      current.enterKeyHint = enterKeyHint;\n    }\n  }, [enterKeyHint, elementRef]);\n}","map":{"version":3,"sources":["../../../src/hooks/internal/useEnterKeyHint.js"],"names":["current","elementRef"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEe,SAAA,eAAA,CAAA,UAAA,EAAA,YAAA,EAAmD;AAChE;AACA;AACA,GAAA,GAAA,MAAA,CAAA,SAAA,EAAU,YAAM;AAAA,QACNA,OADM,GACMC,UADN,CAAA,OAAA;;AAGd,QAAA,OAAA,EAAa;AACXD,MAAAA,OAAO,CAAPA,YAAAA,GAAAA,YAAAA;AACD;AALH,GAAA,EAMG,CAAA,YAAA,EANH,UAMG,CANH;AAOD","sourcesContent":["import { useEffect } from 'react';\n\nexport default function useEnterKeyHint(elementRef, enterKeyHint) {\n  // The version of React we are using does not support the capitalized version of \"enterKeyHint\" yet.\n  // To prevent warnings from React, we need to set it manually using attributes.\n  useEffect(() => {\n    const { current } = elementRef;\n\n    if (current) {\n      current.enterKeyHint = enterKeyHint;\n    }\n  }, [enterKeyHint, elementRef]);\n}\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}