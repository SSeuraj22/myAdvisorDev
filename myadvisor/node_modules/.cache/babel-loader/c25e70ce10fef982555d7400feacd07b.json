{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\n\nconst PullProgrammes = () => {\n  _s();\n\n  const [programmes, setProgrammes] = useState([]);\n\n  async function getProgrammes() {\n    try {\n      const res = await fetch(`/programmes/all`, {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseData = await res.json();\n      setProgrammes(parseData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  useEffect(() => {\n    getProgrammes();\n  }, []);\n  return programmes;\n};\n\n_s(PullProgrammes, \"2ehHZsm8vpybdxCzfBoM+e0YirM=\");\n\n_c = PullProgrammes;\nexport default PullProgrammes;\n\nvar _c;\n\n$RefreshReg$(_c, \"PullProgrammes\");","map":{"version":3,"sources":["/home/ubuntu/myAdvisorDev/myadvisor/src/components/PullProgrammes.js"],"names":["React","useEffect","useState","PullProgrammes","programmes","setProgrammes","getProgrammes","res","fetch","method","headers","token","localStorage","parseData","json","err","console","error","message"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,EAAD,CAA5C;;AAEA,iBAAeI,aAAf,GAA+B;AAC7B,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,iBAAF,EAAoB;AACzCC,QAAAA,MAAM,EAAE,KADiC;AAEzCC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,KAAK,EAAEC,YAAY,CAACD;AAAtB;AAFgC,OAApB,CAAvB;AAKA,YAAME,SAAS,GAAG,MAAMN,GAAG,CAACO,IAAJ,EAAxB;AACAT,MAAAA,aAAa,CAACQ,SAAD,CAAb;AACD,KARD,CAQE,OAAOE,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACD;AACF;;AAEDjB,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,aAAa;AACd,GAFM,EAEJ,EAFI,CAAT;AAIA,SACIF,UADJ;AAGC,CAxBL;;GAAMD,c;;KAAAA,c;AA0BN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst PullProgrammes = () => {\n    const [programmes, setProgrammes] = useState([]);\n  \n    async function getProgrammes() {\n      try {\n        const res = await fetch(`/programmes/all`, {\n          method: \"GET\",\n          headers: { token: localStorage.token },\n        });\n  \n        const parseData = await res.json();\n        setProgrammes(parseData);\n      } catch (err) {\n        console.error(err.message);\n      }\n    }\n\n    useEffect(() => {\n        getProgrammes();\n      }, []);\n  \n    return (\n        programmes\n      );\n    };\n\nexport default PullProgrammes;"]},"metadata":{},"sourceType":"module"}