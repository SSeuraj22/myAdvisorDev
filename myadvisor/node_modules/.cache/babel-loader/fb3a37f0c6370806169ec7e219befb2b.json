{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ubuntu/myAdvisorDev/myadvisor/src/components/Staff/EditCourse.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Form, Col } from \"react-bootstrap\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n/*\n    EditCourse allows staff to edit courses on the system.\n*/\n\nfunction EditCourse({\n  setShow,\n  row,\n  refreshTable\n}) {\n  _s();\n\n  /*\n      The validated state is used to keep track of the validity of the editCourse form.\n      It's initial state is false.\n  */\n  const [validated, setValidated] = useState(false);\n  /*\n      notifyEdit is used to display toast notifications when the course is edited. It displays a green toast.\n  */\n\n  const notifyEdit = text => toast.success(text);\n  /*\n      HandleSubmit gets the data from the form and passes it to the editCourse function.\n  */\n\n\n  const handleSubmit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n    setValidated(true);\n    const formData = {\n      courseCode: form.elements.courseCode.value.replace(/\\s+/g, ''),\n      courseTitle: form.elements.courseTitle.value,\n      credits: form.elements.credits.value,\n      semester: form.elements.semester.value,\n      level: form.elements.level.value,\n      type: form.elements.type.value,\n      prerequisites: form.elements.prerequisites.value,\n      description: form.elements.description.value,\n      coursework: String(form.elements.coursework.value) + \"%\",\n      finalExam: String(form.elements.finalExam.value) + \"%\",\n      groupProject: String(form.elements.groupProject.value) + \"%\",\n      individualWork: String(form.elements.individualWork.value) + \"%\",\n      practicalCoursework: String(form.elements.practicalCoursework.value) + \"%\",\n      courseworkExam: String(form.elements.courseworkExam.value) + \"%\",\n      projectPres: String(form.elements.projectPres.value) + \"%\",\n      project: String(form.elements.project.value) + \"%\",\n      presentation: String(form.elements.presentation.value) + \"%\",\n      assignment: String(form.elements.assignment.value) + \"%\",\n      labAssessment: String(form.elements.labAssessment.value) + \"%\",\n      midSemesterMcq: String(form.elements.midSemesterMcq.value) + \"%\",\n      projectReport: String(form.elements.projectReport.value) + \"%\"\n    };\n    editCourse(formData, row.courseCode);\n  };\n  /*\n      editCourse creates a put request to the server, which edits the specified course.\n  */\n\n\n  async function editCourse(data, code) {\n    try {\n      const res = await fetch(\"/courses/edit/\" + code, {\n        method: \"PUT\",\n        headers: {\n          token: localStorage.getItem(\"token\"),\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      setShow(false);\n      refreshTable();\n      notifyEdit(data.courseCode + \" Edited!\");\n      const status = await res.statusText;\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  const styleCheckbox = {\n    marginTop: \"10px\",\n    marginLeft: \"20px\",\n    marginRight: \"10px\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"courseCode\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Course Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          defaultValue: row.courseCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"courseTitle\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Course Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          defaultValue: row.courseTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"3\",\n          controlId: \"credits\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Credits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            defaultValue: row.credits,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"3\",\n          controlId: \"semester\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Semester\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            defaultValue: row.semester,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"3\",\n          controlId: \"level\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            defaultValue: row.level,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"I\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"II\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"III\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"3\",\n          controlId: \"type\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            defaultValue: row.type,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Core\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Elective\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"assessment\",\n          children: /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Assessments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"prerequisites\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Prerequisites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          defaultValue: row.prerequisites\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"description\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          as: \"textarea\",\n          rows: 5,\n          defaultValue: row.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"float-right\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          class: \"btn btn-custom\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      pauseOnHover: true,\n      position: \"bottom-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditCourse, \"otD17mARj5mKZHrEMvBAd47slX0=\");\n\n_c = EditCourse;\nexport default EditCourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCourse\");","map":{"version":3,"sources":["/home/ubuntu/myAdvisorDev/myadvisor/src/components/Staff/EditCourse.js"],"names":["React","useState","Button","Form","Col","ToastContainer","toast","EditCourse","setShow","row","refreshTable","validated","setValidated","notifyEdit","text","success","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","formData","courseCode","elements","value","replace","courseTitle","credits","semester","level","type","prerequisites","description","coursework","String","finalExam","groupProject","individualWork","practicalCoursework","courseworkExam","projectPres","project","presentation","assignment","labAssessment","midSemesterMcq","projectReport","editCourse","data","code","res","fetch","method","headers","token","localStorage","getItem","body","JSON","stringify","status","statusText","err","console","error","message","styleCheckbox","marginTop","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form, Col } from \"react-bootstrap\";\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n/*\n    EditCourse allows staff to edit courses on the system.\n*/\n\nfunction EditCourse({setShow, row, refreshTable}) {\n    /*\n        The validated state is used to keep track of the validity of the editCourse form.\n        It's initial state is false.\n    */    \n    const [validated, setValidated] = useState(false);\n\n    /*\n        notifyEdit is used to display toast notifications when the course is edited. It displays a green toast.\n    */\n    const notifyEdit = (text) => toast.success(text);\n\n    /*\n        HandleSubmit gets the data from the form and passes it to the editCourse function.\n    */    \n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n\n        if (form.checkValidity() === false) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n        setValidated(true);\n\n        const formData = {\n            courseCode : (form.elements.courseCode.value).replace(/\\s+/g, ''),\n            courseTitle : form.elements.courseTitle.value,\n            credits : form.elements.credits.value,\n            semester : form.elements.semester.value,\n            level : form.elements.level.value,\n            type: form.elements.type.value,\n            prerequisites : form.elements.prerequisites.value,\n            description: form.elements.description.value,\n            coursework: String(form.elements.coursework.value) + \"%\",\n            finalExam: String(form.elements.finalExam.value) + \"%\",\n            groupProject: String(form.elements.groupProject.value) + \"%\",\n            individualWork: String(form.elements.individualWork.value) + \"%\",\n            practicalCoursework: String(form.elements.practicalCoursework.value) + \"%\",\n            courseworkExam: String(form.elements.courseworkExam.value) + \"%\",\n            projectPres: String(form.elements.projectPres.value) + \"%\",\n            project: String(form.elements.project.value) + \"%\",\n            presentation: String(form.elements.presentation.value) + \"%\",\n            assignment: String(form.elements.assignment.value) + \"%\",\n            labAssessment: String(form.elements.labAssessment.value) + \"%\",\n            midSemesterMcq: String(form.elements.midSemesterMcq.value) + \"%\",\n            projectReport: String(form.elements.projectReport.value) + \"%\"\n        }\n\n        editCourse(formData, row.courseCode)\n    };\n\n    /*\n        editCourse creates a put request to the server, which edits the specified course.\n    */    \n    async function editCourse(data, code) {\n        try {\n          const res = await fetch(\"/courses/edit/\" + code, {\n            method: \"PUT\",\n            headers: {\n                token: localStorage.getItem(\"token\"),\n                \"Content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n          });\n    \n          setShow(false);\n          refreshTable();\n          notifyEdit(data.courseCode + \" Edited!\")\n\n          const status = await res.statusText;\n          \n        } catch (err) {\n          console.error(err.message);\n        }\n    }\n\n    const styleCheckbox = {\n        marginTop: \"10px\",\n        marginLeft: \"20px\",\n        marginRight: \"10px\"\n    };\n\n\n    return (\n        <>\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                <Form.Group controlId=\"courseCode\">\n                    <Form.Label>Course Code</Form.Label>\n                    <Form.Control required type=\"text\" defaultValue={row.courseCode}/>\n                </Form.Group>\n\n                <Form.Group controlId=\"courseTitle\">\n                    <Form.Label>Course Title</Form.Label>\n                    <Form.Control required type=\"text\" defaultValue={row.courseTitle}/>\n                </Form.Group>\n\n                <Form.Row>\n                    <Form.Group as={Col} md=\"3\" controlId=\"credits\">\n                        <Form.Label>Credits</Form.Label>\n                        <Form.Control required as=\"select\" defaultValue={row.credits}>\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                            <option>4</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} md=\"3\" controlId=\"semester\">\n                        <Form.Label>Semester</Form.Label>\n                        <Form.Control required as=\"select\" defaultValue={row.semester}>\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} md=\"3\" controlId=\"level\">\n                        <Form.Label>Level</Form.Label>\n                        <Form.Control required as=\"select\" defaultValue={row.level}>\n                            <option>I</option>\n                            <option>II</option>\n                            <option>III</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} md=\"3\" controlId=\"type\">\n                        <Form.Label>Type</Form.Label>\n                        <Form.Control required as=\"select\" defaultValue={row.type}>\n                            <option>Core</option>\n                            <option>Elective</option>\n                        </Form.Control>\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                <Form.Group as={Col} controlId=\"assessment\">\n                        <Form.Label>Assessments</Form.Label>\n        \n                    \n                </Form.Group>\n                    \n\n                </Form.Row>\n\n                <Form.Group controlId=\"prerequisites\">\n                    <Form.Label>Prerequisites</Form.Label>\n                    <Form.Control required type=\"text\" defaultValue={row.prerequisites}/>\n                </Form.Group>\n\n                <Form.Group controlId=\"description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control required as=\"textarea\" rows={5} defaultValue={row.description}/>\n                </Form.Group>\n\n                <div class=\"float-right\"><Button type=\"submit\" class=\"btn btn-custom\">Submit</Button></div>\n            </Form>\n\n            <ToastContainer \n                pauseOnHover\n                position=\"bottom-right\"\n            />\n        </>\n    );\n}\n\nexport default EditCourse;"]},"metadata":{},"sourceType":"module"}