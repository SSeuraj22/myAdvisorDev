{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Strings = void 0;\n\nvar Strings =\n/** @class */\nfunction () {\n  function Strings() {}\n\n  Strings.errors = {\n    unknownElementType: function (typeName) {\n      return \"Unknown element type \\\"\" + typeName + \"\\\". Fallback will be used if present.\";\n    },\n    unknownActionType: function (typeName) {\n      return \"Unknown action type \\\"\" + typeName + \"\\\". Fallback will be used if present.\";\n    },\n    elementTypeNotAllowed: function (typeName) {\n      return \"Element type \\\"\" + typeName + \"\\\" is not allowed in this context.\";\n    },\n    actionTypeNotAllowed: function (typeName) {\n      return \"Action type \\\"\" + typeName + \"\\\" is not allowed in this context.\";\n    },\n    invalidPropertyValue: function (value, propertyName) {\n      return \"Invalid value \\\"\" + value + \"\\\" for property \\\"\" + propertyName + \"\\\".\";\n    },\n    showCardMustHaveCard: function () {\n      return \"\\\"An Action.ShowCard must have its \\\"card\\\" property set to a valid AdaptiveCard object.\";\n    },\n    invalidColumnWidth: function (invalidWidth) {\n      return \"Invalid column width \\\"\" + invalidWidth + \"\\\" - defaulting to \\\"auto\\\".\";\n    },\n    invalidCardVersion: function (defaultingToVersion) {\n      return \"Invalid card version. Defaulting to \\\"\" + defaultingToVersion + \"\\\".\";\n    },\n    invalidVersionString: function (versionString) {\n      return \"Invalid version string \\\"\" + versionString + \"\\\".\";\n    },\n    propertyValueNotSupported: function (value, propertyName, supportedInVersion, versionUsed) {\n      return \"Value \\\"\" + value + \"\\\" for property \\\"\" + propertyName + \"\\\" is supported in version \" + supportedInVersion + \", but you are using version \" + versionUsed + \".\";\n    },\n    propertyNotSupported: function (propertyName, supportedInVersion, versionUsed) {\n      return \"Property \\\"\" + propertyName + \"\\\" is supported in version \" + supportedInVersion + \", but you are using version \" + versionUsed + \".\";\n    },\n    indexOutOfRange: function (index) {\n      return \"Index out of range (\" + index + \").\";\n    },\n    elementCannotBeUsedAsInline: function () {\n      return \"RichTextBlock.addInline: the specified card element cannot be used as a RichTextBlock inline.\";\n    },\n    inlineAlreadyParented: function () {\n      return \"RichTextBlock.addInline: the specified inline already belongs to another RichTextBlock.\";\n    },\n    interactivityNotAllowed: function () {\n      return \"Interactivity is not allowed.\";\n    },\n    inputsMustHaveUniqueId: function () {\n      return \"All inputs must have a unique Id.\";\n    },\n    choiceSetMustHaveAtLeastOneChoice: function () {\n      return \"An Input.ChoiceSet must have at least one choice defined.\";\n    },\n    choiceSetChoicesMustHaveTitleAndValue: function () {\n      return \"All choices in an Input.ChoiceSet must have their title and value properties set.\";\n    },\n    propertyMustBeSet: function (propertyName) {\n      return \"Property \\\"\" + propertyName + \"\\\" must be set.\";\n    },\n    actionHttpHeadersMustHaveNameAndValue: function () {\n      return \"All headers of an Action.Http must have their name and value properties set.\";\n    },\n    tooManyActions: function (maximumActions) {\n      return \"Maximum number of actions exceeded (\" + maximumActions + \").\";\n    },\n    columnAlreadyBelongsToAnotherSet: function () {\n      return \"This column already belongs to another ColumnSet.\";\n    },\n    invalidCardType: function () {\n      return \"Invalid or missing card type. Make sure the card's type property is set to \\\"AdaptiveCard\\\".\";\n    },\n    unsupportedCardVersion: function (version, maxSupportedVersion) {\n      return \"The specified card version (\" + version + \") is not supported. The maximum supported card version is \" + maxSupportedVersion + \".\";\n    },\n    duplicateId: function (id) {\n      return \"Duplicate Id \\\"\" + id + \"\\\".\";\n    },\n    markdownProcessingNotEnabled: function () {\n      return \"Markdown processing isn't enabled. Please see https://www.npmjs.com/package/adaptivecards#supporting-markdown\";\n    },\n    processMarkdownEventRemoved: function () {\n      return \"The processMarkdown event has been removed. Please update your code and set onProcessMarkdown instead.\";\n    },\n    elementAlreadyParented: function () {\n      return \"The element already belongs to another container.\";\n    },\n    actionAlreadyParented: function () {\n      return \"The action already belongs to another element.\";\n    },\n    elementTypeNotStandalone: function (typeName) {\n      return \"Elements of type \" + typeName + \" cannot be used as standalone elements.\";\n    }\n  };\n  Strings.hints = {\n    dontUseWeightedAndStrecthedColumnsInSameSet: function () {\n      return \"It is not recommended to use weighted and stretched columns in the same ColumnSet, because in such a situation stretched columns will always get the minimum amount of space.\";\n    }\n  };\n  Strings.defaults = {\n    inlineActionTitle: function () {\n      return \"Inline Action\";\n    }\n  };\n  return Strings;\n}();\n\nexports.Strings = Strings;","map":{"version":3,"sources":["../src/strings.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAA,OAAA;AAAA;AAAA,YAAA;AAAA,WAAA,OAAA,GAAA,CAuCC;;AAtCmB,EAAA,OAAA,CAAA,MAAA,GAAS;AACrB,IAAA,kBAAkB,EAAE,UAAC,QAAD,EAAiB;AAAK,aAAA,4BAAyB,QAAzB,GAAA,uCAAA;AAAuE,KAD5F;AAErB,IAAA,iBAAiB,EAAE,UAAC,QAAD,EAAiB;AAAK,aAAA,2BAAwB,QAAxB,GAAA,uCAAA;AAAsE,KAF1F;AAGrB,IAAA,qBAAqB,EAAE,UAAC,QAAD,EAAiB;AAAK,aAAA,oBAAiB,QAAjB,GAAA,oCAAA;AAA4D,KAHpF;AAIrB,IAAA,oBAAoB,EAAE,UAAC,QAAD,EAAiB;AAAK,aAAA,mBAAgB,QAAhB,GAAA,oCAAA;AAA2D,KAJlF;AAKrB,IAAA,oBAAoB,EAAE,UAAC,KAAD,EAAa,YAAb,EAAiC;AAAK,aAAA,qBAAkB,KAAlB,GAAuB,oBAAvB,GAA0C,YAA1C,GAAA,KAAA;AAA0D,KALjG;AAMrB,IAAA,oBAAoB,EAAE,YAAA;AAAM,aAAA,0FAAA;AAAuF,KAN9F;AAOrB,IAAA,kBAAkB,EAAE,UAAC,YAAD,EAAqB;AAAK,aAAA,4BAAyB,YAAzB,GAAA,8BAAA;AAAgE,KAPzF;AAQrB,IAAA,kBAAkB,EAAE,UAAC,mBAAD,EAA4B;AAAK,aAAA,2CAAwC,mBAAxC,GAAA,KAAA;AAA+D,KAR/F;AASrB,IAAA,oBAAoB,EAAE,UAAC,aAAD,EAAsB;AAAK,aAAA,8BAA2B,aAA3B,GAAA,KAAA;AAA4C,KATxE;AAUrB,IAAA,yBAAyB,EAAE,UAAC,KAAD,EAAa,YAAb,EAAmC,kBAAnC,EAA+D,WAA/D,EAAkF;AAAK,aAAA,aAAU,KAAV,GAAe,oBAAf,GAAkC,YAAlC,GAA8C,6BAA9C,GAA2E,kBAA3E,GAA6F,8BAA7F,GAA4H,WAA5H,GAAA,GAAA;AAA0I,KAVvO;AAWrB,IAAA,oBAAoB,EAAE,UAAC,YAAD,EAAuB,kBAAvB,EAAmD,WAAnD,EAAsE;AAAK,aAAA,gBAAa,YAAb,GAAyB,6BAAzB,GAAsD,kBAAtD,GAAwE,8BAAxE,GAAuG,WAAvG,GAAA,GAAA;AAAqH,KAXjM;AAYrB,IAAA,eAAe,EAAE,UAAC,KAAD,EAAc;AAAK,aAAA,yBAAuB,KAAvB,GAAA,IAAA;AAAgC,KAZ/C;AAarB,IAAA,2BAA2B,EAAE,YAAA;AAAM,aAAA,+FAAA;AAA+F,KAb7G;AAcrB,IAAA,qBAAqB,EAAE,YAAA;AAAM,aAAA,yFAAA;AAAyF,KAdjG;AAerB,IAAA,uBAAuB,EAAE,YAAA;AAAM,aAAA,+BAAA;AAA+B,KAfzC;AAgBrB,IAAA,sBAAsB,EAAE,YAAA;AAAM,aAAA,mCAAA;AAAmC,KAhB5C;AAiBrB,IAAA,iCAAiC,EAAE,YAAA;AAAM,aAAA,2DAAA;AAA2D,KAjB/E;AAkBrB,IAAA,qCAAqC,EAAE,YAAA;AAAM,aAAA,mFAAA;AAAmF,KAlB3G;AAmBrB,IAAA,iBAAiB,EAAE,UAAC,YAAD,EAAqB;AAAK,aAAA,gBAAa,YAAb,GAAA,iBAAA;AAAyC,KAnBjE;AAoBrB,IAAA,qCAAqC,EAAE,YAAA;AAAM,aAAA,8EAAA;AAA8E,KApBtG;AAqBrB,IAAA,cAAc,EAAE,UAAC,cAAD,EAAuB;AAAK,aAAA,yCAAuC,cAAvC,GAAA,IAAA;AAAyD,KArBhF;AAsBrB,IAAA,gCAAgC,EAAE,YAAA;AAAM,aAAA,mDAAA;AAAmD,KAtBtE;AAuBrB,IAAA,eAAe,EAAE,YAAA;AAAM,aAAA,8FAAA;AAA4F,KAvB9F;AAwBrB,IAAA,sBAAsB,EAAE,UAAC,OAAD,EAAkB,mBAAlB,EAA6C;AAAK,aAAA,iCAA+B,OAA/B,GAAsC,4DAAtC,GAAmG,mBAAnG,GAAA,GAAA;AAAyH,KAxB9K;AAyBrB,IAAA,WAAW,EAAE,UAAC,EAAD,EAAW;AAAK,aAAA,oBAAiB,EAAjB,GAAA,KAAA;AAAuB,KAzB/B;AA0BrB,IAAA,4BAA4B,EAAE,YAAA;AAAM,aAAA,+GAAA;AAA+G,KA1B9H;AA2BrB,IAAA,2BAA2B,EAAE,YAAA;AAAM,aAAA,wGAAA;AAAwG,KA3BtH;AA4BrB,IAAA,sBAAsB,EAAE,YAAA;AAAM,aAAA,mDAAA;AAAmD,KA5B5D;AA6BrB,IAAA,qBAAqB,EAAE,YAAA;AAAM,aAAA,gDAAA;AAAgD,KA7BxD;AA8BrB,IAAA,wBAAwB,EAAE,UAAC,QAAD,EAAiB;AAAK,aAAA,sBAAoB,QAApB,GAAA,yCAAA;AAAqE;AA9BhG,GAAT;AAgCA,EAAA,OAAA,CAAA,KAAA,GAAQ;AACpB,IAAA,2CAA2C,EAAE,YAAA;AAAM,aAAA,+KAAA;AAA+K;AAD9M,GAAR;AAGA,EAAA,OAAA,CAAA,QAAA,GAAW;AACvB,IAAA,iBAAiB,EAAE,YAAA;AAAM,aAAA,eAAA;AAAe;AADjB,GAAX;AAGpB,SAAA,OAAA;AAAC,CAvCD,EAAA;;AAAa,OAAA,CAAA,OAAA,GAAA,OAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Strings = void 0;\r\nvar Strings = /** @class */ (function () {\r\n    function Strings() {\r\n    }\r\n    Strings.errors = {\r\n        unknownElementType: function (typeName) { return \"Unknown element type \\\"\" + typeName + \"\\\". Fallback will be used if present.\"; },\r\n        unknownActionType: function (typeName) { return \"Unknown action type \\\"\" + typeName + \"\\\". Fallback will be used if present.\"; },\r\n        elementTypeNotAllowed: function (typeName) { return \"Element type \\\"\" + typeName + \"\\\" is not allowed in this context.\"; },\r\n        actionTypeNotAllowed: function (typeName) { return \"Action type \\\"\" + typeName + \"\\\" is not allowed in this context.\"; },\r\n        invalidPropertyValue: function (value, propertyName) { return \"Invalid value \\\"\" + value + \"\\\" for property \\\"\" + propertyName + \"\\\".\"; },\r\n        showCardMustHaveCard: function () { return \"\\\"An Action.ShowCard must have its \\\"card\\\" property set to a valid AdaptiveCard object.\"; },\r\n        invalidColumnWidth: function (invalidWidth) { return \"Invalid column width \\\"\" + invalidWidth + \"\\\" - defaulting to \\\"auto\\\".\"; },\r\n        invalidCardVersion: function (defaultingToVersion) { return \"Invalid card version. Defaulting to \\\"\" + defaultingToVersion + \"\\\".\"; },\r\n        invalidVersionString: function (versionString) { return \"Invalid version string \\\"\" + versionString + \"\\\".\"; },\r\n        propertyValueNotSupported: function (value, propertyName, supportedInVersion, versionUsed) { return \"Value \\\"\" + value + \"\\\" for property \\\"\" + propertyName + \"\\\" is supported in version \" + supportedInVersion + \", but you are using version \" + versionUsed + \".\"; },\r\n        propertyNotSupported: function (propertyName, supportedInVersion, versionUsed) { return \"Property \\\"\" + propertyName + \"\\\" is supported in version \" + supportedInVersion + \", but you are using version \" + versionUsed + \".\"; },\r\n        indexOutOfRange: function (index) { return \"Index out of range (\" + index + \").\"; },\r\n        elementCannotBeUsedAsInline: function () { return \"RichTextBlock.addInline: the specified card element cannot be used as a RichTextBlock inline.\"; },\r\n        inlineAlreadyParented: function () { return \"RichTextBlock.addInline: the specified inline already belongs to another RichTextBlock.\"; },\r\n        interactivityNotAllowed: function () { return \"Interactivity is not allowed.\"; },\r\n        inputsMustHaveUniqueId: function () { return \"All inputs must have a unique Id.\"; },\r\n        choiceSetMustHaveAtLeastOneChoice: function () { return \"An Input.ChoiceSet must have at least one choice defined.\"; },\r\n        choiceSetChoicesMustHaveTitleAndValue: function () { return \"All choices in an Input.ChoiceSet must have their title and value properties set.\"; },\r\n        propertyMustBeSet: function (propertyName) { return \"Property \\\"\" + propertyName + \"\\\" must be set.\"; },\r\n        actionHttpHeadersMustHaveNameAndValue: function () { return \"All headers of an Action.Http must have their name and value properties set.\"; },\r\n        tooManyActions: function (maximumActions) { return \"Maximum number of actions exceeded (\" + maximumActions + \").\"; },\r\n        columnAlreadyBelongsToAnotherSet: function () { return \"This column already belongs to another ColumnSet.\"; },\r\n        invalidCardType: function () { return \"Invalid or missing card type. Make sure the card's type property is set to \\\"AdaptiveCard\\\".\"; },\r\n        unsupportedCardVersion: function (version, maxSupportedVersion) { return \"The specified card version (\" + version + \") is not supported. The maximum supported card version is \" + maxSupportedVersion + \".\"; },\r\n        duplicateId: function (id) { return \"Duplicate Id \\\"\" + id + \"\\\".\"; },\r\n        markdownProcessingNotEnabled: function () { return \"Markdown processing isn't enabled. Please see https://www.npmjs.com/package/adaptivecards#supporting-markdown\"; },\r\n        processMarkdownEventRemoved: function () { return \"The processMarkdown event has been removed. Please update your code and set onProcessMarkdown instead.\"; },\r\n        elementAlreadyParented: function () { return \"The element already belongs to another container.\"; },\r\n        actionAlreadyParented: function () { return \"The action already belongs to another element.\"; },\r\n        elementTypeNotStandalone: function (typeName) { return \"Elements of type \" + typeName + \" cannot be used as standalone elements.\"; }\r\n    };\r\n    Strings.hints = {\r\n        dontUseWeightedAndStrecthedColumnsInSameSet: function () { return \"It is not recommended to use weighted and stretched columns in the same ColumnSet, because in such a situation stretched columns will always get the minimum amount of space.\"; }\r\n    };\r\n    Strings.defaults = {\r\n        inlineActionTitle: function () { return \"Inline Action\"; }\r\n    };\r\n    return Strings;\r\n}());\r\nexports.Strings = Strings;\r\n//# sourceMappingURL=strings.js.map"]},"metadata":{},"sourceType":"script"}