{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ubuntu/myAdvisorDev/myadvisor/src/components/Staff/Reports.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReportsTable from './ReportsTable';\nimport { Jumbotron, Container } from 'react-bootstrap';\n/*\n    Reports is a component that displays the reports table component.\n*/\n\nfunction Reports() {\n  _s();\n\n  /*\n  const [sessions, setSessions] = useState([\n      {studentID: 816000000, name: \"Jane Doe\", year: 1, advisingDate: \"1/1/2021\", status: \"Complete\"},\n      {studentID: 816000001, name: \"John Doe\", year: 2, advisingDate: \"1/1/2021\", status: \"Complete\"},\n      {studentID: 816000002, name: \"Jack Doe\", year: 3, advisingDate: \"1/1/2021\", status: \"Incomplete\"}\n  ]);\n  const [loading, setLoading] = useState(false);*/\n\n  /*\n      The sessions state is used store all the sessions that will be displayed in the table.\n      The students state is used to store all students on ths system.\n  */\n  const [sessions, setSessions] = useState([]);\n  const [students, setStudents] = useState([]);\n  /*\n      getSessions creates a get request to the server that gets all the sessions on the system and stores it in the sessions state.\n  */\n\n  async function getSessions() {\n    try {\n      const res = await fetch(\"/admin/academic-advising/students/sessions\", {\n        method: \"GET\"\n      });\n      const parseData = await res.json();\n      setSessions(parseData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n  /*\n      getStudents creates a get request to the server that gets all the students on the system and stores it in the students state.\n  */\n\n\n  async function getStudents() {\n    try {\n      const res = await fetch(\"/transcript/details/all\", {\n        method: \"GET\"\n      });\n      const parseData = await res.json();\n      setStudents(parseData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  useEffect(() => {\n    getSessions();\n    getStudents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Reports\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-10\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card h-100\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card-body shadow-sm\",\n              children: /*#__PURE__*/_jsxDEV(ReportsTable, {\n                sessions: sessions,\n                students: students\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"btn btn-custom add-course\",\n            children: \"Archive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Reports, \"vnrI8HUvhrtbhGCqMdJpStOv2WI=\");\n\n_c = Reports;\nexport default Reports;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"sources":["/home/ubuntu/myAdvisorDev/myadvisor/src/components/Staff/Reports.js"],"names":["React","useState","useEffect","ReportsTable","Jumbotron","Container","Reports","sessions","setSessions","students","setStudents","getSessions","res","fetch","method","parseData","json","err","console","error","message","getStudents"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,SAAR,EAAmBC,SAAnB,QAAmC,iBAAnC;AAEA;AACA;AACA;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACf;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACI,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AAEA;AACJ;AACA;;AACI,iBAAeU,WAAf,GAA6B;AACzB,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAAD,EAA+C;AACtEC,QAAAA,MAAM,EAAE;AAD8D,OAA/C,CAAvB;AAGA,YAAMC,SAAS,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAxB;AACAR,MAAAA,WAAW,CAACO,SAAD,CAAX;AAEH,KAPD,CAOE,OAAOE,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACH;AACJ;AAED;AACJ;AACA;;;AACI,iBAAeC,WAAf,GAA6B;AACzB,QAAI;AACA,YAAMT,GAAG,GAAG,MAAMC,KAAK,CAAC,yBAAD,EAA4B;AACnDC,QAAAA,MAAM,EAAE;AAD2C,OAA5B,CAAvB;AAGA,YAAMC,SAAS,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAxB;AACAN,MAAAA,WAAW,CAACK,SAAD,CAAX;AAEH,KAPD,CAOE,OAAOE,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACH;AACJ;;AAEDlB,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,WAAW;AACXU,IAAAA,WAAW;AACd,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA,6BACI,QAAC,SAAD;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,6BACI;AAAK,QAAA,KAAK,EAAC,UAAX;AAAA,gCAEI;AAAK,UAAA,KAAK,EAAC,QAAX;AAAA,iCACI;AAAK,YAAA,KAAK,EAAC,YAAX;AAAA,mCACI;AAAK,cAAA,KAAK,EAAC,qBAAX;AAAA,qCACI,QAAC,YAAD;AAAc,gBAAA,QAAQ,EAAEd,QAAxB;AAAkC,gBAAA,QAAQ,EAAEE;AAA5C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAWI;AAAK,UAAA,KAAK,EAAC,KAAX;AAAA,iCACI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,KAAK,EAAC,2BAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA,kBADJ;AA0BH;;GA/EQH,O;;KAAAA,O;AAiFT,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReportsTable from './ReportsTable';\nimport {Jumbotron, Container} from 'react-bootstrap';\n\n/*\n    Reports is a component that displays the reports table component.\n*/\n\nfunction Reports() {\n    /*\n    const [sessions, setSessions] = useState([\n        {studentID: 816000000, name: \"Jane Doe\", year: 1, advisingDate: \"1/1/2021\", status: \"Complete\"},\n        {studentID: 816000001, name: \"John Doe\", year: 2, advisingDate: \"1/1/2021\", status: \"Complete\"},\n        {studentID: 816000002, name: \"Jack Doe\", year: 3, advisingDate: \"1/1/2021\", status: \"Incomplete\"}\n    ]);\n    const [loading, setLoading] = useState(false);*/\n\n    /*\n        The sessions state is used store all the sessions that will be displayed in the table.\n        The students state is used to store all students on ths system.\n    */ \n    const [sessions, setSessions] = useState([]);\n    const [students, setStudents] = useState([]);\n\n    /*\n        getSessions creates a get request to the server that gets all the sessions on the system and stores it in the sessions state.\n    */\n    async function getSessions() {\n        try {\n            const res = await fetch(\"/admin/academic-advising/students/sessions\", {\n            method: \"GET\",\n        });\n            const parseData = await res.json();\n            setSessions(parseData);\n\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    /*\n        getStudents creates a get request to the server that gets all the students on the system and stores it in the students state.\n    */\n    async function getStudents() {\n        try {\n            const res = await fetch(\"/transcript/details/all\", {\n            method: \"GET\",\n        });\n            const parseData = await res.json();\n            setStudents(parseData);\n            \n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n    \n    useEffect(() => {\n        getSessions();\n        getStudents();\n    }, []);    \n\n    return (\n        <>\n            <Jumbotron fluid>\n                <Container>\n                    <h2>Reports</h2>\n                </Container>\n            </Jumbotron>\n            <div class=\"container\">\n                <div class=\"row mt-4\">\n                    {/* Courses Table */}\n                    <div class=\"col-10\">\n                        <div class=\"card h-100\">\n                            <div class=\"card-body shadow-sm\">\n                                <ReportsTable sessions={sessions} students={students}/>\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Buttons */}\n                    <div class=\"col\">\n                        <button type=\"button\" class=\"btn btn-custom add-course\" >Archive</button>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Reports;"]},"metadata":{},"sourceType":"module"}