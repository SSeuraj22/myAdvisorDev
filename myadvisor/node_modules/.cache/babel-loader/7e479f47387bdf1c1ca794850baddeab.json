{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SerializableObject = exports.property = exports.SerializableObjectSchema = exports.CustomProperty = exports.SerializableObjectCollectionProperty = exports.SerializableObjectProperty = exports.EnumProperty = exports.ValueSetProperty = exports.PixelSizeProperty = exports.NumProperty = exports.BoolProperty = exports.StringProperty = exports.PropertyDefinition = exports.BaseSerializationContext = exports.isVersionLessOrEqual = exports.Versions = exports.Version = void 0; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nvar shared_1 = require(\"./shared\");\n\nvar Utils = require(\"./utils\");\n\nvar Enums = require(\"./enums\");\n\nvar strings_1 = require(\"./strings\");\n\nvar Version =\n/** @class */\nfunction () {\n  function Version(major, minor, label) {\n    if (major === void 0) {\n      major = 1;\n    }\n\n    if (minor === void 0) {\n      minor = 1;\n    }\n\n    this._isValid = true;\n    this._major = major;\n    this._minor = minor;\n    this._label = label;\n  }\n\n  Version.parse = function (versionString, context) {\n    if (!versionString) {\n      return undefined;\n    }\n\n    var result = new Version();\n    result._versionString = versionString;\n    var regEx = /(\\d+).(\\d+)/gi;\n    var matches = regEx.exec(versionString);\n\n    if (matches != null && matches.length == 3) {\n      result._major = parseInt(matches[1]);\n      result._minor = parseInt(matches[2]);\n    } else {\n      result._isValid = false;\n    }\n\n    if (!result._isValid) {\n      context.logParseEvent(undefined, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.invalidVersionString(result._versionString));\n    }\n\n    return result;\n  };\n\n  Version.prototype.toString = function () {\n    return !this._isValid ? this._versionString : this._major + \".\" + this._minor;\n  };\n\n  Version.prototype.toJSON = function () {\n    return this.toString();\n  };\n\n  Version.prototype.compareTo = function (otherVersion) {\n    if (!this.isValid || !otherVersion.isValid) {\n      throw new Error(\"Cannot compare invalid version.\");\n    }\n\n    if (this.major > otherVersion.major) {\n      return 1;\n    } else if (this.major < otherVersion.major) {\n      return -1;\n    } else if (this.minor > otherVersion.minor) {\n      return 1;\n    } else if (this.minor < otherVersion.minor) {\n      return -1;\n    }\n\n    return 0;\n  };\n\n  Object.defineProperty(Version.prototype, \"label\", {\n    get: function () {\n      return this._label ? this._label : this.toString();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Version.prototype, \"major\", {\n    get: function () {\n      return this._major;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Version.prototype, \"minor\", {\n    get: function () {\n      return this._minor;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Version.prototype, \"isValid\", {\n    get: function () {\n      return this._isValid;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Version;\n}();\n\nexports.Version = Version;\n\nvar Versions =\n/** @class */\nfunction () {\n  function Versions() {}\n\n  Versions.v1_0 = new Version(1, 0);\n  Versions.v1_1 = new Version(1, 1);\n  Versions.v1_2 = new Version(1, 2);\n  Versions.v1_3 = new Version(1, 3);\n  Versions.latest = Versions.v1_3;\n  return Versions;\n}();\n\nexports.Versions = Versions;\n\nfunction isVersionLessOrEqual(version, targetVersion) {\n  if (version instanceof Version) {\n    if (targetVersion instanceof Version) {\n      return targetVersion.compareTo(version) >= 0;\n    } else {\n      // Target version is *\n      return true;\n    }\n  } else {\n    // Version is *\n    return true;\n  }\n}\n\nexports.isVersionLessOrEqual = isVersionLessOrEqual;\n\nvar BaseSerializationContext =\n/** @class */\nfunction () {\n  function BaseSerializationContext(targetVersion) {\n    if (targetVersion === void 0) {\n      targetVersion = Versions.latest;\n    }\n\n    this.targetVersion = targetVersion;\n    this._validationEvents = [];\n  }\n\n  BaseSerializationContext.prototype.serializeValue = function (target, propertyName, propertyValue, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = undefined;\n    }\n\n    if (propertyValue === null || propertyValue === undefined || propertyValue === defaultValue) {\n      if (!shared_1.GlobalSettings.enableFullJsonRoundTrip) {\n        delete target[propertyName];\n      }\n    } else {\n      target[propertyName] = propertyValue;\n    }\n  };\n\n  BaseSerializationContext.prototype.serializeNumber = function (target, propertyName, propertyValue, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = undefined;\n    }\n\n    if (propertyValue === null || propertyValue === undefined || propertyValue === defaultValue || isNaN(propertyValue)) {\n      delete target[propertyName];\n    } else {\n      target[propertyName] = propertyValue;\n    }\n  };\n\n  BaseSerializationContext.prototype.serializeEnum = function (enumType, target, propertyName, propertyValue, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = undefined;\n    }\n\n    var targetValue = target[propertyName];\n    var canDeleteTarget = targetValue == undefined ? true : enumType[targetValue] !== undefined;\n\n    if (propertyValue == defaultValue) {\n      if (canDeleteTarget) {\n        delete target[propertyName];\n      }\n    } else {\n      if (propertyValue == undefined) {\n        if (canDeleteTarget) {\n          delete target[propertyName];\n        }\n      } else {\n        target[propertyName] = enumType[propertyValue];\n      }\n    }\n  };\n\n  BaseSerializationContext.prototype.serializeArray = function (target, propertyName, propertyValue) {\n    var items = [];\n\n    if (propertyValue) {\n      for (var _i = 0, propertyValue_1 = propertyValue; _i < propertyValue_1.length; _i++) {\n        var item = propertyValue_1[_i];\n        var serializedItem = undefined;\n\n        if (item instanceof SerializableObject) {\n          serializedItem = item.toJSON(this);\n        } else if (item.toJSON) {\n          serializedItem = item.toJSON();\n        } else {\n          serializedItem = item;\n        }\n\n        if (serializedItem !== undefined) {\n          items.push(serializedItem);\n        }\n      }\n    }\n\n    if (items.length == 0) {\n      if (target.hasOwnProperty(propertyName) && Array.isArray(target[propertyName])) {\n        delete target[propertyName];\n      }\n    } else {\n      this.serializeValue(target, propertyName, items);\n    }\n  };\n\n  BaseSerializationContext.prototype.clearEvents = function () {\n    this._validationEvents = [];\n  };\n\n  BaseSerializationContext.prototype.logEvent = function (source, phase, event, message) {\n    this._validationEvents.push({\n      source: source,\n      phase: phase,\n      event: event,\n      message: message\n    });\n  };\n\n  BaseSerializationContext.prototype.logParseEvent = function (source, event, message) {\n    this.logEvent(source, Enums.ValidationPhase.Parse, event, message);\n  };\n\n  BaseSerializationContext.prototype.getEventAt = function (index) {\n    return this._validationEvents[index];\n  };\n\n  Object.defineProperty(BaseSerializationContext.prototype, \"eventCount\", {\n    get: function () {\n      return this._validationEvents.length;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return BaseSerializationContext;\n}();\n\nexports.BaseSerializationContext = BaseSerializationContext;\n\nvar SimpleSerializationContext =\n/** @class */\nfunction (_super) {\n  __extends(SimpleSerializationContext, _super);\n\n  function SimpleSerializationContext() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return SimpleSerializationContext;\n}(BaseSerializationContext);\n\nvar PropertyDefinition =\n/** @class */\nfunction () {\n  function PropertyDefinition(targetVersion, name, defaultValue, onGetInitialValue) {\n    this.targetVersion = targetVersion;\n    this.name = name;\n    this.defaultValue = defaultValue;\n    this.onGetInitialValue = onGetInitialValue;\n    this.isSerializationEnabled = true;\n    this.sequentialNumber = PropertyDefinition._sequentialNumber;\n    PropertyDefinition._sequentialNumber++;\n  }\n\n  PropertyDefinition.prototype.getInternalName = function () {\n    return this.name;\n  };\n\n  PropertyDefinition.prototype.parse = function (sender, source, context) {\n    return source[this.name];\n  };\n\n  PropertyDefinition.prototype.toJSON = function (sender, target, value, context) {\n    context.serializeValue(target, this.name, value, this.defaultValue);\n  };\n\n  PropertyDefinition._sequentialNumber = 0;\n  return PropertyDefinition;\n}();\n\nexports.PropertyDefinition = PropertyDefinition;\n\nvar StringProperty =\n/** @class */\nfunction (_super) {\n  __extends(StringProperty, _super);\n\n  function StringProperty(targetVersion, name, treatEmptyAsUndefined, regEx, defaultValue, onGetInitialValue) {\n    if (treatEmptyAsUndefined === void 0) {\n      treatEmptyAsUndefined = true;\n    }\n\n    var _this = _super.call(this, targetVersion, name, defaultValue, onGetInitialValue) || this;\n\n    _this.targetVersion = targetVersion;\n    _this.name = name;\n    _this.treatEmptyAsUndefined = treatEmptyAsUndefined;\n    _this.regEx = regEx;\n    _this.defaultValue = defaultValue;\n    _this.onGetInitialValue = onGetInitialValue;\n    return _this;\n  }\n\n  StringProperty.prototype.parse = function (sender, source, context) {\n    var parsedValue = Utils.parseString(source[this.name], this.defaultValue);\n    var isUndefined = parsedValue === undefined || parsedValue === \"\" && this.treatEmptyAsUndefined;\n\n    if (!isUndefined && this.regEx !== undefined) {\n      var matches = this.regEx.exec(parsedValue);\n\n      if (!matches) {\n        context.logParseEvent(sender, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.invalidPropertyValue(parsedValue, this.name));\n        return undefined;\n      }\n    }\n\n    return parsedValue;\n  };\n\n  StringProperty.prototype.toJSON = function (sender, target, value, context) {\n    context.serializeValue(target, this.name, value === \"\" && this.treatEmptyAsUndefined ? undefined : value, this.defaultValue);\n  };\n\n  return StringProperty;\n}(PropertyDefinition);\n\nexports.StringProperty = StringProperty;\n\nvar BoolProperty =\n/** @class */\nfunction (_super) {\n  __extends(BoolProperty, _super);\n\n  function BoolProperty() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  BoolProperty.prototype.parse = function (sender, source, context) {\n    return Utils.parseBool(source[this.name], this.defaultValue);\n  };\n\n  BoolProperty.prototype.toJSON = function (sender, target, value, context) {\n    context.serializeValue(target, this.name, value, this.defaultValue);\n  };\n\n  return BoolProperty;\n}(PropertyDefinition);\n\nexports.BoolProperty = BoolProperty;\n\nvar NumProperty =\n/** @class */\nfunction (_super) {\n  __extends(NumProperty, _super);\n\n  function NumProperty() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  NumProperty.prototype.parse = function (sender, source, context) {\n    return Utils.parseNumber(source[this.name], this.defaultValue);\n  };\n\n  NumProperty.prototype.toJSON = function (sender, target, value, context) {\n    context.serializeNumber(target, this.name, value, this.defaultValue);\n  };\n\n  return NumProperty;\n}(PropertyDefinition);\n\nexports.NumProperty = NumProperty;\n\nvar PixelSizeProperty =\n/** @class */\nfunction (_super) {\n  __extends(PixelSizeProperty, _super);\n\n  function PixelSizeProperty() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PixelSizeProperty.prototype.parse = function (sender, source, context) {\n    var result = undefined;\n    var value = source[this.name];\n\n    if (typeof value === \"string\") {\n      var isValid = false;\n\n      try {\n        var size = shared_1.SizeAndUnit.parse(value, true);\n\n        if (size.unit == Enums.SizeUnit.Pixel) {\n          result = size.physicalSize;\n          isValid = true;\n        }\n      } catch (_a) {// Do nothing. A parse error is emitted below\n      }\n\n      if (!isValid) {\n        context.logParseEvent(sender, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.invalidPropertyValue(source[this.name], \"minHeight\"));\n      }\n    }\n\n    return result;\n  };\n\n  PixelSizeProperty.prototype.toJSON = function (sender, target, value, context) {\n    context.serializeValue(target, this.name, typeof value === \"number\" && !isNaN(value) ? value + \"px\" : undefined);\n  };\n\n  return PixelSizeProperty;\n}(PropertyDefinition);\n\nexports.PixelSizeProperty = PixelSizeProperty;\n\nvar ValueSetProperty =\n/** @class */\nfunction (_super) {\n  __extends(ValueSetProperty, _super);\n\n  function ValueSetProperty(targetVersion, name, values, defaultValue, onGetInitialValue) {\n    var _this = _super.call(this, targetVersion, name, defaultValue, onGetInitialValue) || this;\n\n    _this.targetVersion = targetVersion;\n    _this.name = name;\n    _this.values = values;\n    _this.defaultValue = defaultValue;\n    _this.onGetInitialValue = onGetInitialValue;\n    return _this;\n  }\n\n  ValueSetProperty.prototype.isValidValue = function (value, context) {\n    for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\n      var versionedValue = _a[_i];\n\n      if (value.toLowerCase() === versionedValue.value.toLowerCase()) {\n        var targetVersion = versionedValue.targetVersion ? versionedValue.targetVersion : this.targetVersion;\n        return targetVersion.compareTo(context.targetVersion) <= 0;\n      }\n    }\n\n    return false;\n  };\n\n  ValueSetProperty.prototype.parse = function (sender, source, context) {\n    var sourceValue = source[this.name];\n\n    if (sourceValue === undefined) {\n      return this.defaultValue;\n    }\n\n    if (typeof sourceValue === \"string\") {\n      for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\n        var versionedValue = _a[_i];\n\n        if (sourceValue.toLowerCase() === versionedValue.value.toLowerCase()) {\n          var targetVersion = versionedValue.targetVersion ? versionedValue.targetVersion : this.targetVersion;\n\n          if (targetVersion.compareTo(context.targetVersion) <= 0) {\n            return versionedValue.value;\n          } else {\n            context.logParseEvent(sender, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.propertyValueNotSupported(sourceValue, this.name, targetVersion.toString(), context.targetVersion.toString()));\n            return this.defaultValue;\n          }\n        }\n      }\n    }\n\n    context.logParseEvent(sender, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.invalidPropertyValue(sourceValue, this.name));\n    return this.defaultValue;\n  };\n\n  ValueSetProperty.prototype.toJSON = function (sender, target, value, context) {\n    var valueFound = false;\n\n    for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\n      var versionedValue = _a[_i];\n\n      if (versionedValue.value === value) {\n        var targetVersion = versionedValue.targetVersion ? versionedValue.targetVersion : this.targetVersion;\n\n        if (targetVersion.compareTo(context.targetVersion) <= 0) {\n          valueFound = true;\n          break;\n        } else {\n          context.logEvent(sender, Enums.ValidationPhase.ToJSON, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.propertyValueNotSupported(value, this.name, targetVersion.toString(), context.targetVersion.toString()));\n        }\n      }\n    }\n\n    if (valueFound) {\n      context.serializeValue(target, this.name, value, this.defaultValue);\n    }\n  };\n\n  return ValueSetProperty;\n}(PropertyDefinition);\n\nexports.ValueSetProperty = ValueSetProperty;\n\nvar EnumProperty =\n/** @class */\nfunction (_super) {\n  __extends(EnumProperty, _super);\n\n  function EnumProperty(targetVersion, name, enumType, defaultValue, values, onGetInitialValue) {\n    var _this = _super.call(this, targetVersion, name, defaultValue, onGetInitialValue) || this;\n\n    _this.targetVersion = targetVersion;\n    _this.name = name;\n    _this.enumType = enumType;\n    _this.defaultValue = defaultValue;\n    _this.onGetInitialValue = onGetInitialValue;\n    _this._values = [];\n\n    if (!values) {\n      for (var key in enumType) {\n        var keyAsNumber = parseInt(key, 10);\n\n        if (keyAsNumber >= 0) {\n          _this._values.push({\n            value: keyAsNumber\n          });\n        }\n      }\n    } else {\n      _this._values = values;\n    }\n\n    return _this;\n  }\n\n  EnumProperty.prototype.parse = function (sender, source, context) {\n    var sourceValue = source[this.name];\n\n    if (typeof sourceValue !== \"string\") {\n      return this.defaultValue;\n    }\n\n    var enumValue = Utils.getEnumValueByName(this.enumType, sourceValue);\n\n    if (enumValue !== undefined) {\n      for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\n        var versionedValue = _a[_i];\n\n        if (versionedValue.value === enumValue) {\n          var targetVersion = versionedValue.targetVersion ? versionedValue.targetVersion : this.targetVersion;\n\n          if (targetVersion.compareTo(context.targetVersion) <= 0) {\n            return enumValue;\n          } else {\n            context.logParseEvent(sender, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.propertyValueNotSupported(sourceValue, this.name, targetVersion.toString(), context.targetVersion.toString()));\n            return this.defaultValue;\n          }\n        }\n      }\n    }\n\n    context.logParseEvent(sender, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.invalidPropertyValue(sourceValue, this.name));\n    return this.defaultValue;\n  };\n\n  EnumProperty.prototype.toJSON = function (sender, target, value, context) {\n    if (value !== undefined) {\n      var valueFound = false;\n\n      for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\n        var versionedValue = _a[_i];\n\n        if (versionedValue.value === value) {\n          var targetVersion = versionedValue.targetVersion ? versionedValue.targetVersion : this.targetVersion;\n\n          if (targetVersion.compareTo(context.targetVersion) <= 0) {\n            valueFound = true;\n            break;\n          } else {\n            context.logEvent(sender, Enums.ValidationPhase.ToJSON, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.invalidPropertyValue(value, this.name));\n          }\n        }\n      }\n\n      if (valueFound) {\n        context.serializeEnum(this.enumType, target, this.name, value, this.defaultValue);\n      }\n    }\n  };\n\n  Object.defineProperty(EnumProperty.prototype, \"values\", {\n    get: function () {\n      return this._values;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return EnumProperty;\n}(PropertyDefinition);\n\nexports.EnumProperty = EnumProperty;\n\nvar SerializableObjectProperty =\n/** @class */\nfunction (_super) {\n  __extends(SerializableObjectProperty, _super);\n\n  function SerializableObjectProperty(targetVersion, name, objectType, defaultValue) {\n    var _this = _super.call(this, targetVersion, name, defaultValue, function (sender) {\n      return new _this.objectType();\n    }) || this;\n\n    _this.targetVersion = targetVersion;\n    _this.name = name;\n    _this.objectType = objectType;\n    return _this;\n  }\n\n  SerializableObjectProperty.prototype.parse = function (sender, source, context) {\n    var sourceValue = source[this.name];\n\n    if (sourceValue === undefined) {\n      return this.onGetInitialValue ? this.onGetInitialValue(sender) : this.defaultValue;\n    }\n\n    var result = new this.objectType();\n    result.parse(sourceValue, context);\n    return result;\n  };\n\n  SerializableObjectProperty.prototype.toJSON = function (sender, target, value, context) {\n    var serializedValue = value !== undefined ? value.toJSON(context) : value;\n\n    if (typeof serializedValue === \"object\" && Object.keys(serializedValue).length === 0) {\n      serializedValue = undefined;\n    }\n\n    _super.prototype.toJSON.call(this, sender, target, serializedValue, context);\n  };\n\n  return SerializableObjectProperty;\n}(PropertyDefinition);\n\nexports.SerializableObjectProperty = SerializableObjectProperty;\n\nvar SerializableObjectCollectionProperty =\n/** @class */\nfunction (_super) {\n  __extends(SerializableObjectCollectionProperty, _super);\n\n  function SerializableObjectCollectionProperty(targetVersion, name, objectType, onItemAdded) {\n    var _this = _super.call(this, targetVersion, name, undefined, function (sender) {\n      return [];\n    }) || this;\n\n    _this.targetVersion = targetVersion;\n    _this.name = name;\n    _this.objectType = objectType;\n    _this.onItemAdded = onItemAdded;\n    return _this;\n  }\n\n  SerializableObjectCollectionProperty.prototype.parse = function (sender, source, context) {\n    var result = [];\n    var sourceCollection = source[this.name];\n\n    if (Array.isArray(sourceCollection)) {\n      for (var _i = 0, sourceCollection_1 = sourceCollection; _i < sourceCollection_1.length; _i++) {\n        var sourceItem = sourceCollection_1[_i];\n        var item = new this.objectType();\n        item.parse(sourceItem, context);\n        result.push(item);\n\n        if (this.onItemAdded) {\n          this.onItemAdded(sender, item);\n        }\n      }\n    }\n\n    return result.length > 0 ? result : this.onGetInitialValue ? this.onGetInitialValue(sender) : undefined;\n  };\n\n  SerializableObjectCollectionProperty.prototype.toJSON = function (sender, target, value, context) {\n    context.serializeArray(target, this.name, value);\n  };\n\n  return SerializableObjectCollectionProperty;\n}(PropertyDefinition);\n\nexports.SerializableObjectCollectionProperty = SerializableObjectCollectionProperty;\n\nvar CustomProperty =\n/** @class */\nfunction (_super) {\n  __extends(CustomProperty, _super);\n\n  function CustomProperty(targetVersion, name, onParse, onToJSON, defaultValue, onGetInitialValue) {\n    var _this = _super.call(this, targetVersion, name, defaultValue, onGetInitialValue) || this;\n\n    _this.targetVersion = targetVersion;\n    _this.name = name;\n    _this.onParse = onParse;\n    _this.onToJSON = onToJSON;\n    _this.defaultValue = defaultValue;\n    _this.onGetInitialValue = onGetInitialValue;\n\n    if (!_this.onParse) {\n      throw new Error(\"CustomPropertyDefinition instances must have an onParse handler.\");\n    }\n\n    if (!_this.onToJSON) {\n      throw new Error(\"CustomPropertyDefinition instances must have an onToJSON handler.\");\n    }\n\n    return _this;\n  }\n\n  CustomProperty.prototype.parse = function (sender, source, context) {\n    return this.onParse(sender, this, source, context);\n  };\n\n  CustomProperty.prototype.toJSON = function (sender, target, value, context) {\n    this.onToJSON(sender, this, target, value, context);\n  };\n\n  return CustomProperty;\n}(PropertyDefinition);\n\nexports.CustomProperty = CustomProperty;\n\nvar SerializableObjectSchema =\n/** @class */\nfunction () {\n  function SerializableObjectSchema() {\n    this._properties = [];\n  }\n\n  SerializableObjectSchema.prototype.indexOf = function (property) {\n    for (var i = 0; i < this._properties.length; i++) {\n      if (this._properties[i] === property) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  SerializableObjectSchema.prototype.add = function () {\n    var properties = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      properties[_i] = arguments[_i];\n    }\n\n    for (var i = 0; i < properties.length; i++) {\n      if (this.indexOf(properties[i]) === -1) {\n        this._properties.push(properties[i]);\n      }\n    }\n  };\n\n  SerializableObjectSchema.prototype.remove = function () {\n    var properties = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      properties[_i] = arguments[_i];\n    }\n\n    for (var _a = 0, properties_1 = properties; _a < properties_1.length; _a++) {\n      var property_1 = properties_1[_a];\n\n      while (true) {\n        var index = this.indexOf(property_1);\n\n        if (index >= 0) {\n          this._properties.splice(index, 1);\n        } else {\n          break;\n        }\n      }\n    }\n  };\n\n  SerializableObjectSchema.prototype.getItemAt = function (index) {\n    return this._properties[index];\n  };\n\n  SerializableObjectSchema.prototype.getCount = function () {\n    return this._properties.length;\n  };\n\n  return SerializableObjectSchema;\n}();\n\nexports.SerializableObjectSchema = SerializableObjectSchema; // This is a decorator function, used to map SerializableObject descendant class members to\n// schema properties\n\nfunction property(property) {\n  return function (target, propertyKey) {\n    var descriptor = Object.getOwnPropertyDescriptor(target, propertyKey) || {};\n\n    if (!descriptor.get && !descriptor.set) {\n      descriptor.get = function () {\n        return this.getValue(property);\n      };\n\n      descriptor.set = function (value) {\n        this.setValue(property, value);\n      };\n\n      Object.defineProperty(target, propertyKey, descriptor);\n    }\n  };\n}\n\nexports.property = property;\n\nvar SerializableObject =\n/** @class */\nfunction () {\n  function SerializableObject() {\n    this._propertyBag = {};\n    this._rawProperties = {};\n    this.maxVersion = Versions.v1_3;\n    var s = this.getSchema();\n\n    for (var i = 0; i < s.getCount(); i++) {\n      var property_2 = s.getItemAt(i);\n\n      if (property_2.onGetInitialValue) {\n        this.setValue(property_2, property_2.onGetInitialValue(this));\n      }\n    }\n  }\n\n  SerializableObject.prototype.getDefaultSerializationContext = function () {\n    return new SimpleSerializationContext();\n  };\n\n  SerializableObject.prototype.populateSchema = function (schema) {\n    var ctor = this.constructor;\n    var properties = [];\n\n    for (var propertyName in ctor) {\n      try {\n        var propertyValue = ctor[propertyName];\n\n        if (propertyValue instanceof PropertyDefinition) {\n          properties.push(propertyValue);\n        }\n      } catch (_a) {// If a property happens to have a getter function and\n        // it throws an exception, we need to catch it here\n      }\n    }\n\n    if (properties.length > 0) {\n      var sortedProperties = properties.sort(function (p1, p2) {\n        if (p1.sequentialNumber > p2.sequentialNumber) {\n          return 1;\n        } else if (p1.sequentialNumber < p2.sequentialNumber) {\n          return -1;\n        }\n\n        return 0;\n      });\n      schema.add.apply(schema, sortedProperties);\n    }\n\n    if (SerializableObject.onRegisterCustomProperties) {\n      SerializableObject.onRegisterCustomProperties(this, schema);\n    }\n  };\n\n  SerializableObject.prototype.getValue = function (property) {\n    return this._propertyBag.hasOwnProperty(property.getInternalName()) ? this._propertyBag[property.getInternalName()] : property.defaultValue;\n  };\n\n  SerializableObject.prototype.setValue = function (property, value) {\n    if (value === undefined || value === null) {\n      delete this._propertyBag[property.getInternalName()];\n    } else {\n      this._propertyBag[property.getInternalName()] = value;\n    }\n  };\n\n  SerializableObject.prototype.internalParse = function (source, context) {\n    this._propertyBag = {};\n    this._rawProperties = shared_1.GlobalSettings.enableFullJsonRoundTrip ? source ? source : {} : {};\n\n    if (source) {\n      var s = this.getSchema();\n\n      for (var i = 0; i < s.getCount(); i++) {\n        var property_3 = s.getItemAt(i);\n\n        if (property_3.isSerializationEnabled) {\n          var propertyValue = property_3.onGetInitialValue ? property_3.onGetInitialValue(this) : undefined;\n\n          if (source.hasOwnProperty(property_3.name)) {\n            if (property_3.targetVersion.compareTo(context.targetVersion) <= 0) {\n              propertyValue = property_3.parse(this, source, context);\n            } else {\n              context.logParseEvent(this, Enums.ValidationEvent.UnsupportedProperty, strings_1.Strings.errors.propertyNotSupported(property_3.name, property_3.targetVersion.toString(), context.targetVersion.toString()));\n            }\n          }\n\n          this.setValue(property_3, propertyValue);\n        }\n      }\n    } else {\n      this.resetDefaultValues();\n    }\n  };\n\n  SerializableObject.prototype.internalToJSON = function (target, context) {\n    var s = this.getSchema();\n    var serializedProperties = [];\n\n    for (var i = 0; i < s.getCount(); i++) {\n      var property_4 = s.getItemAt(i); // Avoid serializing the same property multiple times. This is necessary\n      // because some property definitions map to the same underlying schema\n      // property\n\n      if (property_4.isSerializationEnabled && property_4.targetVersion.compareTo(context.targetVersion) <= 0 && serializedProperties.indexOf(property_4.name) === -1) {\n        property_4.toJSON(this, target, this.getValue(property_4), context);\n        serializedProperties.push(property_4.name);\n      }\n    }\n  };\n\n  SerializableObject.prototype.shouldSerialize = function (context) {\n    return true;\n  };\n\n  SerializableObject.prototype.parse = function (source, context) {\n    this.internalParse(source, context ? context : new SimpleSerializationContext());\n  };\n\n  SerializableObject.prototype.toJSON = function (context) {\n    var effectiveContext;\n\n    if (context && context instanceof BaseSerializationContext) {\n      effectiveContext = context;\n    } else {\n      effectiveContext = this.getDefaultSerializationContext();\n      effectiveContext.toJSONOriginalParam = context;\n    }\n\n    if (this.shouldSerialize(effectiveContext)) {\n      var result = void 0;\n\n      if (shared_1.GlobalSettings.enableFullJsonRoundTrip && this._rawProperties && typeof this._rawProperties === \"object\") {\n        result = this._rawProperties;\n      } else {\n        result = {};\n      }\n\n      this.internalToJSON(result, effectiveContext);\n      return result;\n    } else {\n      return undefined;\n    }\n  };\n\n  SerializableObject.prototype.hasDefaultValue = function (property) {\n    return this.getValue(property) === property.defaultValue;\n  };\n\n  SerializableObject.prototype.hasAllDefaultValues = function () {\n    var s = this.getSchema();\n\n    for (var i = 0; i < s.getCount(); i++) {\n      var property_5 = s.getItemAt(i);\n\n      if (!this.hasDefaultValue(property_5)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  SerializableObject.prototype.resetDefaultValues = function () {\n    var s = this.getSchema();\n\n    for (var i = 0; i < s.getCount(); i++) {\n      var property_6 = s.getItemAt(i);\n      this.setValue(property_6, property_6.defaultValue);\n    }\n  };\n\n  SerializableObject.prototype.setCustomProperty = function (name, value) {\n    var shouldDeleteProperty = typeof value === \"string\" && !value || value === undefined || value === null;\n\n    if (shouldDeleteProperty) {\n      delete this._rawProperties[name];\n    } else {\n      this._rawProperties[name] = value;\n    }\n  };\n\n  SerializableObject.prototype.getCustomProperty = function (name) {\n    return this._rawProperties[name];\n  };\n\n  SerializableObject.prototype.getSchema = function () {\n    var schema = SerializableObject._schemaCache[this.getSchemaKey()];\n\n    if (!schema) {\n      schema = new SerializableObjectSchema();\n      this.populateSchema(schema);\n      SerializableObject._schemaCache[this.getSchemaKey()] = schema;\n    }\n\n    return schema;\n  };\n\n  SerializableObject._schemaCache = {};\n  return SerializableObject;\n}();\n\nexports.SerializableObject = SerializableObject;","map":{"version":3,"sources":["../src/serialization.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;geAAA;AACA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AACA,IAAA,KAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,IAAA,KAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AASA,IAAA,OAAA;AAAA;AAAA,YAAA;AAOI,WAAA,OAAA,CAAY,KAAZ,EAA+B,KAA/B,EAAkD,KAAlD,EAAgE;AAApD,QAAA,KAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,KAAA,GAAA,CAAA;AAAiB;;AAAE,QAAA,KAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,KAAA,GAAA,CAAA;AAAiB;;AAHxC,SAAA,QAAA,GAAoB,IAApB;AAIJ,SAAK,MAAL,GAAc,KAAd;AACA,SAAK,MAAL,GAAc,KAAd;AACA,SAAK,MAAL,GAAc,KAAd;AACH;;AAEM,EAAA,OAAA,CAAA,KAAA,GAAP,UAAa,aAAb,EAAoC,OAApC,EAAqE;AACjE,QAAI,CAAC,aAAL,EAAoB;AAChB,aAAO,SAAP;AACH;;AAED,QAAI,MAAM,GAAG,IAAI,OAAJ,EAAb;AACA,IAAA,MAAM,CAAC,cAAP,GAAwB,aAAxB;AAEA,QAAI,KAAK,GAAG,eAAZ;AACA,QAAI,OAAO,GAAG,KAAK,CAAC,IAAN,CAAW,aAAX,CAAd;;AAEA,QAAI,OAAO,IAAI,IAAX,IAAmB,OAAO,CAAC,MAAR,IAAkB,CAAzC,EAA4C;AACxC,MAAA,MAAM,CAAC,MAAP,GAAgB,QAAQ,CAAC,OAAO,CAAC,CAAD,CAAR,CAAxB;AACA,MAAA,MAAM,CAAC,MAAP,GAAgB,QAAQ,CAAC,OAAO,CAAC,CAAD,CAAR,CAAxB;AACH,KAHD,MAIK;AACD,MAAA,MAAM,CAAC,QAAP,GAAkB,KAAlB;AACH;;AAED,QAAI,CAAC,MAAM,CAAC,QAAZ,EAAsB;AAClB,MAAA,OAAO,CAAC,aAAR,CACI,SADJ,EAEI,KAAK,CAAC,eAAN,CAAsB,oBAF1B,EAGI,SAAA,CAAA,OAAA,CAAQ,MAAR,CAAe,oBAAf,CAAoC,MAAM,CAAC,cAA3C,CAHJ;AAIH;;AAED,WAAO,MAAP;AACH,GA3BM;;AA6BP,EAAA,OAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACI,WAAO,CAAC,KAAK,QAAN,GAAiB,KAAK,cAAtB,GAAuC,KAAK,MAAL,GAAc,GAAd,GAAoB,KAAK,MAAvE;AACH,GAFD;;AAIA,EAAA,OAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACI,WAAO,KAAK,QAAL,EAAP;AACH,GAFD;;AAIA,EAAA,OAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAU,YAAV,EAA+B;AAC3B,QAAI,CAAC,KAAK,OAAN,IAAiB,CAAC,YAAY,CAAC,OAAnC,EAA4C;AACxC,YAAM,IAAI,KAAJ,CAAU,iCAAV,CAAN;AACH;;AAED,QAAI,KAAK,KAAL,GAAa,YAAY,CAAC,KAA9B,EAAqC;AACjC,aAAO,CAAP;AACH,KAFD,MAGK,IAAI,KAAK,KAAL,GAAa,YAAY,CAAC,KAA9B,EAAqC;AACtC,aAAO,CAAC,CAAR;AACH,KAFI,MAGA,IAAI,KAAK,KAAL,GAAa,YAAY,CAAC,KAA9B,EAAqC;AACtC,aAAO,CAAP;AACH,KAFI,MAGA,IAAI,KAAK,KAAL,GAAa,YAAY,CAAC,KAA9B,EAAqC;AACtC,aAAO,CAAC,CAAR;AACH;;AAED,WAAO,CAAP;AACH,GAnBD;;AAqBA,EAAA,MAAA,CAAA,cAAA,CAAI,OAAA,CAAA,SAAJ,EAAI,OAAJ,EAAS;SAAT,YAAA;AACI,aAAO,KAAK,MAAL,GAAc,KAAK,MAAnB,GAA4B,KAAK,QAAL,EAAnC;AACH,KAFQ;qBAAA;;AAAA,GAAT;AAIA,EAAA,MAAA,CAAA,cAAA,CAAI,OAAA,CAAA,SAAJ,EAAI,OAAJ,EAAS;SAAT,YAAA;AACI,aAAO,KAAK,MAAZ;AACH,KAFQ;qBAAA;;AAAA,GAAT;AAIA,EAAA,MAAA,CAAA,cAAA,CAAI,OAAA,CAAA,SAAJ,EAAI,OAAJ,EAAS;SAAT,YAAA;AACI,aAAO,KAAK,MAAZ;AACH,KAFQ;qBAAA;;AAAA,GAAT;AAIA,EAAA,MAAA,CAAA,cAAA,CAAI,OAAA,CAAA,SAAJ,EAAI,SAAJ,EAAW;SAAX,YAAA;AACI,aAAO,KAAK,QAAZ;AACH,KAFU;qBAAA;;AAAA,GAAX;AAGJ,SAAA,OAAA;AAAC,CAtFD,EAAA;;AAAa,OAAA,CAAA,OAAA,GAAA,OAAA;;AA0Fb,IAAA,QAAA;AAAA;AAAA,YAAA;AAAA,WAAA,QAAA,GAAA,CAMC;;AALmB,EAAA,QAAA,CAAA,IAAA,GAAO,IAAI,OAAJ,CAAY,CAAZ,EAAe,CAAf,CAAP;AACA,EAAA,QAAA,CAAA,IAAA,GAAO,IAAI,OAAJ,CAAY,CAAZ,EAAe,CAAf,CAAP;AACA,EAAA,QAAA,CAAA,IAAA,GAAO,IAAI,OAAJ,CAAY,CAAZ,EAAe,CAAf,CAAP;AACA,EAAA,QAAA,CAAA,IAAA,GAAO,IAAI,OAAJ,CAAY,CAAZ,EAAe,CAAf,CAAP;AACA,EAAA,QAAA,CAAA,MAAA,GAAS,QAAQ,CAAC,IAAlB;AACpB,SAAA,QAAA;AAAC,CAND,EAAA;;AAAa,OAAA,CAAA,QAAA,GAAA,QAAA;;AAQb,SAAgB,oBAAhB,CAAqC,OAArC,EAA6D,aAA7D,EAAyF;AACrF,MAAI,OAAO,YAAY,OAAvB,EAAgC;AAC5B,QAAI,aAAa,YAAY,OAA7B,EAAsC;AAClC,aAAO,aAAa,CAAC,SAAd,CAAwB,OAAxB,KAAoC,CAA3C;AACH,KAFD,MAGK;AACD;AACA,aAAO,IAAP;AACH;AACJ,GARD,MASK;AACD;AACA,WAAO,IAAP;AACH;AACJ;;AAdD,OAAA,CAAA,oBAAA,GAAA,oBAAA;;AAgBA,IAAA,wBAAA;AAAA;AAAA,YAAA;AAgHI,WAAA,wBAAA,CAAmB,aAAnB,EAA2D;AAAxC,QAAA,aAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,aAAA,GAAyB,QAAQ,CAAC,MAAlC;AAAwC;;AAAxC,SAAA,aAAA,GAAA,aAAA;AA/GX,SAAA,iBAAA,GAAwC,EAAxC;AA+GuD;;AA3G/D,EAAA,wBAAA,CAAA,SAAA,CAAA,cAAA,GAAA,UAAe,MAAf,EAA+C,YAA/C,EAAqE,aAArE,EAAyF,YAAzF,EAAsH;AAA7B,QAAA,YAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,YAAA,GAAA,SAAA;AAA6B;;AAClH,QAAI,aAAa,KAAK,IAAlB,IAA0B,aAAa,KAAK,SAA5C,IAAyD,aAAa,KAAK,YAA/E,EAA6F;AACzF,UAAI,CAAC,QAAA,CAAA,cAAA,CAAe,uBAApB,EAA6C;AACzC,eAAO,MAAM,CAAC,YAAD,CAAb;AACH;AACJ,KAJD,MAKK;AACD,MAAA,MAAM,CAAC,YAAD,CAAN,GAAuB,aAAvB;AACH;AACJ,GATD;;AAWA,EAAA,wBAAA,CAAA,SAAA,CAAA,eAAA,GAAA,UAAgB,MAAhB,EAAgD,YAAhD,EAAsE,aAAtE,EAAyG,YAAzG,EAAqJ;AAA5C,QAAA,YAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,YAAA,GAAA,SAAA;AAA4C;;AACjJ,QAAI,aAAa,KAAK,IAAlB,IAA0B,aAAa,KAAK,SAA5C,IAAyD,aAAa,KAAK,YAA3E,IAA2F,KAAK,CAAC,aAAD,CAApG,EAAqH;AACjH,aAAO,MAAM,CAAC,YAAD,CAAb;AACH,KAFD,MAGK;AACD,MAAA,MAAM,CAAC,YAAD,CAAN,GAAuB,aAAvB;AACH;AACJ,GAPD;;AASA,EAAA,wBAAA,CAAA,SAAA,CAAA,aAAA,GAAA,UACI,QADJ,EAEI,MAFJ,EAGI,YAHJ,EAII,aAJJ,EAKI,YALJ,EAKgD;AAA5C,QAAA,YAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,YAAA,GAAA,SAAA;AAA4C;;AAC5C,QAAI,WAAW,GAAG,MAAM,CAAC,YAAD,CAAxB;AAEA,QAAI,eAAe,GAAG,WAAW,IAAI,SAAf,GAA2B,IAA3B,GAAkC,QAAQ,CAAC,WAAD,CAAR,KAA0B,SAAlF;;AAEA,QAAI,aAAa,IAAI,YAArB,EAAmC;AAC/B,UAAI,eAAJ,EAAqB;AACjB,eAAO,MAAM,CAAC,YAAD,CAAb;AACH;AACJ,KAJD,MAKK;AACD,UAAI,aAAa,IAAI,SAArB,EAAgC;AAC5B,YAAI,eAAJ,EAAqB;AACjB,iBAAO,MAAM,CAAC,YAAD,CAAb;AACH;AACJ,OAJD,MAKK;AACD,QAAA,MAAM,CAAC,YAAD,CAAN,GAAuB,QAAQ,CAAC,aAAD,CAA/B;AACH;AACJ;AACJ,GAzBD;;AA2BA,EAAA,wBAAA,CAAA,SAAA,CAAA,cAAA,GAAA,UAAe,MAAf,EAA+C,YAA/C,EAAqE,aAArE,EAAqG;AACjG,QAAI,KAAK,GAAG,EAAZ;;AAEA,QAAI,aAAJ,EAAmB;AACf,WAAiB,IAAA,EAAA,GAAA,CAAA,EAAA,eAAA,GAAA,aAAjB,EAAiB,EAAA,GAAA,eAAA,CAAA,MAAjB,EAAiB,EAAA,EAAjB,EAAgC;AAA3B,YAAI,IAAI,GAAA,eAAA,CAAA,EAAA,CAAR;AACD,YAAI,cAAc,GAAQ,SAA1B;;AAEA,YAAI,IAAI,YAAY,kBAApB,EAAwC;AACpC,UAAA,cAAc,GAAG,IAAI,CAAC,MAAL,CAAY,IAAZ,CAAjB;AACH,SAFD,MAGK,IAAI,IAAI,CAAC,MAAT,EAAiB;AAClB,UAAA,cAAc,GAAG,IAAI,CAAC,MAAL,EAAjB;AACH,SAFI,MAGA;AACD,UAAA,cAAc,GAAG,IAAjB;AACH;;AAED,YAAI,cAAc,KAAK,SAAvB,EAAkC;AAC9B,UAAA,KAAK,CAAC,IAAN,CAAW,cAAX;AACH;AACJ;AACJ;;AAED,QAAI,KAAK,CAAC,MAAN,IAAgB,CAApB,EAAuB;AACnB,UAAI,MAAM,CAAC,cAAP,CAAsB,YAAtB,KAAuC,KAAK,CAAC,OAAN,CAAc,MAAM,CAAC,YAAD,CAApB,CAA3C,EAAgF;AAC5E,eAAO,MAAM,CAAC,YAAD,CAAb;AACH;AACJ,KAJD,MAKK;AACD,WAAK,cAAL,CAAoB,MAApB,EAA4B,YAA5B,EAA0C,KAA1C;AACH;AACJ,GA/BD;;AAiCA,EAAA,wBAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA;AACI,SAAK,iBAAL,GAAyB,EAAzB;AACH,GAFD;;AAIA,EAAA,wBAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UACI,MADJ,EAEI,KAFJ,EAGI,KAHJ,EAII,OAJJ,EAImB;AACf,SAAK,iBAAL,CAAuB,IAAvB,CACI;AACI,MAAA,MAAM,EAAE,MADZ;AAEI,MAAA,KAAK,EAAE,KAFX;AAGI,MAAA,KAAK,EAAE,KAHX;AAII,MAAA,OAAO,EAAE;AAJb,KADJ;AAQH,GAbD;;AAeA,EAAA,wBAAA,CAAA,SAAA,CAAA,aAAA,GAAA,UAAc,MAAd,EAAsD,KAAtD,EAAoF,OAApF,EAAmG;AAC/F,SAAK,QAAL,CAAc,MAAd,EAAsB,KAAK,CAAC,eAAN,CAAsB,KAA5C,EAAmD,KAAnD,EAA0D,OAA1D;AACH,GAFD;;AAIA,EAAA,wBAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,KAAX,EAAwB;AACpB,WAAO,KAAK,iBAAL,CAAuB,KAAvB,CAAP;AACH,GAFD;;AAMA,EAAA,MAAA,CAAA,cAAA,CAAI,wBAAA,CAAA,SAAJ,EAAI,YAAJ,EAAc;SAAd,YAAA;AACI,aAAO,KAAK,iBAAL,CAAuB,MAA9B;AACH,KAFa;qBAAA;;AAAA,GAAd;AAGJ,SAAA,wBAAA;AAAC,CArHD,EAAA;;AAAsB,OAAA,CAAA,wBAAA,GAAA,wBAAA;;AAuHtB,IAAA,0BAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyC,EAAA,SAAA,CAAA,0BAAA,EAAA,MAAA,CAAA;;AAAzC,WAAA,0BAAA,GAAA;;AAAoE;;AAAD,SAAA,0BAAA;AAAC,CAApE,CAAyC,wBAAzC,CAAA;;AAEA,IAAA,kBAAA;AAAA;AAAA,YAAA;AAmBI,WAAA,kBAAA,CACa,aADb,EAEa,IAFb,EAGa,YAHb,EAIa,iBAJb,EAIoE;AAHvD,SAAA,aAAA,GAAA,aAAA;AACA,SAAA,IAAA,GAAA,IAAA;AACA,SAAA,YAAA,GAAA,YAAA;AACA,SAAA,iBAAA,GAAA,iBAAA;AANb,SAAA,sBAAA,GAAkC,IAAlC;AAOQ,SAAK,gBAAL,GAAwB,kBAAkB,CAAC,iBAA3C;AAEA,IAAA,kBAAkB,CAAC,iBAAnB;AACH;;AAxBL,EAAA,kBAAA,CAAA,SAAA,CAAA,eAAA,GAAA,YAAA;AACI,WAAO,KAAK,IAAZ;AACH,GAFD;;AAIA,EAAA,kBAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,MAAN,EAAkC,MAAlC,EAAuD,OAAvD,EAAwF;AACpF,WAAO,MAAM,CAAC,KAAK,IAAN,CAAb;AACH,GAFD;;AAIA,EAAA,kBAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,MAAP,EAAmC,MAAnC,EAAwD,KAAxD,EAAoE,OAApE,EAAqG;AACjG,IAAA,OAAO,CAAC,cAAR,CAAuB,MAAvB,EAA+B,KAAK,IAApC,EAA0C,KAA1C,EAAiD,KAAK,YAAtD;AACH,GAFD;;AAVe,EAAA,kBAAA,CAAA,iBAAA,GAA4B,CAA5B;AA2BnB,SAAA,kBAAA;AAAC,CA5BD,EAAA;;AAAa,OAAA,CAAA,kBAAA,GAAA,kBAAA;;AA8Bb,IAAA,cAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoC,EAAA,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;;AA6BhC,WAAA,cAAA,CACa,aADb,EAEa,IAFb,EAGa,qBAHb,EAIa,KAJb,EAKa,YALb,EAMa,iBANb,EAMuE;AAH1D,QAAA,qBAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,qBAAA,GAAA,IAAA;AAAqC;;AAHlD,QAAA,KAAA,GAOI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,aAAN,EAAqB,IAArB,EAA2B,YAA3B,EAAyC,iBAAzC,KAA2D,IAP/D;;AACa,IAAA,KAAA,CAAA,aAAA,GAAA,aAAA;AACA,IAAA,KAAA,CAAA,IAAA,GAAA,IAAA;AACA,IAAA,KAAA,CAAA,qBAAA,GAAA,qBAAA;AACA,IAAA,KAAA,CAAA,KAAA,GAAA,KAAA;AACA,IAAA,KAAA,CAAA,YAAA,GAAA,YAAA;AACA,IAAA,KAAA,CAAA,iBAAA,GAAA,iBAAA;;AAEZ;;AApCD,EAAA,cAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,MAAN,EAAkC,MAAlC,EAAuD,OAAvD,EAAwF;AACpF,QAAI,WAAW,GAAG,KAAK,CAAC,WAAN,CAAkB,MAAM,CAAC,KAAK,IAAN,CAAxB,EAAqC,KAAK,YAA1C,CAAlB;AACA,QAAI,WAAW,GAAG,WAAW,KAAK,SAAhB,IAA8B,WAAW,KAAK,EAAhB,IAAsB,KAAK,qBAA3E;;AAEA,QAAI,CAAC,WAAD,IAAgB,KAAK,KAAL,KAAe,SAAnC,EAA8C;AAC1C,UAAI,OAAO,GAAG,KAAK,KAAL,CAAW,IAAX,CAAwB,WAAxB,CAAd;;AAEA,UAAI,CAAC,OAAL,EAAc;AACV,QAAA,OAAO,CAAC,aAAR,CACI,MADJ,EAEI,KAAK,CAAC,eAAN,CAAsB,oBAF1B,EAGI,SAAA,CAAA,OAAA,CAAQ,MAAR,CAAe,oBAAf,CAAoC,WAApC,EAAiD,KAAK,IAAtD,CAHJ;AAKA,eAAO,SAAP;AACH;AACJ;;AAED,WAAO,WAAP;AACH,GAlBD;;AAoBA,EAAA,cAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,MAAP,EAAmC,MAAnC,EAAwD,KAAxD,EAAmF,OAAnF,EAAoH;AAChH,IAAA,OAAO,CAAC,cAAR,CACI,MADJ,EAEI,KAAK,IAFT,EAGI,KAAK,KAAK,EAAV,IAAgB,KAAK,qBAArB,GAA6C,SAA7C,GAAyD,KAH7D,EAII,KAAK,YAJT;AAKH,GAND;;AAiBJ,SAAA,cAAA;AAAC,CAtCD,CAAoC,kBAApC,CAAA;;AAAa,OAAA,CAAA,cAAA,GAAA,cAAA;;AAwCb,IAAA,YAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkC,EAAA,SAAA,CAAA,YAAA,EAAA,MAAA,CAAA;;AAAlC,WAAA,YAAA,GAAA;;AAYC;;AAXG,EAAA,YAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,MAAN,EAAkC,MAAlC,EAAuD,OAAvD,EAAwF;AACpF,WAAO,KAAK,CAAC,SAAN,CAAgB,MAAM,CAAC,KAAK,IAAN,CAAtB,EAAmC,KAAK,YAAxC,CAAP;AACH,GAFD;;AAIA,EAAA,YAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,MAAP,EAAmC,MAAnC,EAAmD,KAAnD,EAA+E,OAA/E,EAAgH;AAC5G,IAAA,OAAO,CAAC,cAAR,CACI,MADJ,EAEI,KAAK,IAFT,EAGI,KAHJ,EAII,KAAK,YAJT;AAKH,GAND;;AAOJ,SAAA,YAAA;AAAC,CAZD,CAAkC,kBAAlC,CAAA;;AAAa,OAAA,CAAA,YAAA,GAAA,YAAA;;AAcb,IAAA,WAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiC,EAAA,SAAA,CAAA,WAAA,EAAA,MAAA,CAAA;;AAAjC,WAAA,WAAA,GAAA;;AAYC;;AAXG,EAAA,WAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,MAAN,EAAkC,MAAlC,EAAuD,OAAvD,EAAwF;AACpF,WAAO,KAAK,CAAC,WAAN,CAAkB,MAAM,CAAC,KAAK,IAAN,CAAxB,EAAqC,KAAK,YAA1C,CAAP;AACH,GAFD;;AAIA,EAAA,WAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,MAAP,EAAmC,MAAnC,EAAwD,KAAxD,EAAmF,OAAnF,EAAoH;AAChH,IAAA,OAAO,CAAC,eAAR,CACI,MADJ,EAEI,KAAK,IAFT,EAGI,KAHJ,EAII,KAAK,YAJT;AAKH,GAND;;AAOJ,SAAA,WAAA;AAAC,CAZD,CAAiC,kBAAjC,CAAA;;AAAa,OAAA,CAAA,WAAA,GAAA,WAAA;;AAcb,IAAA,iBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAuC,EAAA,SAAA,CAAA,iBAAA,EAAA,MAAA,CAAA;;AAAvC,WAAA,iBAAA,GAAA;;AAsCC;;AArCG,EAAA,iBAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,MAAN,EAAkC,MAAlC,EAAuD,OAAvD,EAAwF;AACpF,QAAI,MAAM,GAAuB,SAAjC;AACA,QAAI,KAAK,GAAG,MAAM,CAAC,KAAK,IAAN,CAAlB;;AAEA,QAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAC3B,UAAI,OAAO,GAAG,KAAd;;AAEA,UAAI;AACA,YAAI,IAAI,GAAG,QAAA,CAAA,WAAA,CAAY,KAAZ,CAAkB,KAAlB,EAAyB,IAAzB,CAAX;;AAEA,YAAI,IAAI,CAAC,IAAL,IAAa,KAAK,CAAC,QAAN,CAAe,KAAhC,EAAuC;AACnC,UAAA,MAAM,GAAG,IAAI,CAAC,YAAd;AAEA,UAAA,OAAO,GAAG,IAAV;AACH;AACJ,OARD,CASA,OAAA,EAAA,EAAM,CACF;AACH;;AAED,UAAI,CAAC,OAAL,EAAc;AACV,QAAA,OAAO,CAAC,aAAR,CACI,MADJ,EAEI,KAAK,CAAC,eAAN,CAAsB,oBAF1B,EAGI,SAAA,CAAA,OAAA,CAAQ,MAAR,CAAe,oBAAf,CAAoC,MAAM,CAAC,KAAK,IAAN,CAA1C,EAAuD,WAAvD,CAHJ;AAIH;AACJ;;AAED,WAAO,MAAP;AACH,GA7BD;;AA+BA,EAAA,iBAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,MAAP,EAAmC,MAAnC,EAAwD,KAAxD,EAAmF,OAAnF,EAAoH;AAChH,IAAA,OAAO,CAAC,cAAR,CACI,MADJ,EAEI,KAAK,IAFT,EAGI,OAAO,KAAP,KAAiB,QAAjB,IAA6B,CAAC,KAAK,CAAC,KAAD,CAAnC,GAA6C,KAAK,GAAG,IAArD,GAA4D,SAHhE;AAIH,GALD;;AAMJ,SAAA,iBAAA;AAAC,CAtCD,CAAuC,kBAAvC,CAAA;;AAAa,OAAA,CAAA,iBAAA,GAAA,iBAAA;;AA6Cb,IAAA,gBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsC,EAAA,SAAA,CAAA,gBAAA,EAAA,MAAA,CAAA;;AAuFlC,WAAA,gBAAA,CACa,aADb,EAEa,IAFb,EAGa,MAHb,EAIa,YAJb,EAKa,iBALb,EAKuE;AALvE,QAAA,KAAA,GAMI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,aAAN,EAAqB,IAArB,EAA2B,YAA3B,EAAyC,iBAAzC,KAA2D,IAN/D;;AACa,IAAA,KAAA,CAAA,aAAA,GAAA,aAAA;AACA,IAAA,KAAA,CAAA,IAAA,GAAA,IAAA;AACA,IAAA,KAAA,CAAA,MAAA,GAAA,MAAA;AACA,IAAA,KAAA,CAAA,YAAA,GAAA,YAAA;AACA,IAAA,KAAA,CAAA,iBAAA,GAAA,iBAAA;;AAEZ;;AA7FD,EAAA,gBAAA,CAAA,SAAA,CAAA,YAAA,GAAA,UAAa,KAAb,EAA4B,OAA5B,EAA6D;AACzD,SAA2B,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,KAAK,MAAhC,EAA2B,EAAA,GAAA,EAAA,CAAA,MAA3B,EAA2B,EAAA,EAA3B,EAAwC;AAAnC,UAAI,cAAc,GAAA,EAAA,CAAA,EAAA,CAAlB;;AACD,UAAI,KAAK,CAAC,WAAN,OAAwB,cAAc,CAAC,KAAf,CAAqB,WAArB,EAA5B,EAAgE;AAC5D,YAAI,aAAa,GAAG,cAAc,CAAC,aAAf,GAA+B,cAAc,CAAC,aAA9C,GAA8D,KAAK,aAAvF;AAEA,eAAO,aAAa,CAAC,SAAd,CAAwB,OAAO,CAAC,aAAhC,KAAkD,CAAzD;AACH;AACJ;;AAED,WAAO,KAAP;AACH,GAVD;;AAYA,EAAA,gBAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,MAAN,EAAkC,MAAlC,EAAuD,OAAvD,EAAwF;AACpF,QAAI,WAAW,GAAG,MAAM,CAAC,KAAK,IAAN,CAAxB;;AAEA,QAAI,WAAW,KAAK,SAApB,EAA+B;AAC3B,aAAO,KAAK,YAAZ;AACH;;AAED,QAAI,OAAO,WAAP,KAAuB,QAA3B,EAAqC;AACjC,WAA2B,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,KAAK,MAAhC,EAA2B,EAAA,GAAA,EAAA,CAAA,MAA3B,EAA2B,EAAA,EAA3B,EAAwC;AAAnC,YAAI,cAAc,GAAA,EAAA,CAAA,EAAA,CAAlB;;AACD,YAAI,WAAW,CAAC,WAAZ,OAA8B,cAAc,CAAC,KAAf,CAAqB,WAArB,EAAlC,EAAsE;AAClE,cAAI,aAAa,GAAG,cAAc,CAAC,aAAf,GAA+B,cAAc,CAAC,aAA9C,GAA8D,KAAK,aAAvF;;AAEA,cAAI,aAAa,CAAC,SAAd,CAAwB,OAAO,CAAC,aAAhC,KAAkD,CAAtD,EAAyD;AACrD,mBAAO,cAAc,CAAC,KAAtB;AACH,WAFD,MAGK;AACD,YAAA,OAAO,CAAC,aAAR,CACI,MADJ,EAEI,KAAK,CAAC,eAAN,CAAsB,oBAF1B,EAGI,SAAA,CAAA,OAAA,CAAQ,MAAR,CAAe,yBAAf,CACI,WADJ,EAEI,KAAK,IAFT,EAGI,aAAa,CAAC,QAAd,EAHJ,EAII,OAAO,CAAC,aAAR,CAAsB,QAAtB,EAJJ,CAHJ;AASA,mBAAO,KAAK,YAAZ;AACH;AACJ;AACJ;AACJ;;AAED,IAAA,OAAO,CAAC,aAAR,CACI,MADJ,EAEI,KAAK,CAAC,eAAN,CAAsB,oBAF1B,EAGI,SAAA,CAAA,OAAA,CAAQ,MAAR,CAAe,oBAAf,CAAoC,WAApC,EAAiD,KAAK,IAAtD,CAHJ;AAKA,WAAO,KAAK,YAAZ;AACH,GArCD;;AAuCA,EAAA,gBAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,MAAP,EAAmC,MAAnC,EAAwD,KAAxD,EAAmF,OAAnF,EAAoH;AAChH,QAAI,UAAU,GAAG,KAAjB;;AAEA,SAA2B,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,KAAK,MAAhC,EAA2B,EAAA,GAAA,EAAA,CAAA,MAA3B,EAA2B,EAAA,EAA3B,EAAwC;AAAnC,UAAI,cAAc,GAAA,EAAA,CAAA,EAAA,CAAlB;;AACD,UAAI,cAAc,CAAC,KAAf,KAAyB,KAA7B,EAAoC;AAChC,YAAI,aAAa,GAAG,cAAc,CAAC,aAAf,GAA+B,cAAc,CAAC,aAA9C,GAA8D,KAAK,aAAvF;;AAEA,YAAI,aAAa,CAAC,SAAd,CAAwB,OAAO,CAAC,aAAhC,KAAkD,CAAtD,EAAyD;AACrD,UAAA,UAAU,GAAG,IAAb;AAEA;AACH,SAJD,MAKK;AACD,UAAA,OAAO,CAAC,QAAR,CACI,MADJ,EAEI,KAAK,CAAC,eAAN,CAAsB,MAF1B,EAGI,KAAK,CAAC,eAAN,CAAsB,oBAH1B,EAII,SAAA,CAAA,OAAA,CAAQ,MAAR,CAAe,yBAAf,CACI,KADJ,EAEI,KAAK,IAFT,EAGI,aAAa,CAAC,QAAd,EAHJ,EAII,OAAO,CAAC,aAAR,CAAsB,QAAtB,EAJJ,CAJJ;AASH;AACJ;AACJ;;AAED,QAAI,UAAJ,EAAgB;AACZ,MAAA,OAAO,CAAC,cAAR,CACI,MADJ,EAEI,KAAK,IAFT,EAGI,KAHJ,EAII,KAAK,YAJT;AAKH;AACJ,GAjCD;;AA2CJ,SAAA,gBAAA;AAAC,CA/FD,CAAsC,kBAAtC,CAAA;;AAAa,OAAA,CAAA,gBAAA,GAAA,gBAAA;;AAiGb,IAAA,YAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyE,EAAA,SAAA,CAAA,YAAA,EAAA,MAAA,CAAA;;AA8ErE,WAAA,YAAA,CACa,aADb,EAEa,IAFb,EAGa,QAHb,EAIa,YAJb,EAKI,MALJ,EAMa,iBANb,EAMuE;AANvE,QAAA,KAAA,GAOI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,aAAN,EAAqB,IAArB,EAA2B,YAA3B,EAAyC,iBAAzC,KAA2D,IAP/D;;AACa,IAAA,KAAA,CAAA,aAAA,GAAA,aAAA;AACA,IAAA,KAAA,CAAA,IAAA,GAAA,IAAA;AACA,IAAA,KAAA,CAAA,QAAA,GAAA,QAAA;AACA,IAAA,KAAA,CAAA,YAAA,GAAA,YAAA;AAEA,IAAA,KAAA,CAAA,iBAAA,GAAA,iBAAA;AAnFL,IAAA,KAAA,CAAA,OAAA,GAAqC,EAArC;;AAsFJ,QAAI,CAAC,MAAL,EAAa;AACT,WAAK,IAAI,GAAT,IAAgB,QAAhB,EAA0B;AACtB,YAAI,WAAW,GAAG,QAAQ,CAAC,GAAD,EAAM,EAAN,CAA1B;;AAEA,YAAI,WAAW,IAAI,CAAnB,EAAsB;AAClB,UAAA,KAAI,CAAC,OAAL,CAAa,IAAb,CAAmB;AAAE,YAAA,KAAK,EAAE;AAAT,WAAnB;AACH;AACJ;AACJ,KARD,MASK;AACD,MAAA,KAAI,CAAC,OAAL,GAAe,MAAf;AACH;;;AACJ;;AAhGD,EAAA,YAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,MAAN,EAAkC,MAAlC,EAAuD,OAAvD,EAAwF;AACpF,QAAI,WAAW,GAAG,MAAM,CAAC,KAAK,IAAN,CAAxB;;AAEA,QAAI,OAAO,WAAP,KAAuB,QAA3B,EAAqC;AACjC,aAAO,KAAK,YAAZ;AACH;;AAED,QAAI,SAAS,GAAG,KAAK,CAAC,kBAAN,CAAyB,KAAK,QAA9B,EAAwC,WAAxC,CAAhB;;AAEA,QAAI,SAAS,KAAK,SAAlB,EAA6B;AACzB,WAA2B,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,KAAK,MAAhC,EAA2B,EAAA,GAAA,EAAA,CAAA,MAA3B,EAA2B,EAAA,EAA3B,EAAwC;AAAnC,YAAI,cAAc,GAAA,EAAA,CAAA,EAAA,CAAlB;;AACD,YAAI,cAAc,CAAC,KAAf,KAAyB,SAA7B,EAAwC;AACpC,cAAI,aAAa,GAAG,cAAc,CAAC,aAAf,GAA+B,cAAc,CAAC,aAA9C,GAA8D,KAAK,aAAvF;;AAEA,cAAI,aAAa,CAAC,SAAd,CAAwB,OAAO,CAAC,aAAhC,KAAkD,CAAtD,EAAyD;AACrD,mBAAO,SAAP;AACH,WAFD,MAGK;AACD,YAAA,OAAO,CAAC,aAAR,CACI,MADJ,EAEI,KAAK,CAAC,eAAN,CAAsB,oBAF1B,EAGI,SAAA,CAAA,OAAA,CAAQ,MAAR,CAAe,yBAAf,CACI,WADJ,EAEI,KAAK,IAFT,EAGI,aAAa,CAAC,QAAd,EAHJ,EAII,OAAO,CAAC,aAAR,CAAsB,QAAtB,EAJJ,CAHJ;AASA,mBAAO,KAAK,YAAZ;AACH;AACJ;AACJ;AACJ;;AAED,IAAA,OAAO,CAAC,aAAR,CACI,MADJ,EAEI,KAAK,CAAC,eAAN,CAAsB,oBAF1B,EAGI,SAAA,CAAA,OAAA,CAAQ,MAAR,CAAe,oBAAf,CAAoC,WAApC,EAAiD,KAAK,IAAtD,CAHJ;AAKA,WAAO,KAAK,YAAZ;AACH,GAvCD;;AAyCA,EAAA,YAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,MAAP,EAAmC,MAAnC,EAAwD,KAAxD,EAAmF,OAAnF,EAAoH;AAChH,QAAI,KAAK,KAAK,SAAd,EAAyB;AACrB,UAAI,UAAU,GAAG,KAAjB;;AAEA,WAA2B,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,KAAK,MAAhC,EAA2B,EAAA,GAAA,EAAA,CAAA,MAA3B,EAA2B,EAAA,EAA3B,EAAwC;AAAnC,YAAI,cAAc,GAAA,EAAA,CAAA,EAAA,CAAlB;;AACD,YAAI,cAAc,CAAC,KAAf,KAAyB,KAA7B,EAAoC;AAChC,cAAI,aAAa,GAAG,cAAc,CAAC,aAAf,GAA+B,cAAc,CAAC,aAA9C,GAA8D,KAAK,aAAvF;;AAEA,cAAI,aAAa,CAAC,SAAd,CAAwB,OAAO,CAAC,aAAhC,KAAkD,CAAtD,EAAyD;AACrD,YAAA,UAAU,GAAG,IAAb;AAEA;AACH,WAJD,MAKK;AACD,YAAA,OAAO,CAAC,QAAR,CACI,MADJ,EAEI,KAAK,CAAC,eAAN,CAAsB,MAF1B,EAGI,KAAK,CAAC,eAAN,CAAsB,oBAH1B,EAII,SAAA,CAAA,OAAA,CAAQ,MAAR,CAAe,oBAAf,CAAoC,KAApC,EAA2C,KAAK,IAAhD,CAJJ;AAKH;AACJ;AACJ;;AAED,UAAI,UAAJ,EAAgB;AACZ,QAAA,OAAO,CAAC,aAAR,CACI,KAAK,QADT,EAEI,MAFJ,EAGI,KAAK,IAHT,EAII,KAJJ,EAKI,KAAK,YALT;AAMH;AACJ;AACJ,GAhCD;;AAyDA,EAAA,MAAA,CAAA,cAAA,CAAI,YAAA,CAAA,SAAJ,EAAI,QAAJ,EAAU;SAAV,YAAA;AACI,aAAO,KAAK,OAAZ;AACH,KAFS;qBAAA;;AAAA,GAAV;AAGJ,SAAA,YAAA;AAAC,CAxGD,CAAyE,kBAAzE,CAAA;;AAAa,OAAA,CAAA,YAAA,GAAA,YAAA;;AA4Gb,IAAA,0BAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgD,EAAA,SAAA,CAAA,0BAAA,EAAA,MAAA,CAAA;;AAwB5C,WAAA,0BAAA,CACa,aADb,EAEa,IAFb,EAGa,UAHb,EAII,YAJJ,EAIqC;AAJrC,QAAA,KAAA,GAKI,MAAA,CAAA,IAAA,CAAA,IAAA,EACI,aADJ,EAEI,IAFJ,EAGI,YAHJ,EAII,UAAC,MAAD,EAA2B;AAAO,aAAO,IAAI,KAAI,CAAC,UAAT,EAAP;AAA+B,KAJrE,KAIsE,IAT1E;;AACa,IAAA,KAAA,CAAA,aAAA,GAAA,aAAA;AACA,IAAA,KAAA,CAAA,IAAA,GAAA,IAAA;AACA,IAAA,KAAA,CAAA,UAAA,GAAA,UAAA;;AAOZ;;AAjCD,EAAA,0BAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,MAAN,EAAkC,MAAlC,EAAuD,OAAvD,EAAwF;AACpF,QAAI,WAAW,GAAG,MAAM,CAAC,KAAK,IAAN,CAAxB;;AAEA,QAAI,WAAW,KAAK,SAApB,EAA+B;AAC3B,aAAO,KAAK,iBAAL,GAAyB,KAAK,iBAAL,CAAuB,MAAvB,CAAzB,GAA0D,KAAK,YAAtE;AACH;;AAED,QAAI,MAAM,GAAG,IAAI,KAAK,UAAT,EAAb;AACA,IAAA,MAAM,CAAC,KAAP,CAAa,WAAb,EAA0B,OAA1B;AAEA,WAAO,MAAP;AACH,GAXD;;AAaA,EAAA,0BAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,MAAP,EAAmC,MAAnC,EAAwD,KAAxD,EAA+F,OAA/F,EAAgI;AAC5H,QAAI,eAAe,GAAG,KAAK,KAAK,SAAV,GAAsB,KAAK,CAAC,MAAN,CAAa,OAAb,CAAtB,GAA8C,KAApE;;AAEA,QAAI,OAAO,eAAP,KAA2B,QAA3B,IAAuC,MAAM,CAAC,IAAP,CAAY,eAAZ,EAA6B,MAA7B,KAAwC,CAAnF,EAAsF;AAClF,MAAA,eAAe,GAAG,SAAlB;AACH;;AAED,IAAA,MAAA,CAAA,SAAA,CAAM,MAAN,CAAY,IAAZ,CAAY,IAAZ,EAAa,MAAb,EAAqB,MAArB,EAA6B,eAA7B,EAA8C,OAA9C;AACH,GARD;;AAqBJ,SAAA,0BAAA;AAAC,CAnCD,CAAgD,kBAAhD,CAAA;;AAAa,OAAA,CAAA,0BAAA,GAAA,0BAAA;;AAqCb,IAAA,oCAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA0D,EAAA,SAAA,CAAA,oCAAA,EAAA,MAAA,CAAA;;AA0BtD,WAAA,oCAAA,CACa,aADb,EAEa,IAFb,EAGa,UAHb,EAIa,WAJb,EAIyF;AAJzF,QAAA,KAAA,GAKI,MAAA,CAAA,IAAA,CAAA,IAAA,EACI,aADJ,EAEI,IAFJ,EAGI,SAHJ,EAII,UAAC,MAAD,EAA2B;AAAO,aAAO,EAAP;AAAY,KAJlD,KAImD,IATvD;;AACa,IAAA,KAAA,CAAA,aAAA,GAAA,aAAA;AACA,IAAA,KAAA,CAAA,IAAA,GAAA,IAAA;AACA,IAAA,KAAA,CAAA,UAAA,GAAA,UAAA;AACA,IAAA,KAAA,CAAA,WAAA,GAAA,WAAA;;AAMZ;;AAnCD,EAAA,oCAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,MAAN,EAAkC,MAAlC,EAAuD,OAAvD,EAAwF;AACpF,QAAI,MAAM,GAAqC,EAA/C;AAEA,QAAI,gBAAgB,GAAG,MAAM,CAAC,KAAK,IAAN,CAA7B;;AAEA,QAAI,KAAK,CAAC,OAAN,CAAc,gBAAd,CAAJ,EAAqC;AACjC,WAAuB,IAAA,EAAA,GAAA,CAAA,EAAA,kBAAA,GAAA,gBAAvB,EAAuB,EAAA,GAAA,kBAAA,CAAA,MAAvB,EAAuB,EAAA,EAAvB,EAAyC;AAApC,YAAI,UAAU,GAAA,kBAAA,CAAA,EAAA,CAAd;AACD,YAAI,IAAI,GAAG,IAAI,KAAK,UAAT,EAAX;AACA,QAAA,IAAI,CAAC,KAAL,CAAW,UAAX,EAAuB,OAAvB;AAEA,QAAA,MAAM,CAAC,IAAP,CAAY,IAAZ;;AAEA,YAAI,KAAK,WAAT,EAAsB;AAClB,eAAK,WAAL,CAAiB,MAAjB,EAAyB,IAAzB;AACH;AACJ;AACJ;;AAED,WAAO,MAAM,CAAC,MAAP,GAAgB,CAAhB,GAAoB,MAApB,GAA8B,KAAK,iBAAL,GAAyB,KAAK,iBAAL,CAAuB,MAAvB,CAAzB,GAA0D,SAA/F;AACH,GAnBD;;AAqBA,EAAA,oCAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,MAAP,EAAmC,MAAnC,EAAwD,KAAxD,EAAiG,OAAjG,EAAkI;AAC9H,IAAA,OAAO,CAAC,cAAR,CAAuB,MAAvB,EAA+B,KAAK,IAApC,EAA0C,KAA1C;AACH,GAFD;;AAeJ,SAAA,oCAAA;AAAC,CArCD,CAA0D,kBAA1D,CAAA;;AAAa,OAAA,CAAA,oCAAA,GAAA,oCAAA;;AAuCb,IAAA,cAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAuC,EAAA,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;;AASnC,WAAA,cAAA,CACa,aADb,EAEa,IAFb,EAGa,OAHb,EAIa,QAJb,EAKa,YALb,EAMa,iBANb,EAMkE;AANlE,QAAA,KAAA,GAOI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,aAAN,EAAqB,IAArB,EAA2B,YAA3B,EAAyC,iBAAzC,KAA2D,IAP/D;;AACa,IAAA,KAAA,CAAA,aAAA,GAAA,aAAA;AACA,IAAA,KAAA,CAAA,IAAA,GAAA,IAAA;AACA,IAAA,KAAA,CAAA,OAAA,GAAA,OAAA;AACA,IAAA,KAAA,CAAA,QAAA,GAAA,QAAA;AACA,IAAA,KAAA,CAAA,YAAA,GAAA,YAAA;AACA,IAAA,KAAA,CAAA,iBAAA,GAAA,iBAAA;;AAGT,QAAI,CAAC,KAAI,CAAC,OAAV,EAAmB;AACf,YAAM,IAAI,KAAJ,CAAU,kEAAV,CAAN;AACH;;AAED,QAAI,CAAC,KAAI,CAAC,QAAV,EAAoB;AAChB,YAAM,IAAI,KAAJ,CAAU,mEAAV,CAAN;AACH;;;AACJ;;AAxBD,EAAA,cAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,MAAN,EAAkC,MAAlC,EAAuD,OAAvD,EAAwF;AACpF,WAAO,KAAK,OAAL,CAAa,MAAb,EAAqB,IAArB,EAA2B,MAA3B,EAAmC,OAAnC,CAAP;AACH,GAFD;;AAIA,EAAA,cAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,MAAP,EAAmC,MAAnC,EAAwD,KAAxD,EAAkE,OAAlE,EAAmG;AAC/F,SAAK,QAAL,CAAc,MAAd,EAAsB,IAAtB,EAA4B,MAA5B,EAAoC,KAApC,EAA2C,OAA3C;AACH,GAFD;;AAqBJ,SAAA,cAAA;AAAC,CA1BD,CAAuC,kBAAvC,CAAA;;AAAa,OAAA,CAAA,cAAA,GAAA,cAAA;;AA4Bb,IAAA,wBAAA;AAAA;AAAA,YAAA;AAAA,WAAA,wBAAA,GAAA;AACY,SAAA,WAAA,GAAoC,EAApC;AA0CX;;AAxCG,EAAA,wBAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,QAAR,EAAoC;AAChC,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,WAAL,CAAiB,MAArC,EAA6C,CAAC,EAA9C,EAAkD;AAC9C,UAAI,KAAK,WAAL,CAAiB,CAAjB,MAAwB,QAA5B,EAAsC;AAClC,eAAO,CAAP;AACH;AACJ;;AAED,WAAO,CAAC,CAAR;AACH,GARD;;AAUA,EAAA,wBAAA,CAAA,SAAA,CAAA,GAAA,GAAA,YAAA;AAAI,QAAA,UAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAmC;AAAnC,MAAA,UAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,UAAU,CAAC,MAA/B,EAAuC,CAAC,EAAxC,EAA4C;AACxC,UAAI,KAAK,OAAL,CAAa,UAAU,CAAC,CAAD,CAAvB,MAAgC,CAAC,CAArC,EAAwC;AACpC,aAAK,WAAL,CAAiB,IAAjB,CAAsB,UAAU,CAAC,CAAD,CAAhC;AACH;AACJ;AACJ,GAND;;AAQA,EAAA,wBAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AAAO,QAAA,UAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAmC;AAAnC,MAAA,UAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACH,SAAqB,IAAA,EAAA,GAAA,CAAA,EAAA,YAAA,GAAA,UAArB,EAAqB,EAAA,GAAA,YAAA,CAAA,MAArB,EAAqB,EAAA,EAArB,EAAiC;AAA5B,UAAI,UAAQ,GAAA,YAAA,CAAA,EAAA,CAAZ;;AACD,aAAO,IAAP,EAAa;AACT,YAAI,KAAK,GAAG,KAAK,OAAL,CAAa,UAAb,CAAZ;;AAEA,YAAI,KAAK,IAAI,CAAb,EAAgB;AACZ,eAAK,WAAL,CAAiB,MAAjB,CAAwB,KAAxB,EAA+B,CAA/B;AACH,SAFD,MAGK;AACD;AACH;AACJ;AACJ;AACJ,GAbD;;AAeA,EAAA,wBAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAU,KAAV,EAAuB;AACnB,WAAO,KAAK,WAAL,CAAiB,KAAjB,CAAP;AACH,GAFD;;AAIA,EAAA,wBAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACI,WAAO,KAAK,WAAL,CAAiB,MAAxB;AACH,GAFD;;AAGJ,SAAA,wBAAA;AAAC,CA3CD,EAAA;;AAAa,OAAA,CAAA,wBAAA,GAAA,wBAAA,C,CA6Cb;AACA;;AACA,SAAgB,QAAhB,CAAyB,QAAzB,EAAqD;AACjD,SAAO,UAAS,MAAT,EAAsB,WAAtB,EAAyC;AAC5C,QAAI,UAAU,GAAG,MAAM,CAAC,wBAAP,CAAgC,MAAhC,EAAwC,WAAxC,KAAwD,EAAzE;;AAEA,QAAI,CAAC,UAAU,CAAC,GAAZ,IAAmB,CAAC,UAAU,CAAC,GAAnC,EAAwC;AACpC,MAAA,UAAU,CAAC,GAAX,GAAiB,YAAA;AAAqC,eAAO,KAAK,QAAL,CAAc,QAAd,CAAP;AAAiC,OAAvF;;AACA,MAAA,UAAU,CAAC,GAAX,GAAiB,UAAmC,KAAnC,EAA6C;AAAI,aAAK,QAAL,CAAc,QAAd,EAAwB,KAAxB;AAAiC,OAAnG;;AAEA,MAAA,MAAM,CAAC,cAAP,CAAsB,MAAtB,EAA8B,WAA9B,EAA2C,UAA3C;AACH;AACJ,GATD;AAUH;;AAXD,OAAA,CAAA,QAAA,GAAA,QAAA;;AAeA,IAAA,kBAAA;AAAA;AAAA,YAAA;AA8HI,WAAA,kBAAA,GAAA;AAzHQ,SAAA,YAAA,GAA4B,EAA5B;AACA,SAAA,cAAA,GAA8B,EAA9B;AAsHR,SAAA,UAAA,GAAsB,QAAQ,CAAC,IAA/B;AAGI,QAAI,CAAC,GAAG,KAAK,SAAL,EAAR;;AAEA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAAC,CAAC,QAAF,EAApB,EAAkC,CAAC,EAAnC,EAAuC;AACnC,UAAI,UAAQ,GAAG,CAAC,CAAC,SAAF,CAAY,CAAZ,CAAf;;AAEA,UAAI,UAAQ,CAAC,iBAAb,EAAgC;AAC5B,aAAK,QAAL,CAAc,UAAd,EAAwB,UAAQ,CAAC,iBAAT,CAA2B,IAA3B,CAAxB;AACH;AACJ;AACJ;;AA9HS,EAAA,kBAAA,CAAA,SAAA,CAAA,8BAAA,GAAV,YAAA;AACI,WAAO,IAAI,0BAAJ,EAAP;AACH,GAFS;;AAIA,EAAA,kBAAA,CAAA,SAAA,CAAA,cAAA,GAAV,UAAyB,MAAzB,EAAyD;AACrD,QAAI,IAAI,GAAQ,KAAK,WAArB;AACA,QAAI,UAAU,GAAyB,EAAvC;;AAEA,SAAK,IAAI,YAAT,IAAyB,IAAzB,EAA+B;AAC3B,UAAI;AACA,YAAI,aAAa,GAAG,IAAI,CAAC,YAAD,CAAxB;;AAEA,YAAI,aAAa,YAAY,kBAA7B,EAAiD;AAC7C,UAAA,UAAU,CAAC,IAAX,CAAgB,aAAhB;AACH;AACJ,OAND,CAOA,OAAA,EAAA,EAAM,CACF;AACA;AACH;AACJ;;AAED,QAAI,UAAU,CAAC,MAAX,GAAoB,CAAxB,EAA2B;AACvB,UAAI,gBAAgB,GAAG,UAAU,CAAC,IAAX,CAAgB,UAAC,EAAD,EAAyB,EAAzB,EAA+C;AAClF,YAAI,EAAE,CAAC,gBAAH,GAAsB,EAAE,CAAC,gBAA7B,EAA+C;AAC3C,iBAAO,CAAP;AACH,SAFD,MAGK,IAAI,EAAE,CAAC,gBAAH,GAAsB,EAAE,CAAC,gBAA7B,EAA+C;AAChD,iBAAO,CAAC,CAAR;AACH;;AAED,eAAO,CAAP;AACH,OATsB,CAAvB;AAWA,MAAA,MAAM,CAAC,GAAP,CAAU,KAAV,CAAA,MAAA,EAAc,gBAAd;AACH;;AAED,QAAI,kBAAkB,CAAC,0BAAvB,EAAmD;AAC/C,MAAA,kBAAkB,CAAC,0BAAnB,CAA8C,IAA9C,EAAoD,MAApD;AACH;AACJ,GApCS;;AAsCA,EAAA,kBAAA,CAAA,SAAA,CAAA,QAAA,GAAV,UAAmB,QAAnB,EAA+C;AAC3C,WAAO,KAAK,YAAL,CAAkB,cAAlB,CAAiC,QAAQ,CAAC,eAAT,EAAjC,IAA+D,KAAK,YAAL,CAAkB,QAAQ,CAAC,eAAT,EAAlB,CAA/D,GAA+G,QAAQ,CAAC,YAA/H;AACH,GAFS;;AAIA,EAAA,kBAAA,CAAA,SAAA,CAAA,QAAA,GAAV,UAAmB,QAAnB,EAAiD,KAAjD,EAA2D;AACvD,QAAI,KAAK,KAAK,SAAV,IAAuB,KAAK,KAAK,IAArC,EAA2C;AACvC,aAAO,KAAK,YAAL,CAAkB,QAAQ,CAAC,eAAT,EAAlB,CAAP;AACH,KAFD,MAGK;AACD,WAAK,YAAL,CAAkB,QAAQ,CAAC,eAAT,EAAlB,IAAgD,KAAhD;AACH;AACJ,GAPS;;AASA,EAAA,kBAAA,CAAA,SAAA,CAAA,aAAA,GAAV,UAAwB,MAAxB,EAA6C,OAA7C,EAA8E;AAC1E,SAAK,YAAL,GAAoB,EAApB;AACA,SAAK,cAAL,GAAsB,QAAA,CAAA,cAAA,CAAe,uBAAf,GAA0C,MAAM,GAAG,MAAH,GAAY,EAA5D,GAAkE,EAAxF;;AAEA,QAAI,MAAJ,EAAY;AACR,UAAI,CAAC,GAAG,KAAK,SAAL,EAAR;;AAEA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAAC,CAAC,QAAF,EAApB,EAAkC,CAAC,EAAnC,EAAuC;AACnC,YAAI,UAAQ,GAAG,CAAC,CAAC,SAAF,CAAY,CAAZ,CAAf;;AAEA,YAAI,UAAQ,CAAC,sBAAb,EAAqC;AACjC,cAAI,aAAa,GAAG,UAAQ,CAAC,iBAAT,GAA6B,UAAQ,CAAC,iBAAT,CAA2B,IAA3B,CAA7B,GAAgE,SAApF;;AAEA,cAAI,MAAM,CAAC,cAAP,CAAsB,UAAQ,CAAC,IAA/B,CAAJ,EAA0C;AACtC,gBAAI,UAAQ,CAAC,aAAT,CAAuB,SAAvB,CAAiC,OAAO,CAAC,aAAzC,KAA2D,CAA/D,EAAkE;AAC9D,cAAA,aAAa,GAAG,UAAQ,CAAC,KAAT,CAAe,IAAf,EAAqB,MAArB,EAA6B,OAA7B,CAAhB;AACH,aAFD,MAGK;AACD,cAAA,OAAO,CAAC,aAAR,CACI,IADJ,EAEI,KAAK,CAAC,eAAN,CAAsB,mBAF1B,EAGI,SAAA,CAAA,OAAA,CAAQ,MAAR,CAAe,oBAAf,CACI,UAAQ,CAAC,IADb,EAEI,UAAQ,CAAC,aAAT,CAAuB,QAAvB,EAFJ,EAGI,OAAO,CAAC,aAAR,CAAsB,QAAtB,EAHJ,CAHJ;AAOH;AACJ;;AAED,eAAK,QAAL,CAAc,UAAd,EAAwB,aAAxB;AACH;AACJ;AACJ,KA3BD,MA4BK;AACD,WAAK,kBAAL;AACH;AACJ,GAnCS;;AAqCA,EAAA,kBAAA,CAAA,SAAA,CAAA,cAAA,GAAV,UAAyB,MAAzB,EAA8C,OAA9C,EAA+E;AAC3E,QAAI,CAAC,GAAG,KAAK,SAAL,EAAR;AACA,QAAI,oBAAoB,GAAa,EAArC;;AAEA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAAC,CAAC,QAAF,EAApB,EAAkC,CAAC,EAAnC,EAAuC;AACnC,UAAI,UAAQ,GAAG,CAAC,CAAC,SAAF,CAAY,CAAZ,CAAf,CADmC,CAGnC;AACA;AACA;;AACA,UAAI,UAAQ,CAAC,sBAAT,IAAmC,UAAQ,CAAC,aAAT,CAAuB,SAAvB,CAAiC,OAAO,CAAC,aAAzC,KAA2D,CAA9F,IAAmG,oBAAoB,CAAC,OAArB,CAA6B,UAAQ,CAAC,IAAtC,MAAgD,CAAC,CAAxJ,EAA2J;AACvJ,QAAA,UAAQ,CAAC,MAAT,CAAgB,IAAhB,EAAsB,MAAtB,EAA8B,KAAK,QAAL,CAAc,UAAd,CAA9B,EAAuD,OAAvD;AAEA,QAAA,oBAAoB,CAAC,IAArB,CAA0B,UAAQ,CAAC,IAAnC;AACH;AACJ;AACJ,GAhBS;;AAkBA,EAAA,kBAAA,CAAA,SAAA,CAAA,eAAA,GAAV,UAA0B,OAA1B,EAA2D;AACvD,WAAO,IAAP;AACH,GAFS;;AAkBV,EAAA,kBAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,MAAN,EAA2B,OAA3B,EAA6D;AACzD,SAAK,aAAL,CAAmB,MAAnB,EAA2B,OAAO,GAAG,OAAH,GAAa,IAAI,0BAAJ,EAA/C;AACH,GAFD;;AAIA,EAAA,kBAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,OAAP,EAAyC;AACrC,QAAI,gBAAJ;;AAEA,QAAI,OAAO,IAAI,OAAO,YAAY,wBAAlC,EAA4D;AACxD,MAAA,gBAAgB,GAAG,OAAnB;AACH,KAFD,MAGK;AACD,MAAA,gBAAgB,GAAG,KAAK,8BAAL,EAAnB;AACA,MAAA,gBAAgB,CAAC,mBAAjB,GAAuC,OAAvC;AACH;;AAED,QAAI,KAAK,eAAL,CAAqB,gBAArB,CAAJ,EAA4C;AACxC,UAAI,MAAM,GAAA,KAAA,CAAV;;AAEA,UAAI,QAAA,CAAA,cAAA,CAAe,uBAAf,IAA0C,KAAK,cAA/C,IAAiE,OAAO,KAAK,cAAZ,KAA+B,QAApG,EAA8G;AAC1G,QAAA,MAAM,GAAG,KAAK,cAAd;AACH,OAFD,MAGK;AACD,QAAA,MAAM,GAAG,EAAT;AACH;;AAED,WAAK,cAAL,CAAoB,MAApB,EAA4B,gBAA5B;AAEA,aAAO,MAAP;AACH,KAbD,MAcK;AACD,aAAO,SAAP;AACH;AACJ,GA5BD;;AA8BA,EAAA,kBAAA,CAAA,SAAA,CAAA,eAAA,GAAA,UAAgB,QAAhB,EAA4C;AACxC,WAAO,KAAK,QAAL,CAAc,QAAd,MAA4B,QAAQ,CAAC,YAA5C;AACH,GAFD;;AAIA,EAAA,kBAAA,CAAA,SAAA,CAAA,mBAAA,GAAA,YAAA;AACI,QAAI,CAAC,GAAG,KAAK,SAAL,EAAR;;AAEA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAAC,CAAC,QAAF,EAApB,EAAkC,CAAC,EAAnC,EAAuC;AACnC,UAAI,UAAQ,GAAG,CAAC,CAAC,SAAF,CAAY,CAAZ,CAAf;;AAEA,UAAI,CAAC,KAAK,eAAL,CAAqB,UAArB,CAAL,EAAqC;AACjC,eAAO,KAAP;AACH;AACJ;;AAED,WAAO,IAAP;AACH,GAZD;;AAcA,EAAA,kBAAA,CAAA,SAAA,CAAA,kBAAA,GAAA,YAAA;AACI,QAAI,CAAC,GAAG,KAAK,SAAL,EAAR;;AAEA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAAC,CAAC,QAAF,EAApB,EAAkC,CAAC,EAAnC,EAAuC;AACnC,UAAI,UAAQ,GAAG,CAAC,CAAC,SAAF,CAAY,CAAZ,CAAf;AAEA,WAAK,QAAL,CAAc,UAAd,EAAwB,UAAQ,CAAC,YAAjC;AACH;AACJ,GARD;;AAUA,EAAA,kBAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,UAAkB,IAAlB,EAAgC,KAAhC,EAA0C;AACtC,QAAI,oBAAoB,GAAI,OAAO,KAAP,KAAiB,QAAjB,IAA6B,CAAC,KAA/B,IAAyC,KAAK,KAAK,SAAnD,IAAgE,KAAK,KAAK,IAArG;;AAEA,QAAI,oBAAJ,EAA0B;AACtB,aAAO,KAAK,cAAL,CAAoB,IAApB,CAAP;AACH,KAFD,MAGK;AACD,WAAK,cAAL,CAAoB,IAApB,IAA4B,KAA5B;AACH;AACJ,GATD;;AAWA,EAAA,kBAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,UAAkB,IAAlB,EAA8B;AAC1B,WAAO,KAAK,cAAL,CAAoB,IAApB,CAAP;AACH,GAFD;;AAIA,EAAA,kBAAA,CAAA,SAAA,CAAA,SAAA,GAAA,YAAA;AACI,QAAI,MAAM,GAA6B,kBAAkB,CAAC,YAAnB,CAAgC,KAAK,YAAL,EAAhC,CAAvC;;AAEA,QAAI,CAAC,MAAL,EAAa;AACT,MAAA,MAAM,GAAG,IAAI,wBAAJ,EAAT;AAEA,WAAK,cAAL,CAAoB,MAApB;AAEA,MAAA,kBAAkB,CAAC,YAAnB,CAAgC,KAAK,YAAL,EAAhC,IAAuD,MAAvD;AACH;;AAED,WAAO,MAAP;AACH,GAZD;;AApNwB,EAAA,kBAAA,CAAA,YAAA,GAAiE,EAAjE;AAiO5B,SAAA,kBAAA;AAAC,CApOD,EAAA;;AAAsB,OAAA,CAAA,kBAAA,GAAA,kBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SerializableObject = exports.property = exports.SerializableObjectSchema = exports.CustomProperty = exports.SerializableObjectCollectionProperty = exports.SerializableObjectProperty = exports.EnumProperty = exports.ValueSetProperty = exports.PixelSizeProperty = exports.NumProperty = exports.BoolProperty = exports.StringProperty = exports.PropertyDefinition = exports.BaseSerializationContext = exports.isVersionLessOrEqual = exports.Versions = exports.Version = void 0;\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar shared_1 = require(\"./shared\");\r\nvar Utils = require(\"./utils\");\r\nvar Enums = require(\"./enums\");\r\nvar strings_1 = require(\"./strings\");\r\nvar Version = /** @class */ (function () {\r\n    function Version(major, minor, label) {\r\n        if (major === void 0) { major = 1; }\r\n        if (minor === void 0) { minor = 1; }\r\n        this._isValid = true;\r\n        this._major = major;\r\n        this._minor = minor;\r\n        this._label = label;\r\n    }\r\n    Version.parse = function (versionString, context) {\r\n        if (!versionString) {\r\n            return undefined;\r\n        }\r\n        var result = new Version();\r\n        result._versionString = versionString;\r\n        var regEx = /(\\d+).(\\d+)/gi;\r\n        var matches = regEx.exec(versionString);\r\n        if (matches != null && matches.length == 3) {\r\n            result._major = parseInt(matches[1]);\r\n            result._minor = parseInt(matches[2]);\r\n        }\r\n        else {\r\n            result._isValid = false;\r\n        }\r\n        if (!result._isValid) {\r\n            context.logParseEvent(undefined, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.invalidVersionString(result._versionString));\r\n        }\r\n        return result;\r\n    };\r\n    Version.prototype.toString = function () {\r\n        return !this._isValid ? this._versionString : this._major + \".\" + this._minor;\r\n    };\r\n    Version.prototype.toJSON = function () {\r\n        return this.toString();\r\n    };\r\n    Version.prototype.compareTo = function (otherVersion) {\r\n        if (!this.isValid || !otherVersion.isValid) {\r\n            throw new Error(\"Cannot compare invalid version.\");\r\n        }\r\n        if (this.major > otherVersion.major) {\r\n            return 1;\r\n        }\r\n        else if (this.major < otherVersion.major) {\r\n            return -1;\r\n        }\r\n        else if (this.minor > otherVersion.minor) {\r\n            return 1;\r\n        }\r\n        else if (this.minor < otherVersion.minor) {\r\n            return -1;\r\n        }\r\n        return 0;\r\n    };\r\n    Object.defineProperty(Version.prototype, \"label\", {\r\n        get: function () {\r\n            return this._label ? this._label : this.toString();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Version.prototype, \"major\", {\r\n        get: function () {\r\n            return this._major;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Version.prototype, \"minor\", {\r\n        get: function () {\r\n            return this._minor;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Version.prototype, \"isValid\", {\r\n        get: function () {\r\n            return this._isValid;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Version;\r\n}());\r\nexports.Version = Version;\r\nvar Versions = /** @class */ (function () {\r\n    function Versions() {\r\n    }\r\n    Versions.v1_0 = new Version(1, 0);\r\n    Versions.v1_1 = new Version(1, 1);\r\n    Versions.v1_2 = new Version(1, 2);\r\n    Versions.v1_3 = new Version(1, 3);\r\n    Versions.latest = Versions.v1_3;\r\n    return Versions;\r\n}());\r\nexports.Versions = Versions;\r\nfunction isVersionLessOrEqual(version, targetVersion) {\r\n    if (version instanceof Version) {\r\n        if (targetVersion instanceof Version) {\r\n            return targetVersion.compareTo(version) >= 0;\r\n        }\r\n        else {\r\n            // Target version is *\r\n            return true;\r\n        }\r\n    }\r\n    else {\r\n        // Version is *\r\n        return true;\r\n    }\r\n}\r\nexports.isVersionLessOrEqual = isVersionLessOrEqual;\r\nvar BaseSerializationContext = /** @class */ (function () {\r\n    function BaseSerializationContext(targetVersion) {\r\n        if (targetVersion === void 0) { targetVersion = Versions.latest; }\r\n        this.targetVersion = targetVersion;\r\n        this._validationEvents = [];\r\n    }\r\n    BaseSerializationContext.prototype.serializeValue = function (target, propertyName, propertyValue, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = undefined; }\r\n        if (propertyValue === null || propertyValue === undefined || propertyValue === defaultValue) {\r\n            if (!shared_1.GlobalSettings.enableFullJsonRoundTrip) {\r\n                delete target[propertyName];\r\n            }\r\n        }\r\n        else {\r\n            target[propertyName] = propertyValue;\r\n        }\r\n    };\r\n    BaseSerializationContext.prototype.serializeNumber = function (target, propertyName, propertyValue, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = undefined; }\r\n        if (propertyValue === null || propertyValue === undefined || propertyValue === defaultValue || isNaN(propertyValue)) {\r\n            delete target[propertyName];\r\n        }\r\n        else {\r\n            target[propertyName] = propertyValue;\r\n        }\r\n    };\r\n    BaseSerializationContext.prototype.serializeEnum = function (enumType, target, propertyName, propertyValue, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = undefined; }\r\n        var targetValue = target[propertyName];\r\n        var canDeleteTarget = targetValue == undefined ? true : enumType[targetValue] !== undefined;\r\n        if (propertyValue == defaultValue) {\r\n            if (canDeleteTarget) {\r\n                delete target[propertyName];\r\n            }\r\n        }\r\n        else {\r\n            if (propertyValue == undefined) {\r\n                if (canDeleteTarget) {\r\n                    delete target[propertyName];\r\n                }\r\n            }\r\n            else {\r\n                target[propertyName] = enumType[propertyValue];\r\n            }\r\n        }\r\n    };\r\n    BaseSerializationContext.prototype.serializeArray = function (target, propertyName, propertyValue) {\r\n        var items = [];\r\n        if (propertyValue) {\r\n            for (var _i = 0, propertyValue_1 = propertyValue; _i < propertyValue_1.length; _i++) {\r\n                var item = propertyValue_1[_i];\r\n                var serializedItem = undefined;\r\n                if (item instanceof SerializableObject) {\r\n                    serializedItem = item.toJSON(this);\r\n                }\r\n                else if (item.toJSON) {\r\n                    serializedItem = item.toJSON();\r\n                }\r\n                else {\r\n                    serializedItem = item;\r\n                }\r\n                if (serializedItem !== undefined) {\r\n                    items.push(serializedItem);\r\n                }\r\n            }\r\n        }\r\n        if (items.length == 0) {\r\n            if (target.hasOwnProperty(propertyName) && Array.isArray(target[propertyName])) {\r\n                delete target[propertyName];\r\n            }\r\n        }\r\n        else {\r\n            this.serializeValue(target, propertyName, items);\r\n        }\r\n    };\r\n    BaseSerializationContext.prototype.clearEvents = function () {\r\n        this._validationEvents = [];\r\n    };\r\n    BaseSerializationContext.prototype.logEvent = function (source, phase, event, message) {\r\n        this._validationEvents.push({\r\n            source: source,\r\n            phase: phase,\r\n            event: event,\r\n            message: message\r\n        });\r\n    };\r\n    BaseSerializationContext.prototype.logParseEvent = function (source, event, message) {\r\n        this.logEvent(source, Enums.ValidationPhase.Parse, event, message);\r\n    };\r\n    BaseSerializationContext.prototype.getEventAt = function (index) {\r\n        return this._validationEvents[index];\r\n    };\r\n    Object.defineProperty(BaseSerializationContext.prototype, \"eventCount\", {\r\n        get: function () {\r\n            return this._validationEvents.length;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return BaseSerializationContext;\r\n}());\r\nexports.BaseSerializationContext = BaseSerializationContext;\r\nvar SimpleSerializationContext = /** @class */ (function (_super) {\r\n    __extends(SimpleSerializationContext, _super);\r\n    function SimpleSerializationContext() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return SimpleSerializationContext;\r\n}(BaseSerializationContext));\r\nvar PropertyDefinition = /** @class */ (function () {\r\n    function PropertyDefinition(targetVersion, name, defaultValue, onGetInitialValue) {\r\n        this.targetVersion = targetVersion;\r\n        this.name = name;\r\n        this.defaultValue = defaultValue;\r\n        this.onGetInitialValue = onGetInitialValue;\r\n        this.isSerializationEnabled = true;\r\n        this.sequentialNumber = PropertyDefinition._sequentialNumber;\r\n        PropertyDefinition._sequentialNumber++;\r\n    }\r\n    PropertyDefinition.prototype.getInternalName = function () {\r\n        return this.name;\r\n    };\r\n    PropertyDefinition.prototype.parse = function (sender, source, context) {\r\n        return source[this.name];\r\n    };\r\n    PropertyDefinition.prototype.toJSON = function (sender, target, value, context) {\r\n        context.serializeValue(target, this.name, value, this.defaultValue);\r\n    };\r\n    PropertyDefinition._sequentialNumber = 0;\r\n    return PropertyDefinition;\r\n}());\r\nexports.PropertyDefinition = PropertyDefinition;\r\nvar StringProperty = /** @class */ (function (_super) {\r\n    __extends(StringProperty, _super);\r\n    function StringProperty(targetVersion, name, treatEmptyAsUndefined, regEx, defaultValue, onGetInitialValue) {\r\n        if (treatEmptyAsUndefined === void 0) { treatEmptyAsUndefined = true; }\r\n        var _this = _super.call(this, targetVersion, name, defaultValue, onGetInitialValue) || this;\r\n        _this.targetVersion = targetVersion;\r\n        _this.name = name;\r\n        _this.treatEmptyAsUndefined = treatEmptyAsUndefined;\r\n        _this.regEx = regEx;\r\n        _this.defaultValue = defaultValue;\r\n        _this.onGetInitialValue = onGetInitialValue;\r\n        return _this;\r\n    }\r\n    StringProperty.prototype.parse = function (sender, source, context) {\r\n        var parsedValue = Utils.parseString(source[this.name], this.defaultValue);\r\n        var isUndefined = parsedValue === undefined || (parsedValue === \"\" && this.treatEmptyAsUndefined);\r\n        if (!isUndefined && this.regEx !== undefined) {\r\n            var matches = this.regEx.exec(parsedValue);\r\n            if (!matches) {\r\n                context.logParseEvent(sender, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.invalidPropertyValue(parsedValue, this.name));\r\n                return undefined;\r\n            }\r\n        }\r\n        return parsedValue;\r\n    };\r\n    StringProperty.prototype.toJSON = function (sender, target, value, context) {\r\n        context.serializeValue(target, this.name, value === \"\" && this.treatEmptyAsUndefined ? undefined : value, this.defaultValue);\r\n    };\r\n    return StringProperty;\r\n}(PropertyDefinition));\r\nexports.StringProperty = StringProperty;\r\nvar BoolProperty = /** @class */ (function (_super) {\r\n    __extends(BoolProperty, _super);\r\n    function BoolProperty() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BoolProperty.prototype.parse = function (sender, source, context) {\r\n        return Utils.parseBool(source[this.name], this.defaultValue);\r\n    };\r\n    BoolProperty.prototype.toJSON = function (sender, target, value, context) {\r\n        context.serializeValue(target, this.name, value, this.defaultValue);\r\n    };\r\n    return BoolProperty;\r\n}(PropertyDefinition));\r\nexports.BoolProperty = BoolProperty;\r\nvar NumProperty = /** @class */ (function (_super) {\r\n    __extends(NumProperty, _super);\r\n    function NumProperty() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    NumProperty.prototype.parse = function (sender, source, context) {\r\n        return Utils.parseNumber(source[this.name], this.defaultValue);\r\n    };\r\n    NumProperty.prototype.toJSON = function (sender, target, value, context) {\r\n        context.serializeNumber(target, this.name, value, this.defaultValue);\r\n    };\r\n    return NumProperty;\r\n}(PropertyDefinition));\r\nexports.NumProperty = NumProperty;\r\nvar PixelSizeProperty = /** @class */ (function (_super) {\r\n    __extends(PixelSizeProperty, _super);\r\n    function PixelSizeProperty() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PixelSizeProperty.prototype.parse = function (sender, source, context) {\r\n        var result = undefined;\r\n        var value = source[this.name];\r\n        if (typeof value === \"string\") {\r\n            var isValid = false;\r\n            try {\r\n                var size = shared_1.SizeAndUnit.parse(value, true);\r\n                if (size.unit == Enums.SizeUnit.Pixel) {\r\n                    result = size.physicalSize;\r\n                    isValid = true;\r\n                }\r\n            }\r\n            catch (_a) {\r\n                // Do nothing. A parse error is emitted below\r\n            }\r\n            if (!isValid) {\r\n                context.logParseEvent(sender, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.invalidPropertyValue(source[this.name], \"minHeight\"));\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    PixelSizeProperty.prototype.toJSON = function (sender, target, value, context) {\r\n        context.serializeValue(target, this.name, typeof value === \"number\" && !isNaN(value) ? value + \"px\" : undefined);\r\n    };\r\n    return PixelSizeProperty;\r\n}(PropertyDefinition));\r\nexports.PixelSizeProperty = PixelSizeProperty;\r\nvar ValueSetProperty = /** @class */ (function (_super) {\r\n    __extends(ValueSetProperty, _super);\r\n    function ValueSetProperty(targetVersion, name, values, defaultValue, onGetInitialValue) {\r\n        var _this = _super.call(this, targetVersion, name, defaultValue, onGetInitialValue) || this;\r\n        _this.targetVersion = targetVersion;\r\n        _this.name = name;\r\n        _this.values = values;\r\n        _this.defaultValue = defaultValue;\r\n        _this.onGetInitialValue = onGetInitialValue;\r\n        return _this;\r\n    }\r\n    ValueSetProperty.prototype.isValidValue = function (value, context) {\r\n        for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\r\n            var versionedValue = _a[_i];\r\n            if (value.toLowerCase() === versionedValue.value.toLowerCase()) {\r\n                var targetVersion = versionedValue.targetVersion ? versionedValue.targetVersion : this.targetVersion;\r\n                return targetVersion.compareTo(context.targetVersion) <= 0;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    ValueSetProperty.prototype.parse = function (sender, source, context) {\r\n        var sourceValue = source[this.name];\r\n        if (sourceValue === undefined) {\r\n            return this.defaultValue;\r\n        }\r\n        if (typeof sourceValue === \"string\") {\r\n            for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\r\n                var versionedValue = _a[_i];\r\n                if (sourceValue.toLowerCase() === versionedValue.value.toLowerCase()) {\r\n                    var targetVersion = versionedValue.targetVersion ? versionedValue.targetVersion : this.targetVersion;\r\n                    if (targetVersion.compareTo(context.targetVersion) <= 0) {\r\n                        return versionedValue.value;\r\n                    }\r\n                    else {\r\n                        context.logParseEvent(sender, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.propertyValueNotSupported(sourceValue, this.name, targetVersion.toString(), context.targetVersion.toString()));\r\n                        return this.defaultValue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        context.logParseEvent(sender, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.invalidPropertyValue(sourceValue, this.name));\r\n        return this.defaultValue;\r\n    };\r\n    ValueSetProperty.prototype.toJSON = function (sender, target, value, context) {\r\n        var valueFound = false;\r\n        for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\r\n            var versionedValue = _a[_i];\r\n            if (versionedValue.value === value) {\r\n                var targetVersion = versionedValue.targetVersion ? versionedValue.targetVersion : this.targetVersion;\r\n                if (targetVersion.compareTo(context.targetVersion) <= 0) {\r\n                    valueFound = true;\r\n                    break;\r\n                }\r\n                else {\r\n                    context.logEvent(sender, Enums.ValidationPhase.ToJSON, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.propertyValueNotSupported(value, this.name, targetVersion.toString(), context.targetVersion.toString()));\r\n                }\r\n            }\r\n        }\r\n        if (valueFound) {\r\n            context.serializeValue(target, this.name, value, this.defaultValue);\r\n        }\r\n    };\r\n    return ValueSetProperty;\r\n}(PropertyDefinition));\r\nexports.ValueSetProperty = ValueSetProperty;\r\nvar EnumProperty = /** @class */ (function (_super) {\r\n    __extends(EnumProperty, _super);\r\n    function EnumProperty(targetVersion, name, enumType, defaultValue, values, onGetInitialValue) {\r\n        var _this = _super.call(this, targetVersion, name, defaultValue, onGetInitialValue) || this;\r\n        _this.targetVersion = targetVersion;\r\n        _this.name = name;\r\n        _this.enumType = enumType;\r\n        _this.defaultValue = defaultValue;\r\n        _this.onGetInitialValue = onGetInitialValue;\r\n        _this._values = [];\r\n        if (!values) {\r\n            for (var key in enumType) {\r\n                var keyAsNumber = parseInt(key, 10);\r\n                if (keyAsNumber >= 0) {\r\n                    _this._values.push({ value: keyAsNumber });\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            _this._values = values;\r\n        }\r\n        return _this;\r\n    }\r\n    EnumProperty.prototype.parse = function (sender, source, context) {\r\n        var sourceValue = source[this.name];\r\n        if (typeof sourceValue !== \"string\") {\r\n            return this.defaultValue;\r\n        }\r\n        var enumValue = Utils.getEnumValueByName(this.enumType, sourceValue);\r\n        if (enumValue !== undefined) {\r\n            for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\r\n                var versionedValue = _a[_i];\r\n                if (versionedValue.value === enumValue) {\r\n                    var targetVersion = versionedValue.targetVersion ? versionedValue.targetVersion : this.targetVersion;\r\n                    if (targetVersion.compareTo(context.targetVersion) <= 0) {\r\n                        return enumValue;\r\n                    }\r\n                    else {\r\n                        context.logParseEvent(sender, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.propertyValueNotSupported(sourceValue, this.name, targetVersion.toString(), context.targetVersion.toString()));\r\n                        return this.defaultValue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        context.logParseEvent(sender, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.invalidPropertyValue(sourceValue, this.name));\r\n        return this.defaultValue;\r\n    };\r\n    EnumProperty.prototype.toJSON = function (sender, target, value, context) {\r\n        if (value !== undefined) {\r\n            var valueFound = false;\r\n            for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\r\n                var versionedValue = _a[_i];\r\n                if (versionedValue.value === value) {\r\n                    var targetVersion = versionedValue.targetVersion ? versionedValue.targetVersion : this.targetVersion;\r\n                    if (targetVersion.compareTo(context.targetVersion) <= 0) {\r\n                        valueFound = true;\r\n                        break;\r\n                    }\r\n                    else {\r\n                        context.logEvent(sender, Enums.ValidationPhase.ToJSON, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.invalidPropertyValue(value, this.name));\r\n                    }\r\n                }\r\n            }\r\n            if (valueFound) {\r\n                context.serializeEnum(this.enumType, target, this.name, value, this.defaultValue);\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(EnumProperty.prototype, \"values\", {\r\n        get: function () {\r\n            return this._values;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return EnumProperty;\r\n}(PropertyDefinition));\r\nexports.EnumProperty = EnumProperty;\r\nvar SerializableObjectProperty = /** @class */ (function (_super) {\r\n    __extends(SerializableObjectProperty, _super);\r\n    function SerializableObjectProperty(targetVersion, name, objectType, defaultValue) {\r\n        var _this = _super.call(this, targetVersion, name, defaultValue, function (sender) { return new _this.objectType(); }) || this;\r\n        _this.targetVersion = targetVersion;\r\n        _this.name = name;\r\n        _this.objectType = objectType;\r\n        return _this;\r\n    }\r\n    SerializableObjectProperty.prototype.parse = function (sender, source, context) {\r\n        var sourceValue = source[this.name];\r\n        if (sourceValue === undefined) {\r\n            return this.onGetInitialValue ? this.onGetInitialValue(sender) : this.defaultValue;\r\n        }\r\n        var result = new this.objectType();\r\n        result.parse(sourceValue, context);\r\n        return result;\r\n    };\r\n    SerializableObjectProperty.prototype.toJSON = function (sender, target, value, context) {\r\n        var serializedValue = value !== undefined ? value.toJSON(context) : value;\r\n        if (typeof serializedValue === \"object\" && Object.keys(serializedValue).length === 0) {\r\n            serializedValue = undefined;\r\n        }\r\n        _super.prototype.toJSON.call(this, sender, target, serializedValue, context);\r\n    };\r\n    return SerializableObjectProperty;\r\n}(PropertyDefinition));\r\nexports.SerializableObjectProperty = SerializableObjectProperty;\r\nvar SerializableObjectCollectionProperty = /** @class */ (function (_super) {\r\n    __extends(SerializableObjectCollectionProperty, _super);\r\n    function SerializableObjectCollectionProperty(targetVersion, name, objectType, onItemAdded) {\r\n        var _this = _super.call(this, targetVersion, name, undefined, function (sender) { return []; }) || this;\r\n        _this.targetVersion = targetVersion;\r\n        _this.name = name;\r\n        _this.objectType = objectType;\r\n        _this.onItemAdded = onItemAdded;\r\n        return _this;\r\n    }\r\n    SerializableObjectCollectionProperty.prototype.parse = function (sender, source, context) {\r\n        var result = [];\r\n        var sourceCollection = source[this.name];\r\n        if (Array.isArray(sourceCollection)) {\r\n            for (var _i = 0, sourceCollection_1 = sourceCollection; _i < sourceCollection_1.length; _i++) {\r\n                var sourceItem = sourceCollection_1[_i];\r\n                var item = new this.objectType();\r\n                item.parse(sourceItem, context);\r\n                result.push(item);\r\n                if (this.onItemAdded) {\r\n                    this.onItemAdded(sender, item);\r\n                }\r\n            }\r\n        }\r\n        return result.length > 0 ? result : (this.onGetInitialValue ? this.onGetInitialValue(sender) : undefined);\r\n    };\r\n    SerializableObjectCollectionProperty.prototype.toJSON = function (sender, target, value, context) {\r\n        context.serializeArray(target, this.name, value);\r\n    };\r\n    return SerializableObjectCollectionProperty;\r\n}(PropertyDefinition));\r\nexports.SerializableObjectCollectionProperty = SerializableObjectCollectionProperty;\r\nvar CustomProperty = /** @class */ (function (_super) {\r\n    __extends(CustomProperty, _super);\r\n    function CustomProperty(targetVersion, name, onParse, onToJSON, defaultValue, onGetInitialValue) {\r\n        var _this = _super.call(this, targetVersion, name, defaultValue, onGetInitialValue) || this;\r\n        _this.targetVersion = targetVersion;\r\n        _this.name = name;\r\n        _this.onParse = onParse;\r\n        _this.onToJSON = onToJSON;\r\n        _this.defaultValue = defaultValue;\r\n        _this.onGetInitialValue = onGetInitialValue;\r\n        if (!_this.onParse) {\r\n            throw new Error(\"CustomPropertyDefinition instances must have an onParse handler.\");\r\n        }\r\n        if (!_this.onToJSON) {\r\n            throw new Error(\"CustomPropertyDefinition instances must have an onToJSON handler.\");\r\n        }\r\n        return _this;\r\n    }\r\n    CustomProperty.prototype.parse = function (sender, source, context) {\r\n        return this.onParse(sender, this, source, context);\r\n    };\r\n    CustomProperty.prototype.toJSON = function (sender, target, value, context) {\r\n        this.onToJSON(sender, this, target, value, context);\r\n    };\r\n    return CustomProperty;\r\n}(PropertyDefinition));\r\nexports.CustomProperty = CustomProperty;\r\nvar SerializableObjectSchema = /** @class */ (function () {\r\n    function SerializableObjectSchema() {\r\n        this._properties = [];\r\n    }\r\n    SerializableObjectSchema.prototype.indexOf = function (property) {\r\n        for (var i = 0; i < this._properties.length; i++) {\r\n            if (this._properties[i] === property) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    };\r\n    SerializableObjectSchema.prototype.add = function () {\r\n        var properties = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            properties[_i] = arguments[_i];\r\n        }\r\n        for (var i = 0; i < properties.length; i++) {\r\n            if (this.indexOf(properties[i]) === -1) {\r\n                this._properties.push(properties[i]);\r\n            }\r\n        }\r\n    };\r\n    SerializableObjectSchema.prototype.remove = function () {\r\n        var properties = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            properties[_i] = arguments[_i];\r\n        }\r\n        for (var _a = 0, properties_1 = properties; _a < properties_1.length; _a++) {\r\n            var property_1 = properties_1[_a];\r\n            while (true) {\r\n                var index = this.indexOf(property_1);\r\n                if (index >= 0) {\r\n                    this._properties.splice(index, 1);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    SerializableObjectSchema.prototype.getItemAt = function (index) {\r\n        return this._properties[index];\r\n    };\r\n    SerializableObjectSchema.prototype.getCount = function () {\r\n        return this._properties.length;\r\n    };\r\n    return SerializableObjectSchema;\r\n}());\r\nexports.SerializableObjectSchema = SerializableObjectSchema;\r\n// This is a decorator function, used to map SerializableObject descendant class members to\r\n// schema properties\r\nfunction property(property) {\r\n    return function (target, propertyKey) {\r\n        var descriptor = Object.getOwnPropertyDescriptor(target, propertyKey) || {};\r\n        if (!descriptor.get && !descriptor.set) {\r\n            descriptor.get = function () { return this.getValue(property); };\r\n            descriptor.set = function (value) { this.setValue(property, value); };\r\n            Object.defineProperty(target, propertyKey, descriptor);\r\n        }\r\n    };\r\n}\r\nexports.property = property;\r\nvar SerializableObject = /** @class */ (function () {\r\n    function SerializableObject() {\r\n        this._propertyBag = {};\r\n        this._rawProperties = {};\r\n        this.maxVersion = Versions.v1_3;\r\n        var s = this.getSchema();\r\n        for (var i = 0; i < s.getCount(); i++) {\r\n            var property_2 = s.getItemAt(i);\r\n            if (property_2.onGetInitialValue) {\r\n                this.setValue(property_2, property_2.onGetInitialValue(this));\r\n            }\r\n        }\r\n    }\r\n    SerializableObject.prototype.getDefaultSerializationContext = function () {\r\n        return new SimpleSerializationContext();\r\n    };\r\n    SerializableObject.prototype.populateSchema = function (schema) {\r\n        var ctor = this.constructor;\r\n        var properties = [];\r\n        for (var propertyName in ctor) {\r\n            try {\r\n                var propertyValue = ctor[propertyName];\r\n                if (propertyValue instanceof PropertyDefinition) {\r\n                    properties.push(propertyValue);\r\n                }\r\n            }\r\n            catch (_a) {\r\n                // If a property happens to have a getter function and\r\n                // it throws an exception, we need to catch it here\r\n            }\r\n        }\r\n        if (properties.length > 0) {\r\n            var sortedProperties = properties.sort(function (p1, p2) {\r\n                if (p1.sequentialNumber > p2.sequentialNumber) {\r\n                    return 1;\r\n                }\r\n                else if (p1.sequentialNumber < p2.sequentialNumber) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n            schema.add.apply(schema, sortedProperties);\r\n        }\r\n        if (SerializableObject.onRegisterCustomProperties) {\r\n            SerializableObject.onRegisterCustomProperties(this, schema);\r\n        }\r\n    };\r\n    SerializableObject.prototype.getValue = function (property) {\r\n        return this._propertyBag.hasOwnProperty(property.getInternalName()) ? this._propertyBag[property.getInternalName()] : property.defaultValue;\r\n    };\r\n    SerializableObject.prototype.setValue = function (property, value) {\r\n        if (value === undefined || value === null) {\r\n            delete this._propertyBag[property.getInternalName()];\r\n        }\r\n        else {\r\n            this._propertyBag[property.getInternalName()] = value;\r\n        }\r\n    };\r\n    SerializableObject.prototype.internalParse = function (source, context) {\r\n        this._propertyBag = {};\r\n        this._rawProperties = shared_1.GlobalSettings.enableFullJsonRoundTrip ? (source ? source : {}) : {};\r\n        if (source) {\r\n            var s = this.getSchema();\r\n            for (var i = 0; i < s.getCount(); i++) {\r\n                var property_3 = s.getItemAt(i);\r\n                if (property_3.isSerializationEnabled) {\r\n                    var propertyValue = property_3.onGetInitialValue ? property_3.onGetInitialValue(this) : undefined;\r\n                    if (source.hasOwnProperty(property_3.name)) {\r\n                        if (property_3.targetVersion.compareTo(context.targetVersion) <= 0) {\r\n                            propertyValue = property_3.parse(this, source, context);\r\n                        }\r\n                        else {\r\n                            context.logParseEvent(this, Enums.ValidationEvent.UnsupportedProperty, strings_1.Strings.errors.propertyNotSupported(property_3.name, property_3.targetVersion.toString(), context.targetVersion.toString()));\r\n                        }\r\n                    }\r\n                    this.setValue(property_3, propertyValue);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.resetDefaultValues();\r\n        }\r\n    };\r\n    SerializableObject.prototype.internalToJSON = function (target, context) {\r\n        var s = this.getSchema();\r\n        var serializedProperties = [];\r\n        for (var i = 0; i < s.getCount(); i++) {\r\n            var property_4 = s.getItemAt(i);\r\n            // Avoid serializing the same property multiple times. This is necessary\r\n            // because some property definitions map to the same underlying schema\r\n            // property\r\n            if (property_4.isSerializationEnabled && property_4.targetVersion.compareTo(context.targetVersion) <= 0 && serializedProperties.indexOf(property_4.name) === -1) {\r\n                property_4.toJSON(this, target, this.getValue(property_4), context);\r\n                serializedProperties.push(property_4.name);\r\n            }\r\n        }\r\n    };\r\n    SerializableObject.prototype.shouldSerialize = function (context) {\r\n        return true;\r\n    };\r\n    SerializableObject.prototype.parse = function (source, context) {\r\n        this.internalParse(source, context ? context : new SimpleSerializationContext());\r\n    };\r\n    SerializableObject.prototype.toJSON = function (context) {\r\n        var effectiveContext;\r\n        if (context && context instanceof BaseSerializationContext) {\r\n            effectiveContext = context;\r\n        }\r\n        else {\r\n            effectiveContext = this.getDefaultSerializationContext();\r\n            effectiveContext.toJSONOriginalParam = context;\r\n        }\r\n        if (this.shouldSerialize(effectiveContext)) {\r\n            var result = void 0;\r\n            if (shared_1.GlobalSettings.enableFullJsonRoundTrip && this._rawProperties && typeof this._rawProperties === \"object\") {\r\n                result = this._rawProperties;\r\n            }\r\n            else {\r\n                result = {};\r\n            }\r\n            this.internalToJSON(result, effectiveContext);\r\n            return result;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    };\r\n    SerializableObject.prototype.hasDefaultValue = function (property) {\r\n        return this.getValue(property) === property.defaultValue;\r\n    };\r\n    SerializableObject.prototype.hasAllDefaultValues = function () {\r\n        var s = this.getSchema();\r\n        for (var i = 0; i < s.getCount(); i++) {\r\n            var property_5 = s.getItemAt(i);\r\n            if (!this.hasDefaultValue(property_5)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    SerializableObject.prototype.resetDefaultValues = function () {\r\n        var s = this.getSchema();\r\n        for (var i = 0; i < s.getCount(); i++) {\r\n            var property_6 = s.getItemAt(i);\r\n            this.setValue(property_6, property_6.defaultValue);\r\n        }\r\n    };\r\n    SerializableObject.prototype.setCustomProperty = function (name, value) {\r\n        var shouldDeleteProperty = (typeof value === \"string\" && !value) || value === undefined || value === null;\r\n        if (shouldDeleteProperty) {\r\n            delete this._rawProperties[name];\r\n        }\r\n        else {\r\n            this._rawProperties[name] = value;\r\n        }\r\n    };\r\n    SerializableObject.prototype.getCustomProperty = function (name) {\r\n        return this._rawProperties[name];\r\n    };\r\n    SerializableObject.prototype.getSchema = function () {\r\n        var schema = SerializableObject._schemaCache[this.getSchemaKey()];\r\n        if (!schema) {\r\n            schema = new SerializableObjectSchema();\r\n            this.populateSchema(schema);\r\n            SerializableObject._schemaCache[this.getSchemaKey()] = schema;\r\n        }\r\n        return schema;\r\n    };\r\n    SerializableObject._schemaCache = {};\r\n    return SerializableObject;\r\n}());\r\nexports.SerializableObject = SerializableObject;\r\n//# sourceMappingURL=serialization.js.map"]},"metadata":{},"sourceType":"script"}