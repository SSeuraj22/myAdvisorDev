{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ubuntu/myAdvisorDev/myadvisor/src/components/Career.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport CareerCheck from './CareerCheck';\nimport \"../assets/css/Career.css\";\nimport { Link } from 'react-router-dom';\nimport PullCareers from \"./PullCareers\";\nimport axios from \"axios\";\nimport { useHistory } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst Career = props => {\n  _s();\n\n  const [careerList, setCareerList] = useState([]); // Array used to store careers that a user selected\n\n  const [loading, setLoading] = useState(false); // Boolean used to indicate whether or not the recommended courses for the user has been updated\n\n  var careers = PullCareers(); // Get all careers from the database\n\n  const history = useHistory(); // Used to redirect to a new path without losing state values\n\n  props.setDisplay(false); // Indicate that to hide the \"Begin Advising\" button on the sidebar\n\n  props.setProg(40); // Set advising progress to 40%\n  // If the user's recommended courses has been lost, redirect to start page to generate them again\n\n  if (props.recCourses === null) {\n    history.push({\n      pathname: '/start'\n    });\n  } // Function that runs when the user checks or unchecks a checkbox\n\n\n  function onChange(event) {\n    var careerArray = careerList; // Duplicate items in careerList\n\n    if (event.currentTarget.checked === true) {\n      // If the box is checked then add that career to careerArray\n      careerArray.push(event.currentTarget.value);\n    } else {\n      // If the box is unchecked then remove that career from careerArray\n      var index = careerArray.indexOf(event.currentTarget.value); // Find index of the specified career\n\n      if (index > -1) {\n        // If career is in the array\n        careerArray.splice(index, 1); // Remove the career from the array\n      }\n    }\n\n    setCareerList(careerArray); // Set careerList to careerArray\n  } // Function that runs when the user clicks the \"Next\" button\n\n\n  function onClick() {\n    setLoading(true);\n    determineCourses(careerList);\n  } // Function to fetch courses that are associated with a given career\n\n\n  async function getCareerCourses(id) {\n    try {\n      const {\n        data: response\n      } = await axios.get(`/careers/courses/${id}`); //use data destructuring to get data from the promise object\n\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  } // Function to filter the fetched courses based on the current semester and user's current level\n\n\n  async function determineCourses(careerArray) {\n    var recCourses = []; // Array to store the recommended courses for the user\n\n    var today = new Date(); // Today's date\n\n    var currentSem; // Student's current semester\n\n    var level; // Student's current level\n\n    if (today.getMonth() < 4) {\n      // If the date is currently between January and April\n      currentSem = \"2\";\n    } else if (today.getMonth() < 6) {\n      // If the date is currently between May and July\n      currentSem = \"3\";\n    } else {\n      // If the date is currently between August and December\n      currentSem = \"1\";\n    } // props.year is the student's current year determined in StudentProfile.js\n\n\n    if (props.year === 1) {\n      level = \"I\";\n    } else if (props.year === 2) {\n      level = \"II\";\n    } else if (props.year === 3) {\n      level = \"III\";\n    } else {\n      level = \"I\";\n    } // Iterate through careerArray\n\n\n    for (var i = 0; i < careerArray.length; i++) {\n      var courses = await getCareerCourses(careerArray[i]); // Retrieve courses given with the iterated career\n\n      for (var j = 0; j < courses.length; j++) {\n        // Iterate through courses retrieved\n        if (courses[j].semester === currentSem && courses[j].level === level) {\n          // If the course corresponds with the current semester and current level\n          recCourses.push(courses[j].courseCode); // Add course to recommended courses array\n        }\n      }\n    }\n\n    props.setCareerRecommended(recCourses); // Set global state of recommended courses based on career\n    // Route user to courses page\n\n    history.push({\n      pathname: '/courses'\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"header blue-txt\",\n            children: \"Career Path\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card details-card outer-card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body career-card custom-scroll\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"career-card-text\",\n                  children: \"Select any career paths you may be interested in pursuing\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                  class: \"table table-borderless table-striped\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      class: \"d-flex blue-txt\",\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        class: \"col-3 name-header\",\n                        children: \"Career Title\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 124,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        class: \"col-9 desc-header\",\n                        children: \"Description\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 125,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: /*#__PURE__*/_jsxDEV(CareerCheck, {\n                      careers: careers,\n                      onChange: onChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row button-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-2\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/home\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    class: \"btn btn-custom back-button blue-button\",\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 23\n              }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-2\",\n                children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  className: \"circ-prog career-prog\",\n                  size: 30\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 25\n              }, this) : null, loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-2 offset-sm-6\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  class: \"btn btn-custom next-button blue-button\",\n                  onClick: onClick,\n                  children: \"Next\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-2 offset-sm-8\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  class: \"btn btn-custom next-button blue-button\",\n                  onClick: onClick,\n                  children: \"Next\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Career, \"XcgHmFLSJ0clN6NMflrHxutg13s=\", false, function () {\n  return [useHistory];\n});\n\n_c = Career;\nexport default Career;\n\nvar _c;\n\n$RefreshReg$(_c, \"Career\");","map":{"version":3,"sources":["/home/ubuntu/myAdvisorDev/myadvisor/src/components/Career.js"],"names":["React","Component","useEffect","useState","CareerCheck","Link","PullCareers","axios","useHistory","CircularProgress","Career","props","careerList","setCareerList","loading","setLoading","careers","history","setDisplay","setProg","recCourses","push","pathname","onChange","event","careerArray","currentTarget","checked","value","index","indexOf","splice","onClick","determineCourses","getCareerCourses","id","data","response","get","error","console","log","today","Date","currentSem","level","getMonth","year","i","length","courses","j","semester","courseCode","setCareerRecommended"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport CareerCheck from './CareerCheck';\nimport \"../assets/css/Career.css\";\nimport { Link } from 'react-router-dom'\nimport PullCareers from \"./PullCareers\";\nimport axios from \"axios\";\nimport { useHistory } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst Career = (props) => {\n\n  const [careerList, setCareerList] = useState([]); // Array used to store careers that a user selected\n  const [loading, setLoading] = useState(false); // Boolean used to indicate whether or not the recommended courses for the user has been updated\n\n  var careers = PullCareers(); // Get all careers from the database\n  const history = useHistory(); // Used to redirect to a new path without losing state values\n  props.setDisplay(false); // Indicate that to hide the \"Begin Advising\" button on the sidebar\n  props.setProg(40); // Set advising progress to 40%\n\n  // If the user's recommended courses has been lost, redirect to start page to generate them again\n  if (props.recCourses === null) { \n    history.push({\n      pathname: '/start'\n    })\n  }\n\n  // Function that runs when the user checks or unchecks a checkbox\n  function onChange(event) { \n    var careerArray = careerList; // Duplicate items in careerList\n    if (event.currentTarget.checked === true) { // If the box is checked then add that career to careerArray\n      careerArray.push(event.currentTarget.value);\n    }\n    else { // If the box is unchecked then remove that career from careerArray\n      var index = careerArray.indexOf(event.currentTarget.value); // Find index of the specified career\n      if (index > -1) { // If career is in the array\n        careerArray.splice(index, 1); // Remove the career from the array\n      }\n    }\n    setCareerList(careerArray); // Set careerList to careerArray\n  }\n\n  // Function that runs when the user clicks the \"Next\" button\n  function onClick() {\n    setLoading(true);\n    determineCourses(careerList);\n  }\n\n  // Function to fetch courses that are associated with a given career\n  async function getCareerCourses(id) {\n    try {\n      const {data:response} = await axios.get(`/careers/courses/${id}`) //use data destructuring to get data from the promise object\n      return response\n    }\n    catch (error) {\n      console.log(error);\n    }\n  }\n\n  // Function to filter the fetched courses based on the current semester and user's current level\n  async function determineCourses(careerArray){\n\n      var recCourses = []; // Array to store the recommended courses for the user\n      var today = new Date(); // Today's date\n      var currentSem; // Student's current semester\n      var level; // Student's current level\n      \n      if (today.getMonth() < 4) { // If the date is currently between January and April\n          currentSem = \"2\";\n      }\n      else if (today.getMonth() < 6) { // If the date is currently between May and July\n          currentSem = \"3\";\n      }\n      else { // If the date is currently between August and December\n          currentSem = \"1\";\n      }\n\n      // props.year is the student's current year determined in StudentProfile.js\n      if (props.year === 1) {\n        level = \"I\";\n      }\n      else if (props.year === 2) {\n        level = \"II\";\n      }\n      else if (props.year === 3) {\n        level = \"III\"\n      }\n      else {\n        level = \"I\";\n      }\n\n      // Iterate through careerArray\n      for (var i=0; i<careerArray.length; i++) {\n        var courses = await getCareerCourses(careerArray[i]); // Retrieve courses given with the iterated career\n        for (var j=0; j<courses.length; j++) { // Iterate through courses retrieved\n          if (courses[j].semester === currentSem && courses[j].level === level) { // If the course corresponds with the current semester and current level\n            recCourses.push(courses[j].courseCode); // Add course to recommended courses array\n          }\n        }\n    }\n    props.setCareerRecommended(recCourses); // Set global state of recommended courses based on career\n\n    // Route user to courses page\n    history.push({ \n      pathname: '/courses'\n    })\n\n  }\n\n\n  return (\n    <div className=\"content\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-sm-10\">\n                <p className=\"header blue-txt\">Career Path</p>\n                  <form>\n                    <div className=\"card details-card outer-card\">\n                      <div className=\"card-body career-card custom-scroll\">\n                        <p className=\"career-card-text\">Select any career paths you may be interested in pursuing</p>\n                          <table class=\"table table-borderless table-striped\">\n                            <thead>\n                                <tr class=\"d-flex blue-txt\">\n                                    <th class=\"col-3 name-header\">Career Title</th>\n                                    <th class=\"col-9 desc-header\">Description</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                              <CareerCheck careers={careers} onChange={onChange}></CareerCheck>\n                            </tbody>\n                          </table>\n                        </div>\n                    </div>\n                    <div className=\"row button-row\">\n                      <div className=\"col-sm-2\">\n                        <Link to=\"/home\">\n                          <button type=\"submit\" class=\"btn btn-custom back-button blue-button\">Back</button>\n                        </Link>\n                      </div>\n                      { loading ? (\n                        <div className=\"col-sm-2\">\n                          <CircularProgress className=\"circ-prog career-prog\" size={30}/>\n                        </div>\n                      ) : (null)}\n                      { loading ? (\n                        <div className=\"col-sm-2 offset-sm-6\">\n                          <button type=\"button\" class=\"btn btn-custom next-button blue-button\" onClick={onClick}>Next</button>\n                        </div> ) : (\n                        <div className=\"col-sm-2 offset-sm-8\">\n                          <button type=\"button\" class=\"btn btn-custom next-button blue-button\" onClick={onClick}>Next</button>\n                        </div>\n                        ) }\n                    </div>\n                  </form>\n                </div>\n              </div>\n          </div>\n    </div>\n  );\n}\n\nexport default Career;\n"]},"metadata":{},"sourceType":"module"}