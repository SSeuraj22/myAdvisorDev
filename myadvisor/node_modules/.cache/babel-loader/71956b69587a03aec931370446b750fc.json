{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ubuntu/myAdvisorDev/myadvisor/src/components/Staff/EditCourse.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Form, Col } from \"react-bootstrap\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { NUMERIC } from \"sequelize\";\n/*\n    EditCourse allows staff to edit courses on the system.\n*/\n\nfunction EditCourse({\n  setShow,\n  row,\n  refreshTable\n}) {\n  _s();\n\n  /*\n      The validated state is used to keep track of the validity of the editCourse form.\n      It's initial state is false.\n  */\n  const [validated, setValidated] = useState(false);\n  /*\n      The checkBoxState array is used to keep track of the checked state of the checkboxes.\n      It's initial state is false.\n  */\n\n  const [checkBoxStateSubmit, setCheckBoxStateSubmit] = useState(new Array(17).fill(false));\n  const [checkBoxStateExist, setCheckBoxStateExist] = useState(new Array(17).fill(false));\n  const assessments = [\"coursework\", \"finalExam\", \"groupProject\", \"individualWork\", \"practicalCoursework\", \"courseworkExam\", \"projectPres\", \"project\", \"presentation\", \"assignment\", \"labAssessment\", \"midSemesterMcq\", \"projectReport\", \"projectReportPres\", \"projectAndPres\", \"performanceReports\", \"projectSoftwareApp\"]; //get existing checkbox state\n\n  for (var j = 0; j < assessments.length; j++) {\n    //if(row[assessments[j]] === \"%\"){\n    //checkBoxStateExist[j] = false;\n    //}\n    if (row[assessments[j]] != null) {\n      checkBoxStateExist[j] = true;\n    } else {\n      checkBoxStateExist[j] = false;\n    }\n  }\n\n  useEffect(() => {\n    setCheckBoxStateSubmit(checkBoxStateExist);\n  }, []); //console.log(checkBoxStateExist);\n  //console.log(checkBoxStateSubmit);\n\n  /*\n      notifyEdit is used to display toast notifications when the course is edited. It displays a green toast.\n  */\n\n  const notifyEdit = text => toast.success(text);\n  /*\n      HandleChange gets the checkboxes that were checked and stores them in an array.\n  */\n\n\n  const handleChange = event => {\n    //console.log(event.target.checked);\n    //console.log(\"submit \"+checkBoxStateSubmit);\n    const updateCheckboxState = checkBoxStateSubmit.map((checkbox, count) => {\n      if (count === parseInt(event.target.id)) {\n        //console.log(count);\n        //console.log(event.target.id);\n        return !checkbox;\n      } else {\n        return checkbox;\n      }\n    }); //console.log(\"update \"+updateCheckboxState);\n    //console.log(\"up \"+updateCheckboxState);\n\n    setCheckBoxStateSubmit(updateCheckboxState); //console.log(updateCheckboxState);\n    //console.log(checkBoxState);\n  };\n  /*\n      HandleSubmit gets the data from the form and passes it to the editCourse function.\n  */\n\n\n  const handleSubmit = event => {\n    const form = event.currentTarget; //console.log(\"current \"+checkBoxStateSubmit);\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n    setValidated(true);\n    const formData = {\n      courseCode: form.elements.courseCode.value.replace(/\\s+/g, ''),\n      courseTitle: form.elements.courseTitle.value,\n      credits: form.elements.credits.value,\n      semester: form.elements.semester.value,\n      level: form.elements.level.value,\n      type: form.elements.type.value,\n      prerequisites: form.elements.prerequisites.value,\n      description: form.elements.description.value,\n      coursework: String(form.elements.coursework.value) + \"%\",\n      finalExam: String(form.elements.finalExam.value) + \"%\",\n      groupProject: String(form.elements.groupProject.value) + \"%\",\n      individualWork: String(form.elements.individualWork.value) + \"%\",\n      practicalCoursework: String(form.elements.practicalCoursework.value) + \"%\",\n      courseworkExam: String(form.elements.courseworkExam.value) + \"%\",\n      projectPres: String(form.elements.projectPres.value) + \"%\",\n      project: String(form.elements.project.value) + \"%\",\n      presentation: String(form.elements.presentation.value) + \"%\",\n      assignment: String(form.elements.assignment.value) + \"%\",\n      labAssessment: String(form.elements.labAssessment.value) + \"%\",\n      midSemesterMcq: String(form.elements.midSemesterMcq.value) + \"%\",\n      projectReport: String(form.elements.projectReport.value) + \"%\",\n      projectReportPres: String(form.elements.projectReportPres.value) + \"%\",\n      projectAndPres: String(form.elements.projectAndPres.value) + \"%\",\n      performanceReports: String(form.elements.performanceReports.value) + \"%\",\n      projectSoftwareApp: String(form.elements.projectSoftwareApp.value) + \"%\"\n    }; //console.log(formData);\n    //console.log(\"submit \"+checkBoxState);\n    //Get the unselected assessments and set them to null\n\n    for (var i = 0; i < checkBoxStateSubmit.length; i++) {\n      if (checkBoxStateSubmit[i] === false) {\n        formData[assessments[i]] = null;\n      }\n    }\n\n    editCourse(formData, row.courseCode);\n  };\n  /*\n      editCourse creates a put request to the server, which edits the specified course.\n  */\n\n\n  async function editCourse(data, code) {\n    //console.log(JSON.stringify(data));\n    try {\n      const res = await fetch(\"/courses/edit/\" + code, {\n        method: \"PUT\",\n        headers: {\n          token: localStorage.getItem(\"token\"),\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }); //console.log(res);\n\n      setShow(false);\n      refreshTable();\n      notifyEdit(data.courseCode + \" Edited!\");\n      const status = await res.statusText;\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  const styleCheckbox = {\n    marginTop: \"10px\",\n    marginLeft: \"20px\",\n    marginRight: \"10px\"\n  }; //get the number from the string percentage for assessments\n\n  function getPercentNumFromString(text) {\n    if (text != null) {\n      const array = text.split('%');\n      const number = parseInt(array[0]);\n      return number;\n    } else {\n      return text;\n    }\n  } //get default value for checkbox\n\n\n  function getCheckboxState(text) {\n    //if(text === \"%\"){\n    //return false;\n    //}\n    if (text != null) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"courseCode\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Course Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          defaultValue: row.courseCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"courseTitle\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Course Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          defaultValue: row.courseTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"3\",\n          controlId: \"credits\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Credits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            defaultValue: row.credits,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"3\",\n          controlId: \"semester\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Semester\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            defaultValue: row.semester,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"3\",\n          controlId: \"level\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            defaultValue: row.level,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"I\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"II\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"III\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"3\",\n          controlId: \"type\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            defaultValue: row.type,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Core\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Elective\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"assessment\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Assessments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"coursework\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Coursework\",\n              id: \"0\",\n              name: \"Coursework\",\n              onChange: handleChange,\n              defaultChecked: getCheckboxState(row.coursework),\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\",\n              defaultValue: getPercentNumFromString(row.coursework)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"finalExam\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Final Exam\",\n              id: \"1\",\n              name: \"Final Exam\",\n              onChange: handleChange,\n              defaultChecked: getCheckboxState(row.finalExam),\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\",\n              defaultValue: getPercentNumFromString(row.finalExam)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"groupProject\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Group Project\",\n              id: \"2\",\n              name: \"Group Project\",\n              onChange: handleChange,\n              defaultChecked: getCheckboxState(row.groupProject),\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\",\n              defaultValue: getPercentNumFromString(row.groupProject)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"individualWork\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Individual Work\",\n              id: \"3\",\n              name: \"Individual Work\",\n              onChange: handleChange,\n              defaultChecked: getCheckboxState(row.individualWork),\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\",\n              defaultValue: getPercentNumFromString(row.individualWork)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"practicalCoursework\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Practical Coursework\",\n              id: \"4\",\n              name: \"Practical Coursework\",\n              onChange: handleChange,\n              defaultChecked: getCheckboxState(row.practicalCoursework),\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\",\n              defaultValue: getPercentNumFromString(row.practicalCoursework)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"courseworkExam\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Coursework Exam\",\n              id: \"5\",\n              name: \"Coursework Exam\",\n              onChange: handleChange,\n              defaultChecked: getCheckboxState(row.courseworkExam),\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\",\n              defaultValue: getPercentNumFromString(row.courseworkExam)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"projectPres\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Project Presentation\",\n              id: \"6\",\n              name: \"Project Presentation\",\n              onChange: handleChange,\n              defaultChecked: getCheckboxState(row.projectPres),\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\",\n              defaultValue: getPercentNumFromString(row.projectPres)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"project\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Project\",\n              id: \"7\",\n              name: \"Project\",\n              onChange: handleChange,\n              defaultChecked: getCheckboxState(row.project),\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\",\n              defaultValue: getPercentNumFromString(row.project)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"presentation\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Presentation\",\n              id: \"8\",\n              name: \"Presentation\",\n              onChange: handleChange,\n              defaultChecked: getCheckboxState(row.presentation),\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\",\n              defaultValue: getPercentNumFromString(row.presentation)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"assignment\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Assignment\",\n              id: \"9\",\n              name: \"Assignment\",\n              onChange: handleChange,\n              defaultChecked: getCheckboxState(row.assignment),\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\",\n              defaultValue: getPercentNumFromString(row.assignment)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"labAssessment\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Lab Assessment\",\n              id: \"10\",\n              name: \"Lab Assessment\",\n              onChange: handleChange,\n              defaultChecked: getCheckboxState(row.labAssessment),\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\",\n              defaultValue: getPercentNumFromString(row.labAssessment)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"midSemesterMcq\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Mid Semester MCQ\",\n              id: \"11\",\n              name: \"Mid Semester MCQ\",\n              onChange: handleChange,\n              defaultChecked: getCheckboxState(row.midSemesterMcq),\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\",\n              defaultValue: getPercentNumFromString(row.midSemesterMcq)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"projectReport\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Project Report\",\n              id: \"12\",\n              name: \"Project Report\",\n              onChange: handleChange,\n              defaultChecked: getCheckboxState(row.projectReport),\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\",\n              defaultValue: getPercentNumFromString(row.projectReport)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"projectReportPres\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Project Report and Presentation\",\n              id: \"13\",\n              name: \"Project Report and Presentation\",\n              onChange: handleChange,\n              defaultChecked: getCheckboxState(row.projectReportPres),\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\",\n              defaultValue: getPercentNumFromString(row.projectReportPres)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"projectAndPres\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Project and Presentation\",\n              id: \"14\",\n              name: \"Project and Presentation\",\n              onChange: handleChange,\n              defaultChecked: getCheckboxState(row.projectAndPres),\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\",\n              defaultValue: getPercentNumFromString(row.projectAndPres)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"performanceReports\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Performance Reports\",\n              id: \"15\",\n              name: \"Performance Reports\",\n              onChange: handleChange,\n              defaultChecked: getCheckboxState(row.projectAndPres),\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\",\n              defaultValue: getPercentNumFromString(row.performanceReports)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"projectSoftwareApp\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Project or Software Application\",\n              id: \"16\",\n              name: \"Project or Software Application\",\n              onChange: handleChange,\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"prerequisites\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Prerequisites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          defaultValue: row.prerequisites\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"description\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          as: \"textarea\",\n          rows: 5,\n          defaultValue: row.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"float-right\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          class: \"btn btn-custom\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      pauseOnHover: true,\n      position: \"bottom-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditCourse, \"S4A5+ft5C8dBfV9Ptkb1tF5SX0I=\");\n\n_c = EditCourse;\nexport default EditCourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCourse\");","map":{"version":3,"sources":["/home/ubuntu/myAdvisorDev/myadvisor/src/components/Staff/EditCourse.js"],"names":["React","useEffect","useState","Button","Form","Col","ToastContainer","toast","NUMERIC","EditCourse","setShow","row","refreshTable","validated","setValidated","checkBoxStateSubmit","setCheckBoxStateSubmit","Array","fill","checkBoxStateExist","setCheckBoxStateExist","assessments","j","length","notifyEdit","text","success","handleChange","event","updateCheckboxState","map","checkbox","count","parseInt","target","id","handleSubmit","form","currentTarget","checkValidity","preventDefault","stopPropagation","formData","courseCode","elements","value","replace","courseTitle","credits","semester","level","type","prerequisites","description","coursework","String","finalExam","groupProject","individualWork","practicalCoursework","courseworkExam","projectPres","project","presentation","assignment","labAssessment","midSemesterMcq","projectReport","projectReportPres","projectAndPres","performanceReports","projectSoftwareApp","i","editCourse","data","code","res","fetch","method","headers","token","localStorage","getItem","body","JSON","stringify","status","statusText","err","console","error","message","styleCheckbox","marginTop","marginLeft","marginRight","getPercentNumFromString","array","split","number","getCheckboxState"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Form, Col } from \"react-bootstrap\";\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { NUMERIC } from \"sequelize\";\n\n/*\n    EditCourse allows staff to edit courses on the system.\n*/\n\nfunction EditCourse({setShow, row, refreshTable}) {\n    /*\n        The validated state is used to keep track of the validity of the editCourse form.\n        It's initial state is false.\n    */    \n    const [validated, setValidated] = useState(false);\n\n    /*\n        The checkBoxState array is used to keep track of the checked state of the checkboxes.\n        It's initial state is false.\n    */    \n    const [checkBoxStateSubmit, setCheckBoxStateSubmit] = useState(new Array(17).fill(false));\n    const [checkBoxStateExist, setCheckBoxStateExist] = useState(new Array(17).fill(false));\n\n    const assessments = [\"coursework\", \"finalExam\", \"groupProject\", \"individualWork\", \"practicalCoursework\", \"courseworkExam\", \n                             \"projectPres\", \"project\", \"presentation\", \"assignment\", \"labAssessment\", \"midSemesterMcq\", \n                             \"projectReport\", \"projectReportPres\", \"projectAndPres\", \"performanceReports\", \"projectSoftwareApp\"];\n\n    //get existing checkbox state\n    for(var j=0; j<assessments.length; j++){\n        //if(row[assessments[j]] === \"%\"){\n            //checkBoxStateExist[j] = false;\n        //}\n        if(row[assessments[j]]!=null){\n            checkBoxStateExist[j] = true;\n        }\n        else{\n            checkBoxStateExist[j] = false;\n        }\n    }\n    useEffect(() => {\n        setCheckBoxStateSubmit(checkBoxStateExist);\n    }, [])\n    \n    //console.log(checkBoxStateExist);\n    //console.log(checkBoxStateSubmit);\n\n    /*\n        notifyEdit is used to display toast notifications when the course is edited. It displays a green toast.\n    */\n    const notifyEdit = (text) => toast.success(text);\n\n    /*\n        HandleChange gets the checkboxes that were checked and stores them in an array.\n    */    \n        const handleChange = (event) => {\n            //console.log(event.target.checked);\n            //console.log(\"submit \"+checkBoxStateSubmit);\n            \n            const updateCheckboxState = checkBoxStateSubmit.map((checkbox, count) => {\n                if(count === parseInt(event.target.id)){\n                    \n                    //console.log(count);\n                    //console.log(event.target.id);\n                    return !checkbox;\n                }\n                else{\n                    return checkbox;\n                }\n                \n            });\n            //console.log(\"update \"+updateCheckboxState);\n            //console.log(\"up \"+updateCheckboxState);\n            setCheckBoxStateSubmit(updateCheckboxState);\n            //console.log(updateCheckboxState);\n            //console.log(checkBoxState);\n        };\n\n    /*\n        HandleSubmit gets the data from the form and passes it to the editCourse function.\n    */    \n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n        //console.log(\"current \"+checkBoxStateSubmit);\n        if (form.checkValidity() === false) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n        setValidated(true);\n\n        const formData = {\n            courseCode : (form.elements.courseCode.value).replace(/\\s+/g, ''),\n            courseTitle : form.elements.courseTitle.value,\n            credits : form.elements.credits.value,\n            semester : form.elements.semester.value,\n            level : form.elements.level.value,\n            type: form.elements.type.value,\n            prerequisites : form.elements.prerequisites.value,\n            description: form.elements.description.value,\n            coursework: String(form.elements.coursework.value) + \"%\",\n            finalExam: String(form.elements.finalExam.value) + \"%\",\n            groupProject: String(form.elements.groupProject.value) + \"%\",\n            individualWork: String(form.elements.individualWork.value) + \"%\",\n            practicalCoursework: String(form.elements.practicalCoursework.value) + \"%\",\n            courseworkExam: String(form.elements.courseworkExam.value) + \"%\",\n            projectPres: String(form.elements.projectPres.value) + \"%\",\n            project: String(form.elements.project.value) + \"%\",\n            presentation: String(form.elements.presentation.value) + \"%\",\n            assignment: String(form.elements.assignment.value) + \"%\",\n            labAssessment: String(form.elements.labAssessment.value) + \"%\",\n            midSemesterMcq: String(form.elements.midSemesterMcq.value) + \"%\",\n            projectReport: String(form.elements.projectReport.value) + \"%\",\n            projectReportPres: String(form.elements.projectReportPres.value) + \"%\",\n            projectAndPres: String(form.elements.projectAndPres.value) + \"%\",\n            performanceReports: String(form.elements.performanceReports.value) + \"%\",\n            projectSoftwareApp: String(form.elements.projectSoftwareApp.value) + \"%\"\n        }\n\n        //console.log(formData);\n        //console.log(\"submit \"+checkBoxState);\n        //Get the unselected assessments and set them to null\n        for(var i=0; i<checkBoxStateSubmit.length; i++){\n            if(checkBoxStateSubmit[i] === false){\n                formData[assessments[i]] = null;\n            }\n        }\n\n        editCourse(formData, row.courseCode);\n    };\n\n    /*\n        editCourse creates a put request to the server, which edits the specified course.\n    */    \n    async function editCourse(data, code) {\n        //console.log(JSON.stringify(data));\n        try {\n          const res = await fetch(\"/courses/edit/\" + code, {\n            method: \"PUT\",\n            headers: {\n                token: localStorage.getItem(\"token\"),\n                \"Content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n          });\n          //console.log(res);\n    \n          setShow(false);\n          refreshTable();\n          notifyEdit(data.courseCode + \" Edited!\")\n\n          const status = await res.statusText;\n          \n        } catch (err) {\n          console.error(err.message);\n        }\n    }\n\n    const styleCheckbox = {\n        marginTop: \"10px\",\n        marginLeft: \"20px\",\n        marginRight: \"10px\"\n    };\n\n    //get the number from the string percentage for assessments\n    function getPercentNumFromString(text){\n        if(text!=null){\n            const array = text.split('%');\n            const number = parseInt(array[0]);\n            return number;\n        }\n        else{\n            return text;\n        }\n    }\n\n    //get default value for checkbox\n    function getCheckboxState(text){\n        //if(text === \"%\"){\n            //return false;\n        //}\n        if(text!=null){\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n\n    return (\n        <>\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                <Form.Group controlId=\"courseCode\">\n                    <Form.Label>Course Code</Form.Label>\n                    <Form.Control required type=\"text\" defaultValue={row.courseCode}/>\n                </Form.Group>\n\n                <Form.Group controlId=\"courseTitle\">\n                    <Form.Label>Course Title</Form.Label>\n                    <Form.Control required type=\"text\" defaultValue={row.courseTitle}/>\n                </Form.Group>\n\n                <Form.Row>\n                    <Form.Group as={Col} md=\"3\" controlId=\"credits\">\n                        <Form.Label>Credits</Form.Label>\n                        <Form.Control required as=\"select\" defaultValue={row.credits}>\n                            <option>3</option>\n                            <option>6</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} md=\"3\" controlId=\"semester\">\n                        <Form.Label>Semester</Form.Label>\n                        <Form.Control required as=\"select\" defaultValue={row.semester}>\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} md=\"3\" controlId=\"level\">\n                        <Form.Label>Level</Form.Label>\n                        <Form.Control required as=\"select\" defaultValue={row.level}>\n                            <option>I</option>\n                            <option>II</option>\n                            <option>III</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} md=\"3\" controlId=\"type\">\n                        <Form.Label>Type</Form.Label>\n                        <Form.Control required as=\"select\" defaultValue={row.type}>\n                            <option>Core</option>\n                            <option>Elective</option>\n                        </Form.Control>\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"assessment\">\n                        <Form.Label>Assessments</Form.Label>\n        \n                        <Form.Group as={Col} controlId=\"coursework\" className=\"form-inline\">\n                            <Form.Check label=\"Coursework\" id=\"0\" name=\"Coursework\" onChange={handleChange} defaultChecked={getCheckboxState(row.coursework)} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\" defaultValue={getPercentNumFromString(row.coursework)}/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"finalExam\" className=\"form-inline\">\n                            <Form.Check label=\"Final Exam\" id=\"1\" name=\"Final Exam\" onChange={handleChange} defaultChecked={getCheckboxState(row.finalExam)} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\" defaultValue={getPercentNumFromString(row.finalExam)}/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"groupProject\" className=\"form-inline\">\n                            <Form.Check label=\"Group Project\" id=\"2\" name=\"Group Project\" onChange={handleChange} defaultChecked={getCheckboxState(row.groupProject)} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\" defaultValue={getPercentNumFromString(row.groupProject)}/>\n                        </Form.Group>\n                        \n                        <Form.Group as={Col} controlId=\"individualWork\" className=\"form-inline\">\n                            <Form.Check label=\"Individual Work\" id=\"3\" name=\"Individual Work\" onChange={handleChange} defaultChecked={getCheckboxState(row.individualWork)} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\" defaultValue={getPercentNumFromString(row.individualWork)}/>\n                        </Form.Group>\n                        \n                        <Form.Group as={Col} controlId=\"practicalCoursework\" className=\"form-inline\">\n                            <Form.Check label=\"Practical Coursework\" id=\"4\" name=\"Practical Coursework\" onChange={handleChange} defaultChecked={getCheckboxState(row.practicalCoursework)} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\" defaultValue={getPercentNumFromString(row.practicalCoursework)}/>\n                        </Form.Group>\n                        \n                        <Form.Group as={Col} controlId=\"courseworkExam\" className=\"form-inline\">\n                            <Form.Check label=\"Coursework Exam\" id=\"5\" name=\"Coursework Exam\" onChange={handleChange} defaultChecked={getCheckboxState(row.courseworkExam)} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\" defaultValue={getPercentNumFromString(row.courseworkExam)}/>\n                        </Form.Group>\n                        \n                        <Form.Group as={Col} controlId=\"projectPres\" className=\"form-inline\">\n                            <Form.Check label=\"Project Presentation\" id=\"6\" name=\"Project Presentation\" onChange={handleChange} defaultChecked={getCheckboxState(row.projectPres)} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\" defaultValue={getPercentNumFromString(row.projectPres)}/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"project\" className=\"form-inline\">\n                            <Form.Check label=\"Project\" id=\"7\" name=\"Project\" onChange={handleChange} defaultChecked={getCheckboxState(row.project)} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\" defaultValue={getPercentNumFromString(row.project)}/>\n                        </Form.Group>\n                        \n                        <Form.Group as={Col} controlId=\"presentation\" className=\"form-inline\">\n                            <Form.Check label=\"Presentation\" id=\"8\" name=\"Presentation\" onChange={handleChange} defaultChecked={getCheckboxState(row.presentation)} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\" defaultValue={getPercentNumFromString(row.presentation)}/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"assignment\" className=\"form-inline\">\n                            <Form.Check label=\"Assignment\" id=\"9\" name=\"Assignment\" onChange={handleChange} defaultChecked={getCheckboxState(row.assignment)} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\" defaultValue={getPercentNumFromString(row.assignment)}/>\n                        </Form.Group>\n                        \n                        <Form.Group as={Col} controlId=\"labAssessment\" className=\"form-inline\">\n                            <Form.Check label=\"Lab Assessment\" id=\"10\" name=\"Lab Assessment\" onChange={handleChange} defaultChecked={getCheckboxState(row.labAssessment)} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\" defaultValue={getPercentNumFromString(row.labAssessment)}/>\n                        </Form.Group>\n                        \n                        <Form.Group as={Col} controlId=\"midSemesterMcq\" className=\"form-inline\">\n                            <Form.Check label=\"Mid Semester MCQ\" id=\"11\" name=\"Mid Semester MCQ\" onChange={handleChange} defaultChecked={getCheckboxState(row.midSemesterMcq)} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\" defaultValue={getPercentNumFromString(row.midSemesterMcq)}/>\n                        </Form.Group>\n                        \n                        <Form.Group as={Col} controlId=\"projectReport\" className=\"form-inline\">\n                            <Form.Check label=\"Project Report\" id=\"12\" name=\"Project Report\" onChange={handleChange} defaultChecked={getCheckboxState(row.projectReport)} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\" defaultValue={getPercentNumFromString(row.projectReport)}/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"projectReportPres\" className=\"form-inline\">\n                            <Form.Check label=\"Project Report and Presentation\" id=\"13\" name=\"Project Report and Presentation\" onChange={handleChange} defaultChecked={getCheckboxState(row.projectReportPres)} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\" defaultValue={getPercentNumFromString(row.projectReportPres)}/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"projectAndPres\" className=\"form-inline\">\n                            <Form.Check label=\"Project and Presentation\" id=\"14\" name=\"Project and Presentation\" onChange={handleChange} defaultChecked={getCheckboxState(row.projectAndPres)} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\" defaultValue={getPercentNumFromString(row.projectAndPres)}/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"performanceReports\" className=\"form-inline\">\n                            <Form.Check label=\"Performance Reports\" id=\"15\" name=\"Performance Reports\" onChange={handleChange} defaultChecked={getCheckboxState(row.projectAndPres)} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\" defaultValue={getPercentNumFromString(row.performanceReports)}/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"projectSoftwareApp\" className=\"form-inline\">\n                            <Form.Check label=\"Project or Software Application\" id=\"16\" name=\"Project or Software Application\" onChange={handleChange} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\"/>\n                        </Form.Group>\n\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Group controlId=\"prerequisites\">\n                    <Form.Label>Prerequisites</Form.Label>\n                    <Form.Control required type=\"text\" defaultValue={row.prerequisites}/>\n                </Form.Group>\n\n                <Form.Group controlId=\"description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control required as=\"textarea\" rows={5} defaultValue={row.description}/>\n                </Form.Group>\n\n                <div class=\"float-right\"><Button type=\"submit\" class=\"btn btn-custom\">Submit</Button></div>\n            </Form>\n\n            <ToastContainer \n                pauseOnHover\n                position=\"bottom-right\"\n            />\n        </>\n    );\n}\n\nexport default EditCourse;"]},"metadata":{},"sourceType":"module"}