{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useObserveTranscriptFocus;\n\nvar _react = require(\"react\");\n\nvar _useWebChatUIContext2 = _interopRequireDefault(require(\"./internal/useWebChatUIContext\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction useObserveTranscriptFocus(observer, deps) {\n  if (typeof observer !== 'function') {\n    observer = undefined;\n    console.warn('botframework-webchat: First argument passed to \"useObserveTranscriptFocus\" must be a function.');\n  } else if (typeof deps !== 'undefined' && !Array.isArray(deps)) {\n    console.warn('botframework-webchat: Second argument passed to \"useObserveTranscriptFocus\" must be an array if specified.');\n  }\n\n  var _useWebChatUIContext = (0, _useWebChatUIContext2.default)(),\n      observeTranscriptFocus = _useWebChatUIContext.observeTranscriptFocus;\n  /* eslint-disable-next-line react-hooks/exhaustive-deps */\n\n\n  (0, _react.useEffect)(function () {\n    return observer && observeTranscriptFocus(observer);\n  }, [].concat(_toConsumableArray(deps || []), [observer, observeTranscriptFocus]));\n}","map":{"version":3,"sources":["../../src/hooks/useObserveTranscriptFocus.js"],"names":["observer","console","Array","observeTranscriptFocus","deps"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,qBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,gCAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEe,SAAA,yBAAA,CAAA,QAAA,EAAA,IAAA,EAAmD;AAChE,MAAI,OAAA,QAAA,KAAJ,UAAA,EAAoC;AAClCA,IAAAA,QAAQ,GAARA,SAAAA;AACAC,IAAAA,OAAO,CAAPA,IAAAA,CAAAA,gGAAAA;AAFF,GAAA,MAGO,IAAI,OAAA,IAAA,KAAA,WAAA,IAA+B,CAACC,KAAK,CAALA,OAAAA,CAApC,IAAoCA,CAApC,EAAyD;AAC9DD,IAAAA,OAAO,CAAPA,IAAAA,CAAAA,4GAAAA;AAGD;;AAR+D,MAAA,oBAAA,GAU7B,CAAA,GAAA,qBAAA,CAV6B,OAU7B,GAV6B;AAAA,MAUxDE,sBAVwD,GAAA,oBAAA,CAAA,sBAAA;AAYhE;;;AACA,GAAA,GAAA,MAAA,CAAA,SAAA,EAAU,YAAA;AAAA,WAAMH,QAAQ,IAAIG,sBAAsB,CAAxC,QAAwC,CAAxC;AAAV,GAAA,EAAA,GAAA,MAAA,CAAA,kBAAA,CAAmEC,IAAI,IAAvE,EAAA,CAAA,EAAA,CAAA,QAAA,EAAA,sBAAA,CAAA,CAAA;AACD","sourcesContent":["import { useEffect } from 'react';\nimport useWebChatUIContext from './internal/useWebChatUIContext';\n\nexport default function useObserveTranscriptFocus(observer, deps) {\n  if (typeof observer !== 'function') {\n    observer = undefined;\n    console.warn('botframework-webchat: First argument passed to \"useObserveTranscriptFocus\" must be a function.');\n  } else if (typeof deps !== 'undefined' && !Array.isArray(deps)) {\n    console.warn(\n      'botframework-webchat: Second argument passed to \"useObserveTranscriptFocus\" must be an array if specified.'\n    );\n  }\n\n  const { observeTranscriptFocus } = useWebChatUIContext();\n\n  /* eslint-disable-next-line react-hooks/exhaustive-deps */\n  useEffect(() => observer && observeTranscriptFocus(observer), [...(deps || []), observer, observeTranscriptFocus]);\n}\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}