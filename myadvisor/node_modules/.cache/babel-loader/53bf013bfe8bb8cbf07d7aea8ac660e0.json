{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = findLastIndex;\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction findLastIndex(array, predicate) {\n  var index = _toConsumableArray(array).reverse().findIndex(predicate);\n\n  if (~index) {\n    var _ref = array || [],\n        length = _ref.length;\n\n    return length - index - 1;\n  }\n\n  return index;\n}","map":{"version":3,"sources":["../../src/Utils/findLastIndex.js"],"names":["index","length","array"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAe,SAAA,aAAA,CAAA,KAAA,EAAA,SAAA,EAAyC;AACtD,MAAMA,KAAK,GAAG,kBAAA,CAAA,KAAA,CAAA,CAAA,OAAA,GAAA,SAAA,CAAd,SAAc,CAAd;;AAEA,MAAI,CAAJ,KAAA,EAAY;AAAA,QAAA,IAAA,GACSE,KAAK,IADd,EAAA;AAAA,QACFD,MADE,GAAA,IAAA,CAAA,MAAA;;AAGV,WAAOA,MAAM,GAANA,KAAAA,GAAP,CAAA;AACD;;AAED,SAAA,KAAA;AACD","sourcesContent":["export default function findLastIndex(array, predicate) {\n  const index = [...array].reverse().findIndex(predicate);\n\n  if (~index) {\n    const { length } = array || [];\n\n    return length - index - 1;\n  }\n\n  return index;\n}\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}