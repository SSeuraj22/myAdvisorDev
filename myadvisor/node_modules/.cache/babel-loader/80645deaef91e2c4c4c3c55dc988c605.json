{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useRegisterFocusTranscript;\n\nvar _react = require(\"react\");\n\nvar _removeInline = _interopRequireDefault(require(\"../../Utils/removeInline\"));\n\nvar _useWebChatUIContext2 = _interopRequireDefault(require(\"./useWebChatUIContext\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // This hook is for registering and unregister a callback, used by <BasicTranscript>.\n// When called, the callback should focus on the transcript.\n\n\nfunction useRegisterFocusTranscript(callback) {\n  var _useWebChatUIContext = (0, _useWebChatUIContext2.default)(),\n      focusTranscriptCallbacksRef = _useWebChatUIContext.focusTranscriptCallbacksRef;\n\n  (0, _react.useEffect)(function () {\n    if (callback) {\n      var focusTranscriptCallbacks = focusTranscriptCallbacksRef.current;\n      focusTranscriptCallbacks.push(callback);\n      return function () {\n        return (0, _removeInline.default)(focusTranscriptCallbacks, callback);\n      };\n    }\n  }, [callback, focusTranscriptCallbacksRef]);\n}","map":{"version":3,"sources":["../../../src/hooks/internal/useRegisterFocusTranscript.js"],"names":["focusTranscriptCallbacksRef","focusTranscriptCallbacks"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,CAAA;;AACA,IAAA,qBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,uBAAA,CAAA,CAAA;;;;;;EAEA;AACA;;;AAEe,SAAA,0BAAA,CAAA,QAAA,EAA8C;AAAA,MAAA,oBAAA,GACnB,CAAA,GAAA,qBAAA,CADmB,OACnB,GADmB;AAAA,MACnDA,2BADmD,GAAA,oBAAA,CAAA,2BAAA;;AAG3D,GAAA,GAAA,MAAA,CAAA,SAAA,EAAU,YAAM;AACd,QAAA,QAAA,EAAc;AAAA,UACKC,wBADL,GACkCD,2BADlC,CAAA,OAAA;AAGZC,MAAAA,wBAAwB,CAAxBA,IAAAA,CAAAA,QAAAA;AAEA,aAAO,YAAA;AAAA,eAAM,CAAA,GAAA,aAAA,CAAA,OAAA,EAAA,wBAAA,EAAN,QAAM,CAAN;AAAP,OAAA;AACD;AAPH,GAAA,EAQG,CAAA,QAAA,EARH,2BAQG,CARH;AASD","sourcesContent":["import { useEffect } from 'react';\n\nimport removeInline from '../../Utils/removeInline';\nimport useWebChatUIContext from './useWebChatUIContext';\n\n// This hook is for registering and unregister a callback, used by <BasicTranscript>.\n// When called, the callback should focus on the transcript.\n\nexport default function useRegisterFocusTranscript(callback) {\n  const { focusTranscriptCallbacksRef } = useWebChatUIContext();\n\n  useEffect(() => {\n    if (callback) {\n      const { current: focusTranscriptCallbacks } = focusTranscriptCallbacksRef;\n\n      focusTranscriptCallbacks.push(callback);\n\n      return () => removeInline(focusTranscriptCallbacks, callback);\n    }\n  }, [callback, focusTranscriptCallbacksRef]);\n}\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}