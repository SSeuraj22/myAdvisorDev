{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ubuntu/myAdvisorDev/myadvisor/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"; //Student Imports\n\nimport StudentProfile from './StudentProfile';\nimport CourseList from './CourseList';\nimport CourseDetails from './CourseDetails';\nimport Career from './Career';\nimport Start from './Start';\nimport BeforeBot from './BeforeBot';\nimport Finish from './Finish';\nimport PermanentDrawerRight from \"./sidebar\"; //Staff Imports\n\nimport StaffDashboard from './Staff/StaffDashboard';\nimport StaffCourses from './Staff/Courses';\nimport Students from './Staff/Students';\nimport Settings from './Staff/Settings';\nimport Reports from './Staff/Reports';\nimport Programmes from './Staff/Programmes';\nimport Sessions from './Staff/Sessions';\nimport PotentialGraduates from './Staff/PotentialGraduates'; //Global Imports\n\nimport \"../App.css\";\nimport \"../assets/css/Staff.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from \"./login\";\nimport TopBar from '../components/TopBar';\nimport ReactWebChat from \"../components/Bot Framework/webChat\";\n\nfunction Main() {\n  _s();\n\n  const [isAuthenticated, setIsAuthenticated] = useState(localStorage.getItem(\"auth\")); // Get authenticated status from localStorage\n\n  const [user, setUser] = useState(localStorage.getItem(\"user\")); // Get type of user from localStorage\n\n  const [recCourses, setRecCourses] = useState(null); // Store recommended courses generated on StudentProfile.js\n\n  const [careerRecCourses, setCareerRecCourses] = useState(null); // Store recommended courses generated on Career.js\n\n  const [chosenCourses, setChosenCourses] = useState([]); // Store courses chosen by the user on CourseList.js\n\n  const [show, setShow] = useState(true); // Boolean value to determine whether or not to show the \"Begin Advising\" button\n\n  const [progress, setProgress] = useState(0); // Value of the user's advising progress percentage\n\n  const [degProgress, setDegProgress] = useState(0); // Value of the user's degree progress percentage\n\n  const [newDeg, setNewDeg] = useState(0); // Value of the user's updated degree progress credits\n\n  const [credits, setCredits] = useState(0); // Value of how much credits the user needs to complete their degree\n\n  const [hide, setHide] = useState(false); // Boolean value to determine whether or not to show the sidebar or not\n\n  const [showBackBtn, setShowBackBtn] = useState(true); // Boolean value to determine whether or not to show the back button on the course list page\n\n  const [loading, setLoading] = useState(true); // Boolean value to determine whether or not to show a loading circle on the sidebar\n\n  const [year, setYear] = useState(1); // Value of the user's current level\n\n  const [warning, setWarning] = useState(false); // Boolean value to indicate whether or not that the user is on academic warning\n\n  const [botButtons, setBotButtons] = useState(false); // Boolean value to indicate whether or not to show \"Back to Courses\" and \"Finish Advising\" buttons on sidebar\n\n  const [programme, setProgramme] = useState(null); // Store what programme a student is current doing\n\n  const [studCredComplete, setStudCredComplete] = useState(0); //credits a student has completed so far\n\n  const [courseInProgCredits, setCourseInProgCredits] = useState(0); //credits of the courses that are in progress\n\n  const [gpa, setGpa] = useState(0); //Student's current gpa\n\n  const [inProgCourses, setInProgCourses] = useState([]); //an array of the student's inprogress courses\n\n  const [transcriptDetails, setTranscriptDetails] = useState(null); //to store a student's transcript details\n\n  const [gradUploaded, setGradUpload] = useState(false);\n  const [chosenCoursesCreds, setChosenCoursesCreds] = useState(0); // Store chosen courses credits on CourseList.js\n\n  const [courseChoseNCreds, setCourseChoseNCreds] = useState([]); //array to store chosen course code and credits\n\n  /* Setter methods for use by the other pages */\n\n  const setAuth = boolean => {\n    setIsAuthenticated(boolean);\n  };\n\n  const setType = value => {\n    setUser(value);\n  };\n\n  const setRecommended = value => {\n    setRecCourses(value);\n  };\n\n  const setCareerRecommended = value => {\n    setCareerRecCourses(value);\n  };\n\n  const setDisplay = value => {\n    setShow(value);\n  };\n\n  const setProg = value => {\n    setProgress(value);\n  };\n\n  const setDegProg = value => {\n    setDegProgress(value);\n  };\n\n  const setNewDegProg = value => {\n    setNewDeg(value);\n  };\n\n  const setCreds = value => {\n    setCredits(value);\n  };\n\n  const setHidden = value => {\n    setHide(value);\n  };\n\n  const setShowBack = value => {\n    setShowBackBtn(value);\n  };\n\n  const setLoad = value => {\n    setLoading(value);\n  };\n\n  const setLevel = value => {\n    setYear(value);\n  };\n\n  const setAcWarning = value => {\n    setWarning(value);\n  };\n\n  const setChosen = value => {\n    setChosenCourses(value);\n  };\n\n  const setShowBotButtons = value => {\n    setBotButtons(value);\n  };\n\n  const setStudentProgramme = value => {\n    setProgramme(value);\n  };\n\n  const setCreditsCompleted = value => {\n    setStudCredComplete(value);\n  };\n\n  const setCourseInprogCreds = value => {\n    setCourseInProgCredits(value);\n  };\n\n  const setStudentGpa = value => {\n    setGpa(value);\n  };\n\n  const setInProgressCourses = value => {\n    setInProgCourses(value);\n  };\n\n  const setTransDetails = value => {\n    setTranscriptDetails(value);\n  };\n\n  const setGradUploaded = value => {\n    setGradUpload(value);\n  };\n\n  const setChosenCoursesCredits = value => {\n    setChosenCoursesCreds(value);\n  };\n\n  const setCourseChoseNCredits = value => {\n    setCourseChoseNCreds(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-panel\",\n    children: [user ? /*#__PURE__*/_jsxDEV(TopBar, {\n      hide: hide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }, this) : null, user === \"student\" ? /*#__PURE__*/_jsxDEV(PermanentDrawerRight, {\n      gpa: gpa,\n      hide: hide,\n      courseInProgCredits: courseInProgCredits,\n      recCourses: recCourses,\n      progress: progress,\n      degProgress: degProgress,\n      credits: credits,\n      show: show,\n      setDisplay: setDisplay,\n      setShowBotButtons: setShowBotButtons,\n      loading: loading,\n      warning: warning,\n      newDeg: newDeg,\n      botButtons: botButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }, this) : null, /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        render: props => {\n          if (isAuthenticated && user == \"student\") {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 24\n            }, this);\n          } else if (isAuthenticated && user == \"admin\") {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/staff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 24\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 24\n            }, this);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/login\",\n        render: props => {\n          if (!isAuthenticated) {\n            return /*#__PURE__*/_jsxDEV(Login, { ...props,\n              setAuth: setAuth,\n              setType: setType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 24\n            }, this);\n          } else if (isAuthenticated && user == \"admin\") {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/staff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 24\n            }, this);\n          } else if (isAuthenticated && user == \"student\") {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 24\n            }, this);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/home\",\n        render: props => {\n          if (isAuthenticated && user === \"student\") {\n            return /*#__PURE__*/_jsxDEV(StudentProfile, { ...props,\n              setTransDetails: setTransDetails,\n              setInProgressCourses: setInProgressCourses,\n              setStudentGpa: setStudentGpa,\n              gpa: gpa,\n              courseInProgCredits: courseInProgCredits,\n              setCourseInprogCreds: setCourseInprogCreds,\n              newDeg: newDeg,\n              setNewDegProg: setNewDegProg,\n              credits: credits,\n              setRecommended: setRecommended,\n              setCreditsCompleted: setCreditsCompleted,\n              setDisplay: setDisplay,\n              setProg: setProg,\n              setDegProg: setDegProg,\n              setCreds: setCreds,\n              setHidden: setHidden,\n              setLoad: setLoad,\n              setLevel: setLevel,\n              setAcWarning: setAcWarning,\n              setShowBotButtons: setShowBotButtons,\n              recCourses: recCourses,\n              programme: programme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 24\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 24\n            }, this);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/courses\",\n        render: props => {\n          if (isAuthenticated && user === \"student\") {\n            return /*#__PURE__*/_jsxDEV(CourseList, { ...props,\n              setCourseChoseNCredits: setCourseChoseNCredits,\n              setChosenCoursesCredits: setChosenCoursesCredits,\n              setProg: setProg,\n              setHidden: setHidden,\n              setDisplay: setDisplay,\n              setChosen: setChosen,\n              setNewDegProg: setNewDegProg,\n              showBackBtn: showBackBtn,\n              setShowBotButtons: setShowBotButtons,\n              recCourses: recCourses,\n              careerRecCourses: careerRecCourses,\n              chosenCourses: chosenCourses,\n              newDeg: newDeg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 24\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 24\n            }, this);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/coursedetails\",\n        render: props => {\n          if (isAuthenticated && user === \"student\") {\n            return /*#__PURE__*/_jsxDEV(CourseDetails, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 24\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 24\n            }, this);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/career\",\n        render: props => {\n          if (isAuthenticated && user === \"student\") {\n            return /*#__PURE__*/_jsxDEV(Career, { ...props,\n              setDisplay: setDisplay,\n              setProg: setProg,\n              setCareerRecommended: setCareerRecommended,\n              year: year,\n              recCourses: recCourses\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 24\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 24\n            }, this);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/start\",\n        render: props => {\n          if (isAuthenticated && user === \"student\") {\n            return /*#__PURE__*/_jsxDEV(Start, { ...props,\n              setHidden: setHidden,\n              setDegProg: setDegProg,\n              setCreds: setCreds,\n              setShowBack: setShowBack,\n              setRecommended: setRecommended,\n              setShowBotButtons: setShowBotButtons,\n              setStudentProgramme: setStudentProgramme,\n              recCourses: recCourses\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 24\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 24\n            }, this);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/almostdone\",\n        render: props => {\n          if (isAuthenticated && user === \"student\") {\n            return /*#__PURE__*/_jsxDEV(BeforeBot, {\n              setShowBotButtons: setShowBotButtons\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 24\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 24\n            }, this);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/finish\",\n        render: props => {\n          if (isAuthenticated && user === \"student\") {\n            return /*#__PURE__*/_jsxDEV(Finish, {\n              courseChoseNCreds: true,\n              chosenCoursesCreds: chosenCoursesCreds,\n              courseInProgCredits: courseInProgCredits,\n              setGradUploaded: setGradUploaded,\n              gradUploaded: gradUploaded,\n              transcriptDetails: transcriptDetails,\n              inProgCourses: inProgCourses,\n              newDeg: newDeg,\n              chosenCourses: chosenCourses,\n              studCredComplete: studCredComplete,\n              setProg: setProg,\n              setShowBotButtons: setShowBotButtons\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 24\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 24\n            }, this);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/bot\",\n        render: props => {\n          if (isAuthenticated && user === \"student\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-10\",\n                children: /*#__PURE__*/_jsxDEV(ReactWebChat, { ...props\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 24\n            }, this);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/staff\",\n        render: props => {\n          if (isAuthenticated && user === \"admin\") {\n            return /*#__PURE__*/_jsxDEV(StaffDashboard, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 24\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 24\n            }, this);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/staff/courses\",\n        render: props => {\n          if (isAuthenticated && user === \"admin\") {\n            return /*#__PURE__*/_jsxDEV(StaffCourses, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 24\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 24\n            }, this);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/staff/programmes\",\n        render: props => {\n          if (isAuthenticated && user === \"admin\") {\n            return /*#__PURE__*/_jsxDEV(Programmes, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 24\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 24\n            }, this);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/staff/students\",\n        render: props => {\n          if (isAuthenticated && user === \"admin\") {\n            return /*#__PURE__*/_jsxDEV(Students, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 24\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 24\n            }, this);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/staff/settings\",\n        render: props => {\n          if (isAuthenticated && user === \"admin\") {\n            return /*#__PURE__*/_jsxDEV(Settings, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 24\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 24\n            }, this);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/staff/reports\",\n        render: props => {\n          if (isAuthenticated && user === \"admin\") {\n            return /*#__PURE__*/_jsxDEV(Reports, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 24\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 24\n            }, this);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/staff/sessions\",\n        render: props => {\n          if (isAuthenticated && user === \"admin\") {\n            return /*#__PURE__*/_jsxDEV(Sessions, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 24\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 24\n            }, this);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/staff/graduates\",\n        render: props => {\n          if (isAuthenticated && user === \"admin\") {\n            return /*#__PURE__*/_jsxDEV(PotentialGraduates, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 24\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 24\n            }, this);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"LWYuG04xXDJt3+RT9M2dHzOhLo8=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/ubuntu/myAdvisorDev/myadvisor/src/components/Main.js"],"names":["React","useState","BrowserRouter","Router","Switch","Route","Redirect","StudentProfile","CourseList","CourseDetails","Career","Start","BeforeBot","Finish","PermanentDrawerRight","StaffDashboard","StaffCourses","Students","Settings","Reports","Programmes","Sessions","PotentialGraduates","Login","TopBar","ReactWebChat","Main","isAuthenticated","setIsAuthenticated","localStorage","getItem","user","setUser","recCourses","setRecCourses","careerRecCourses","setCareerRecCourses","chosenCourses","setChosenCourses","show","setShow","progress","setProgress","degProgress","setDegProgress","newDeg","setNewDeg","credits","setCredits","hide","setHide","showBackBtn","setShowBackBtn","loading","setLoading","year","setYear","warning","setWarning","botButtons","setBotButtons","programme","setProgramme","studCredComplete","setStudCredComplete","courseInProgCredits","setCourseInProgCredits","gpa","setGpa","inProgCourses","setInProgCourses","transcriptDetails","setTranscriptDetails","gradUploaded","setGradUpload","chosenCoursesCreds","setChosenCoursesCreds","courseChoseNCreds","setCourseChoseNCreds","setAuth","boolean","setType","value","setRecommended","setCareerRecommended","setDisplay","setProg","setDegProg","setNewDegProg","setCreds","setHidden","setShowBack","setLoad","setLevel","setAcWarning","setChosen","setShowBotButtons","setStudentProgramme","setCreditsCompleted","setCourseInprogCreds","setStudentGpa","setInProgressCourses","setTransDetails","setGradUploaded","setChosenCoursesCredits","setCourseChoseNCredits","props"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\n\n//Student Imports\nimport StudentProfile from './StudentProfile';\nimport CourseList from './CourseList';\nimport CourseDetails from './CourseDetails';\nimport Career from './Career';\nimport Start from './Start';\nimport BeforeBot from './BeforeBot';\nimport Finish from './Finish';\nimport PermanentDrawerRight from \"./sidebar\";\n\n//Staff Imports\nimport StaffDashboard from './Staff/StaffDashboard';\nimport StaffCourses from './Staff/Courses';\nimport Students from './Staff/Students';\nimport Settings from './Staff/Settings';\nimport Reports from './Staff/Reports';\nimport Programmes from './Staff/Programmes';\nimport Sessions from './Staff/Sessions';\nimport PotentialGraduates from './Staff/PotentialGraduates'\n\n//Global Imports\nimport \"../App.css\"\nimport \"../assets/css/Staff.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from \"./login\";\nimport TopBar from '../components/TopBar';\nimport ReactWebChat from \"../components/Bot Framework/webChat\";\n\nfunction Main() {\n  const [isAuthenticated, setIsAuthenticated] = useState(localStorage.getItem(\"auth\")); // Get authenticated status from localStorage\n  const [user, setUser] = useState(localStorage.getItem(\"user\")); // Get type of user from localStorage\n  const [recCourses, setRecCourses] = useState(null); // Store recommended courses generated on StudentProfile.js\n  const [careerRecCourses, setCareerRecCourses] = useState(null); // Store recommended courses generated on Career.js\n  const [chosenCourses, setChosenCourses] = useState([]); // Store courses chosen by the user on CourseList.js\n  const [show, setShow] = useState(true); // Boolean value to determine whether or not to show the \"Begin Advising\" button\n  const [progress, setProgress] = useState(0); // Value of the user's advising progress percentage\n  const [degProgress, setDegProgress] = useState(0); // Value of the user's degree progress percentage\n  const [newDeg, setNewDeg] = useState(0); // Value of the user's updated degree progress credits\n  const [credits, setCredits] = useState(0); // Value of how much credits the user needs to complete their degree\n  const [hide, setHide] = useState(false); // Boolean value to determine whether or not to show the sidebar or not\n  const [showBackBtn, setShowBackBtn] = useState(true); // Boolean value to determine whether or not to show the back button on the course list page\n  const [loading, setLoading] = useState(true); // Boolean value to determine whether or not to show a loading circle on the sidebar\n  const [year, setYear] = useState(1); // Value of the user's current level\n  const [warning, setWarning] = useState(false); // Boolean value to indicate whether or not that the user is on academic warning\n  const [botButtons, setBotButtons] = useState(false); // Boolean value to indicate whether or not to show \"Back to Courses\" and \"Finish Advising\" buttons on sidebar\n  const [programme, setProgramme] = useState(null); // Store what programme a student is current doing\n  const [studCredComplete, setStudCredComplete] = useState(0);//credits a student has completed so far\n  const [courseInProgCredits, setCourseInProgCredits] = useState(0); //credits of the courses that are in progress\n  const [gpa, setGpa] = useState(0); //Student's current gpa\n  const [inProgCourses, setInProgCourses] = useState([]); //an array of the student's inprogress courses\n  const [transcriptDetails, setTranscriptDetails] = useState(null); //to store a student's transcript details\n  const [gradUploaded, setGradUpload] = useState(false);\n  const [chosenCoursesCreds, setChosenCoursesCreds] = useState(0); // Store chosen courses credits on CourseList.js\n  const [courseChoseNCreds, setCourseChoseNCreds] = useState([]); //array to store chosen course code and credits\n\n  /* Setter methods for use by the other pages */\n  const setAuth = (boolean) => {\n    setIsAuthenticated(boolean);\n  };\n\n  const setType = (value) => {\n    setUser(value);\n  };\n\n  const setRecommended = (value) => {\n    setRecCourses(value);\n  };\n\n  const setCareerRecommended = (value) => {\n    setCareerRecCourses(value);\n  };\n\n  const setDisplay = (value) => {\n    setShow(value);\n  };\n\n  const setProg = (value) => {\n    setProgress(value);\n  };\n\n  const setDegProg = (value) => {\n    setDegProgress(value);\n  };\n\n  const setNewDegProg = (value) => {\n    setNewDeg(value);\n  };\n\n  const setCreds = (value) => {\n    setCredits(value);\n  };\n\n  const setHidden = (value) => {\n    setHide(value);\n  };\n\n  const setShowBack = (value) => {\n    setShowBackBtn(value);\n  };\n\n  const setLoad = (value) => {\n    setLoading(value);\n  };\n\n  const setLevel = (value) => {\n    setYear(value);\n  };\n\n  const setAcWarning = (value) => {\n    setWarning(value);\n  };\n\n  const setChosen = (value) => {\n    setChosenCourses(value);\n  };\n\n  const setShowBotButtons = (value) => {\n    setBotButtons(value);\n  };\n\n  const setStudentProgramme = (value) => {\n    setProgramme(value);\n  };\n\n  const setCreditsCompleted = (value) => {\n    setStudCredComplete(value);\n  };\n\n  const setCourseInprogCreds = (value) => {\n    setCourseInProgCredits(value);\n  };\n\n  const setStudentGpa = (value) => {\n    setGpa(value);\n  }\n\n  const setInProgressCourses = (value) => {\n    setInProgCourses(value);\n  }\n\n  const setTransDetails = (value) => {\n    setTranscriptDetails(value);\n  }\n\n  const setGradUploaded = (value) => {\n    setGradUpload(value);\n  }\n\n  const setChosenCoursesCredits = (value) => {\n    setChosenCoursesCreds(value);\n  }\n\n  const setCourseChoseNCredits = (value) => {\n    setCourseChoseNCreds(value);\n  }\n\n  return (\n    <div className=\"main-panel\">\n      {user ? <TopBar hide={hide}></TopBar> : null}\n      {user === \"student\" ? <PermanentDrawerRight gpa={gpa} hide={hide} courseInProgCredits={courseInProgCredits} recCourses={recCourses} progress={progress} degProgress={degProgress} credits={credits} show={show} setDisplay={setDisplay} setShowBotButtons={setShowBotButtons} loading={loading} warning={warning} newDeg={newDeg} botButtons={botButtons}/> : null}\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={(props) =>\n            {\n              if(isAuthenticated && user==\"student\"){\n                return(<Redirect to=\"/home\"/>)\n              } else if (isAuthenticated && user==\"admin\"){\n                return(<Redirect to=\"/staff\"/>)\n              } else {\n                return(<Redirect to=\"/login\" />)\n              }\n            }\n          }\n        />\n\n        <Route\n          exact\n          path=\"/login\"\n          render={(props) =>\n            {\n              if(!isAuthenticated){\n                return <Login {...props} setAuth={setAuth} setType={setType}/>\n              } else if (isAuthenticated && user==\"admin\"){\n                return(<Redirect to=\"/staff\" />)\n              } else if (isAuthenticated && user==\"student\"){\n                return(<Redirect to=\"/home\" />)\n              }\n            }\n          }\n        />\n\n        {/*Student Routes*/}\n\n        <Route\n          exact\n          path=\"/home\"\n          render={(props) =>\n            {\n              if(isAuthenticated && user===\"student\"){\n                return <StudentProfile {...props} setTransDetails={setTransDetails} setInProgressCourses={setInProgressCourses} setStudentGpa={setStudentGpa} gpa={gpa} courseInProgCredits={courseInProgCredits} setCourseInprogCreds={setCourseInprogCreds} newDeg={newDeg} setNewDegProg={setNewDegProg} credits={credits} setRecommended={setRecommended} setCreditsCompleted={setCreditsCompleted} setDisplay={setDisplay} setProg={setProg} setDegProg={setDegProg} setCreds={setCreds} setHidden={setHidden} setLoad={setLoad} setLevel={setLevel} setAcWarning={setAcWarning} setShowBotButtons={setShowBotButtons} recCourses={recCourses} programme={programme}/>\n              } else {\n                return(<Redirect to=\"/\" />)\n              }\n            }\n          }\n        />\n\n        <Route\n          exact\n          path=\"/courses\"\n          render={(props) =>\n            {\n              if(isAuthenticated && user===\"student\"){\n                return <CourseList {...props} setCourseChoseNCredits={setCourseChoseNCredits} setChosenCoursesCredits={setChosenCoursesCredits} setProg={setProg} setHidden={setHidden} setDisplay={setDisplay} setChosen={setChosen} setNewDegProg={setNewDegProg} showBackBtn={showBackBtn} setShowBotButtons={setShowBotButtons} recCourses={recCourses} careerRecCourses={careerRecCourses} chosenCourses={chosenCourses} newDeg={newDeg}/>\n              } else {\n                return(<Redirect to=\"/\" />)\n              }\n            }\n          }\n        />\n\n        <Route\n          exact\n          path=\"/coursedetails\"\n          render={(props) =>\n            {\n              if(isAuthenticated && user===\"student\"){\n                return <CourseDetails {...props} />\n              } else {\n                return(<Redirect to=\"/\" />)\n              }\n            }\n          }\n        />\n\n        <Route\n          exact\n          path=\"/career\"\n          render={(props) =>\n            {\n              if(isAuthenticated && user===\"student\"){\n                return <Career {...props} setDisplay={setDisplay} setProg={setProg} setCareerRecommended={setCareerRecommended} year={year} recCourses={recCourses}/>\n              } else {\n                return(<Redirect to=\"/\" />)\n              }\n            }\n          }\n        />\n\n        <Route\n          exact\n          path=\"/start\"\n          render={(props) =>\n            {\n              if(isAuthenticated && user===\"student\"){\n                return <Start {...props} setHidden={setHidden} setDegProg={setDegProg} setCreds={setCreds} setShowBack={setShowBack} setRecommended={setRecommended} setShowBotButtons={setShowBotButtons} setStudentProgramme={setStudentProgramme} recCourses={recCourses}/>\n              } else {\n                return(<Redirect to=\"/\" />)\n              }\n            }\n          }\n        />\n\n        <Route\n          exact\n          path=\"/almostdone\"\n          render={(props) =>\n            {\n              if(isAuthenticated && user===\"student\"){\n                return <BeforeBot setShowBotButtons={setShowBotButtons}/>\n              } else {\n                return(<Redirect to=\"/\" />)\n              }\n            }\n          }\n        />\n\n        <Route\n          exact\n          path=\"/finish\"\n          render={(props) =>\n            {\n              if(isAuthenticated && user===\"student\"){\n                return <Finish courseChoseNCreds chosenCoursesCreds={chosenCoursesCreds} courseInProgCredits={courseInProgCredits} setGradUploaded={setGradUploaded} gradUploaded={gradUploaded} transcriptDetails={transcriptDetails} inProgCourses={inProgCourses} newDeg={newDeg} chosenCourses={chosenCourses} studCredComplete={studCredComplete} setProg={setProg} setShowBotButtons={setShowBotButtons}/>\n              } else {\n                return(<Redirect to=\"/\" />)\n              }\n            }\n          }\n        />    \n\n        {/*Bot Route*/}\n        <Route\n          exact\n          path=\"/bot\"\n          render={(props) =>\n            {\n              if(isAuthenticated && user===\"student\"){\n                return (\n                <div className=\"row\">\n                  <div className=\"col-sm-10\">\n                    <ReactWebChat {...props} />\n                  </div>\n                </div>\n               )\n              } else {\n                return(<Redirect to=\"/\" />)\n              }\n            }\n          }\n        />  \n\n\n        {/*Staff Routes*/}\n        <Route\n          exact\n          path=\"/staff\"\n          render={(props) =>\n            {\n              if(isAuthenticated && user===\"admin\"){\n                return <StaffDashboard {...props} />\n              } else {\n                return(<Redirect to=\"/\" />)\n              }\n            }\n          }\n        />        \n\n        <Route\n          exact\n          path=\"/staff/courses\"\n          render={(props) =>\n            {\n              if(isAuthenticated && user===\"admin\"){\n                return <StaffCourses {...props} />\n              } else {\n                return(<Redirect to=\"/\" />)\n              }\n            }\n          }\n        />\n\n        <Route\n          exact\n          path=\"/staff/programmes\"\n          render={(props) =>\n            {\n              if(isAuthenticated && user===\"admin\"){\n                return <Programmes {...props} />\n              } else {\n                return(<Redirect to=\"/\" />)\n              }\n            }\n          }\n        />\n\n        <Route\n          exact\n          path=\"/staff/students\"\n          render={(props) =>\n            {\n              if(isAuthenticated && user===\"admin\"){\n                return <Students {...props} />\n              } else {\n                return(<Redirect to=\"/\" />)\n              }\n            }\n          }\n        />\n\n        <Route\n          exact\n          path=\"/staff/settings\"\n          render={(props) =>\n            {\n              if(isAuthenticated && user===\"admin\"){\n                return <Settings {...props} />\n              } else {\n                return(<Redirect to=\"/\" />)\n              }\n            }\n          }\n        />\n        \n        <Route\n          exact\n          path=\"/staff/reports\"\n          render={(props) =>\n            {\n              if(isAuthenticated && user===\"admin\"){\n                return <Reports {...props} />\n              } else {\n                return(<Redirect to=\"/\" />)\n              }\n            }\n          }\n        />                        \n\n        <Route\n          exact\n          path=\"/staff/sessions\"\n          render={(props) =>\n            {\n              if(isAuthenticated && user===\"admin\"){\n                return <Sessions {...props} />\n              } else {\n                return(<Redirect to=\"/\" />)\n              }\n            }\n          }\n        />  \n\n        <Route\n          exact\n          path=\"/staff/graduates\"\n          render={(props) =>\n            {\n              if(isAuthenticated && user===\"admin\"){\n                return <PotentialGraduates {...props} />\n              } else {\n                return(<Redirect to=\"/\" />)\n              }\n            }\n          }\n        />   \n\n\n\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}