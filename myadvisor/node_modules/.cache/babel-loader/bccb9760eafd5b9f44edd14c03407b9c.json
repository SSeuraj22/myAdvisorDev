{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ubuntu/myAdvisorDev/myadvisor/src/components/Staff/ReportsTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search, CSVExport } from 'react-bootstrap-table2-toolkit';\nimport filterFactory, { selectFilter } from 'react-bootstrap-table2-filter'; //TABLE SETUP\n\n/*\n    selectYearOptions allows you to filter the year table column\n*/\n\nconst selectYearOptions = {\n  1: '1',\n  2: '2',\n  3: '3'\n};\n/*\n    columns is used to display specific columns of the data on the reports table.\n    It also contains code that enables the columns to be filtered.\n*/\n\nconst columns = [{\n  dataField: 'studentID',\n  text: 'Student ID',\n  csvText: 'Student ID',\n  sort: true\n}, {\n  dataField: 'name',\n  text: 'Name',\n  csvText: 'Name',\n  sort: true\n}, {\n  dataField: 'admitTerm',\n  text: 'Admit Term',\n  csvText: 'Admit Term',\n  sort: true\n}, {\n  dataField: 'id',\n  text: 'Session ID',\n  csvText: 'Session ID',\n  sort: true\n}, {\n  dataField: 'sessionDate',\n  text: 'Session Date',\n  csvText: 'Session Date',\n  sort: true\n}];\n/*\n    defaultSorted sorts the table is ascending order based on the status column.\n*/\n\nconst defaultSorted = [{\n  dataField: 'status',\n  order: 'asec'\n}];\n/*\n    options is used to configure the tables pagination.\n*/\n\nconst options = {\n  custom: true,\n  paginationSize: 5,\n  pageStartIndex: 1,\n  firstPageText: 'First',\n  prePageText: 'Back',\n  nextPageText: 'Next',\n  lastPageText: 'Last',\n  sizePerPage: 8\n};\n/*\n    selectRow allows you to select specific rows in the table.\n*/\n\nconst selectRow = {\n  mode: 'checkbox',\n  clickToSelect: true\n};\nconst {\n  SearchBar,\n  ClearSearchButton\n} = Search;\nconst {\n  ExportCSVButton\n} = CSVExport;\n/*\n    ReportsTable is a component that displays the advising sessions in a table where staff can generate reports and export them.\n*/\n\nfunction ReportsTable({\n  sessions,\n  students\n}) {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [studentSessionsDetails, setStudentSessionsDetails] = useState([]);\n  /*\n      ToolkitProvider is a wrapper for the BootstrapTable context and the related search, export csv and clear search react contexts.  \n  */\n\n  const table = ({\n    paginationProps,\n    paginationTableProps\n  }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToolkitProvider, {\n      keyField: \"id\",\n      data: studentSessionsDetails,\n      columns: columns,\n      search: true,\n      exportCSV: {\n        fileName: 'report.csv',\n        onlyExportFiltered: true,\n        onlyExportSelection: true,\n        exportAll: true\n      },\n      children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, { ...props.searchProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ClearSearchButton, { ...props.searchProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ExportCSVButton, { ...props.csvProps,\n          children: \"Export CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, { ...props.baseProps,\n          ...paginationTableProps,\n          selectRow: selectRow,\n          defaultSorted: defaultSorted,\n          filter: filterFactory(),\n          hover: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PaginationListStandalone, { ...paginationProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n\n  function studentDetails() {\n    let temp = [];\n\n    for (var i in sessions) {\n      for (var j in students) {\n        if (sessions[i].studentID == students[j].studentId) {\n          temp.push(Object.assign({}, students[j], sessions[i]));\n        }\n      }\n    }\n\n    setStudentSessionsDetails(temp);\n\n    if (temp.length != 0) {\n      setLoading(false);\n    }\n  }\n\n  ;\n  useEffect(() => {\n    studentDetails();\n  }, [sessions, students]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"sr-only\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(PaginationProvider, {\n      pagination: paginationFactory(options),\n      children: table\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(ReportsTable, \"4Ol0Dh9DIT4s3DJ9wrIZoVkGcVY=\");\n\n_c = ReportsTable;\nexport default ReportsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportsTable\");","map":{"version":3,"sources":["/home/ubuntu/myAdvisorDev/myadvisor/src/components/Staff/ReportsTable.js"],"names":["React","useState","useEffect","BootstrapTable","paginationFactory","PaginationProvider","PaginationListStandalone","ToolkitProvider","Search","CSVExport","filterFactory","selectFilter","selectYearOptions","columns","dataField","text","csvText","sort","defaultSorted","order","options","custom","paginationSize","pageStartIndex","firstPageText","prePageText","nextPageText","lastPageText","sizePerPage","selectRow","mode","clickToSelect","SearchBar","ClearSearchButton","ExportCSVButton","ReportsTable","sessions","students","loading","setLoading","studentSessionsDetails","setStudentSessionsDetails","table","paginationProps","paginationTableProps","fileName","onlyExportFiltered","onlyExportSelection","exportAll","props","searchProps","csvProps","baseProps","studentDetails","temp","i","j","studentID","studentId","push","Object","assign","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search, CSVExport } from 'react-bootstrap-table2-toolkit';\nimport filterFactory, { selectFilter  } from 'react-bootstrap-table2-filter';\n\n\n//TABLE SETUP\n\n/*\n    selectYearOptions allows you to filter the year table column\n*/\n\nconst selectYearOptions = {\n    1: '1',\n    2: '2',\n    3: '3'\n};\n\n/*\n    columns is used to display specific columns of the data on the reports table.\n    It also contains code that enables the columns to be filtered.\n*/\nconst columns = [\n    { dataField: 'studentID', text: 'Student ID', csvText: 'Student ID', sort: true },\n    { dataField: 'name', text: 'Name', csvText: 'Name', sort: true },\n    { dataField: 'admitTerm', text: 'Admit Term', csvText: 'Admit Term', sort: true},\n    { dataField: 'id', text: 'Session ID', csvText: 'Session ID', sort: true },\n    { dataField: 'sessionDate', text: 'Session Date', csvText: 'Session Date', sort: true },\n]\n\n/*\n    defaultSorted sorts the table is ascending order based on the status column.\n*/\nconst defaultSorted = [{\n    dataField: 'status',\n    order: 'asec'\n}];\n\n\n/*\n    options is used to configure the tables pagination.\n*/\nconst options = {\n    custom: true,\n    paginationSize: 5,\n    pageStartIndex: 1,\n    firstPageText: 'First',\n    prePageText: 'Back',\n    nextPageText: 'Next',\n    lastPageText: 'Last',\n    sizePerPage: 8,\n};\n\n/*\n    selectRow allows you to select specific rows in the table.\n*/\nconst selectRow = {\n    mode: 'checkbox',\n    clickToSelect: true\n};\n  \n\nconst { SearchBar, ClearSearchButton  } = Search;\nconst { ExportCSVButton } = CSVExport;\n\n/*\n    ReportsTable is a component that displays the advising sessions in a table where staff can generate reports and export them.\n*/\nfunction ReportsTable({sessions, students}) {\n    const [loading, setLoading] = useState(true);\n    const [studentSessionsDetails, setStudentSessionsDetails] = useState([]);    \n\n    /*\n        ToolkitProvider is a wrapper for the BootstrapTable context and the related search, export csv and clear search react contexts.  \n    */\n\n    const table = ({ paginationProps, paginationTableProps }) => (\n        <>\n            <ToolkitProvider\n                    keyField=\"id\"\n                    data={ studentSessionsDetails }\n                    columns={ columns }\n                    search\n                    exportCSV={{\n                      fileName: 'report.csv',\n                      onlyExportFiltered: true,\n                      onlyExportSelection: true,\n                      exportAll: true\n                    }}\n                >\n                {\n                    props => (\n                    <div>\n                        <SearchBar { ...props.searchProps } />\n                        <ClearSearchButton { ...props.searchProps } />\n                        <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\n                        <BootstrapTable { ...props.baseProps } { ...paginationTableProps } selectRow={ selectRow } defaultSorted={ defaultSorted } filter={ filterFactory()} hover/>\n                    </div>\n                    )\n                }\n            </ToolkitProvider>\n            <PaginationListStandalone { ...paginationProps } />\n        </>\n    );\n\n    function studentDetails(){\n        let temp = [];\n\n        for (var i in sessions){\n            for(var j in students){\n                if(sessions[i].studentID == students[j].studentId){\n                    temp.push(Object.assign({}, students[j], sessions[i]));\n                }\n            }\n        }\n\n        setStudentSessionsDetails(temp);\n\n\n        if(temp.length != 0){\n            setLoading(false);\n        }\n        \n    };\n\n    useEffect(() => {\n        studentDetails();\n    },[sessions, students]);    \n\n    return (\n        <>\n            {loading ? (\n            <div class=\"d-flex justify-content-center\">\n                <div class=\"spinner-border text-primary\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n                </div>\n            </div>\n            ) : (\n            <PaginationProvider pagination={paginationFactory(options)}>\n                { table }\n            </PaginationProvider>\n            )}\n        </>\n    );\n}\n\nexport default ReportsTable;"]},"metadata":{},"sourceType":"module"}