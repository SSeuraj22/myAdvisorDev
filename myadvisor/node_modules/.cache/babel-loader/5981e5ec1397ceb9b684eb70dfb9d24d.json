{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ubuntu/myAdvisorDev/myadvisor/src/components/Staff/SessionsTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search, CSVExport } from 'react-bootstrap-table2-toolkit'; //TABLE SETUP\n\n/*\n    columns is used to display specific columns of the data on the table.\n*/\n\nconst columns = [{\n  dataField: 'id',\n  text: 'Session ID',\n  csvText: 'Session ID',\n  sort: true\n}, {\n  dataField: 'studentID',\n  text: 'Student ID',\n  csvText: 'Student ID',\n  sort: true\n}, {\n  dataField: 'name',\n  text: 'Name',\n  csvText: 'Name',\n  sort: true\n}, {\n  dataField: 'admitTerm',\n  text: 'Admit Term',\n  csvText: 'Admit Term',\n  sort: true\n}, {\n  dataField: 'sessionDate',\n  text: 'Session Date',\n  csvText: 'Session Date',\n  sort: true\n}];\n/*\n    defaultSorted sorts the table is ascending order based on the sessionDate column.\n*/\n\nconst defaultSorted = [{\n  dataField: 'sessionDate',\n  order: 'asec'\n}];\n/*\n    options is used to configure the table pagination.\n*/\n\nconst options = {\n  custom: true,\n  paginationSize: 5,\n  pageStartIndex: 1,\n  firstPageText: 'First',\n  prePageText: 'Back',\n  nextPageText: 'Next',\n  lastPageText: 'Last',\n  sizePerPage: 8\n};\nconst {\n  SearchBar,\n  ClearSearchButton\n} = Search;\nconst {\n  ExportCSVButton\n} = CSVExport;\n/*\n    SessionsTable is a component that displays the courses in the system in a table.\n*/\n\nfunction SessionsTable({\n  sessions,\n  students\n}) {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [studentSessionsDetails, setStudentSessionsDetails] = useState([]);\n  console.log(\"Sessions \" + sessions.studentID);\n  console.log(\"Students \" + students.st);\n  /*\n      ToolkitProvider is a wrapper for the BootstrapTable context and the related search, export csv and clear search react contexts.  \n  */\n\n  const table = ({\n    paginationProps,\n    paginationTableProps\n  }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToolkitProvider, {\n      keyField: \"id\",\n      data: studentSessionsDetails,\n      columns: columns,\n      search: true,\n      exportCSV: {\n        fileName: 'sessions.csv'\n      },\n      children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, { ...props.searchProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ClearSearchButton, { ...props.searchProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ExportCSVButton, { ...props.csvProps,\n          children: \"Export CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, { ...props.baseProps,\n          ...paginationTableProps,\n          defaultSorted: defaultSorted,\n          hover: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PaginationListStandalone, { ...paginationProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n\n  function studentDetails() {\n    let temp = [];\n\n    for (var i in sessions) {\n      for (var j in students) {\n        if (sessions[i].studentID == students[j].studentId) {\n          temp.push(Object.assign({}, students[j], sessions[i]));\n        }\n      }\n    }\n\n    setStudentSessionsDetails(temp);\n\n    if (temp.length != 0) {\n      setLoading(false);\n    }\n  }\n\n  ;\n  useEffect(() => {\n    studentDetails();\n  }, [sessions, students]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"sr-only\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(PaginationProvider, {\n      pagination: paginationFactory(options),\n      children: table\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(SessionsTable, \"4Ol0Dh9DIT4s3DJ9wrIZoVkGcVY=\");\n\n_c = SessionsTable;\nexport default SessionsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"SessionsTable\");","map":{"version":3,"sources":["/home/ubuntu/myAdvisorDev/myadvisor/src/components/Staff/SessionsTable.js"],"names":["React","useState","useEffect","BootstrapTable","paginationFactory","PaginationProvider","PaginationListStandalone","ToolkitProvider","Search","CSVExport","columns","dataField","text","csvText","sort","defaultSorted","order","options","custom","paginationSize","pageStartIndex","firstPageText","prePageText","nextPageText","lastPageText","sizePerPage","SearchBar","ClearSearchButton","ExportCSVButton","SessionsTable","sessions","students","loading","setLoading","studentSessionsDetails","setStudentSessionsDetails","console","log","studentID","st","table","paginationProps","paginationTableProps","fileName","props","searchProps","csvProps","baseProps","studentDetails","temp","i","j","studentId","push","Object","assign","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search, CSVExport } from 'react-bootstrap-table2-toolkit';\n\n//TABLE SETUP\n\n/*\n    columns is used to display specific columns of the data on the table.\n*/\nconst columns = [\n    { dataField: 'id', text: 'Session ID', csvText: 'Session ID', sort: true },\n    { dataField: 'studentID', text: 'Student ID', csvText: 'Student ID', sort: true },\n    { dataField: 'name', text: 'Name', csvText: 'Name', sort: true },\n    { dataField: 'admitTerm', text: 'Admit Term', csvText: 'Admit Term', sort: true},\n    { dataField: 'sessionDate', text: 'Session Date', csvText: 'Session Date', sort: true },\n]\n\n/*\n    defaultSorted sorts the table is ascending order based on the sessionDate column.\n*/\nconst defaultSorted = [{\n    dataField: 'sessionDate',\n    order: 'asec'\n}];\n\n/*\n    options is used to configure the table pagination.\n*/\nconst options = {\n    custom: true,\n    paginationSize: 5,\n    pageStartIndex: 1,\n    firstPageText: 'First',\n    prePageText: 'Back',\n    nextPageText: 'Next',\n    lastPageText: 'Last',\n    sizePerPage: 8,\n};\n\nconst { SearchBar, ClearSearchButton  } = Search;\nconst { ExportCSVButton } = CSVExport;\n  \n/*\n    SessionsTable is a component that displays the courses in the system in a table.\n*/\nfunction SessionsTable({sessions, students}) {\n    const [loading, setLoading] = useState(true);\n    const [studentSessionsDetails, setStudentSessionsDetails] = useState([]);\n\n    console.log(\"Sessions \" + sessions.studentID);\n    console.log(\"Students \" + students.st);\n\n    /*\n        ToolkitProvider is a wrapper for the BootstrapTable context and the related search, export csv and clear search react contexts.  \n    */ \n    const table = ({ paginationProps, paginationTableProps }) => (\n        <>\n            <ToolkitProvider\n                    keyField=\"id\"\n                    data={ studentSessionsDetails }\n                    columns={ columns }\n                    search\n                    exportCSV={{\n                      fileName: 'sessions.csv',\n                    }}\n                >\n                {\n                    props => (\n                    <div>\n                        <SearchBar { ...props.searchProps } />\n                        <ClearSearchButton { ...props.searchProps } />\n                        <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\n                        <BootstrapTable { ...props.baseProps } { ...paginationTableProps } defaultSorted={ defaultSorted } hover/>\n                    </div>\n                    )\n                }\n            </ToolkitProvider>\n            <PaginationListStandalone { ...paginationProps } />\n        </>\n    );\n\n    function studentDetails(){\n        let temp = [];\n        \n        for (var i in sessions){\n            for(var j in students){\n                if(sessions[i].studentID == students[j].studentId){\n                    temp.push(Object.assign({}, students[j], sessions[i]))\n                }\n            }\n        }\n\n        setStudentSessionsDetails(temp);\n\n        if(temp.length !=0 ){\n            setLoading(false);\n        }\n\n    };\n\n    useEffect(() => {\n        studentDetails();\n    }, [sessions, students]);\n\n    return (\n        <>\n            {loading ? (\n            <div class=\"d-flex justify-content-center\">\n                <div class=\"spinner-border text-primary\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n                </div>\n            </div>\n            ) : (\n            <PaginationProvider pagination={paginationFactory(options)}>\n                { table }\n            </PaginationProvider>\n            )}\n        </>\n\n    );        \n\n}\n\nexport default SessionsTable;"]},"metadata":{},"sourceType":"module"}