{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CardObjectRegistry = void 0; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nvar serialization_1 = require(\"./serialization\");\n\nvar CardObjectRegistry =\n/** @class */\nfunction () {\n  function CardObjectRegistry() {\n    this._items = {};\n  }\n\n  CardObjectRegistry.prototype.findByName = function (typeName) {\n    return this._items.hasOwnProperty(typeName) ? this._items[typeName] : undefined;\n  };\n\n  CardObjectRegistry.prototype.clear = function () {\n    this._items = {};\n  };\n\n  CardObjectRegistry.prototype.register = function (typeName, objectType, schemaVersion) {\n    if (schemaVersion === void 0) {\n      schemaVersion = serialization_1.Versions.v1_0;\n    }\n\n    var registrationInfo = this.findByName(typeName);\n\n    if (registrationInfo !== undefined) {\n      registrationInfo.objectType = objectType;\n    } else {\n      registrationInfo = {\n        typeName: typeName,\n        objectType: objectType,\n        schemaVersion: schemaVersion\n      };\n    }\n\n    this._items[typeName] = registrationInfo;\n  };\n\n  CardObjectRegistry.prototype.unregister = function (typeName) {\n    delete this._items[typeName];\n  };\n\n  CardObjectRegistry.prototype.createInstance = function (typeName, targetVersion) {\n    var registrationInfo = this.findByName(typeName);\n    return registrationInfo && registrationInfo.schemaVersion.compareTo(targetVersion) <= 0 ? new registrationInfo.objectType() : undefined;\n  };\n\n  CardObjectRegistry.prototype.getItemCount = function () {\n    return Object.keys(this._items).length;\n  };\n\n  CardObjectRegistry.prototype.getItemAt = function (index) {\n    return Object.values(this._items)[index];\n  };\n\n  return CardObjectRegistry;\n}();\n\nexports.CardObjectRegistry = CardObjectRegistry;","map":{"version":3,"sources":["../src/registry.ts"],"names":[],"mappings":";;;;;qCAAA;AACA;;AACA,IAAA,eAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAQA,IAAA,kBAAA;AAAA;AAAA,YAAA;AAAA,WAAA,kBAAA,GAAA;AACY,SAAA,MAAA,GAAuD,EAAvD;AA4CX;;AA1CG,EAAA,kBAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,QAAX,EAA2B;AACvB,WAAO,KAAK,MAAL,CAAY,cAAZ,CAA2B,QAA3B,IAAuC,KAAK,MAAL,CAAY,QAAZ,CAAvC,GAA+D,SAAtE;AACH,GAFD;;AAIA,EAAA,kBAAA,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AACI,SAAK,MAAL,GAAc,EAAd;AACH,GAFD;;AAIA,EAAA,kBAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,QAAT,EAA2B,UAA3B,EAAqD,aAArD,EAA2F;AAAtC,QAAA,aAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,aAAA,GAAyB,eAAA,CAAA,QAAA,CAAS,IAAlC;AAAsC;;AACvF,QAAI,gBAAgB,GAAG,KAAK,UAAL,CAAgB,QAAhB,CAAvB;;AAEA,QAAI,gBAAgB,KAAK,SAAzB,EAAoC;AAChC,MAAA,gBAAgB,CAAC,UAAjB,GAA8B,UAA9B;AACH,KAFD,MAGK;AACD,MAAA,gBAAgB,GAAG;AACf,QAAA,QAAQ,EAAE,QADK;AAEf,QAAA,UAAU,EAAE,UAFG;AAGf,QAAA,aAAa,EAAE;AAHA,OAAnB;AAKH;;AAED,SAAK,MAAL,CAAY,QAAZ,IAAwB,gBAAxB;AACH,GAfD;;AAiBA,EAAA,kBAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,QAAX,EAA2B;AACvB,WAAO,KAAK,MAAL,CAAY,QAAZ,CAAP;AACH,GAFD;;AAIA,EAAA,kBAAA,CAAA,SAAA,CAAA,cAAA,GAAA,UAAe,QAAf,EAAiC,aAAjC,EAAuD;AACnD,QAAI,gBAAgB,GAAG,KAAK,UAAL,CAAgB,QAAhB,CAAvB;AAEA,WAAQ,gBAAgB,IAAI,gBAAgB,CAAC,aAAjB,CAA+B,SAA/B,CAAyC,aAAzC,KAA2D,CAAhF,GAAqF,IAAI,gBAAgB,CAAC,UAArB,EAArF,GAAyH,SAAhI;AACH,GAJD;;AAMA,EAAA,kBAAA,CAAA,SAAA,CAAA,YAAA,GAAA,YAAA;AACI,WAAO,MAAM,CAAC,IAAP,CAAY,KAAK,MAAjB,EAAyB,MAAhC;AACH,GAFD;;AAIA,EAAA,kBAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAU,KAAV,EAAuB;AACnB,WAAO,MAAM,CAAC,MAAP,CAAc,KAAK,MAAnB,EAA2B,KAA3B,CAAP;AACH,GAFD;;AAGJ,SAAA,kBAAA;AAAC,CA7CD,EAAA;;AAAa,OAAA,CAAA,kBAAA,GAAA,kBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CardObjectRegistry = void 0;\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar serialization_1 = require(\"./serialization\");\r\nvar CardObjectRegistry = /** @class */ (function () {\r\n    function CardObjectRegistry() {\r\n        this._items = {};\r\n    }\r\n    CardObjectRegistry.prototype.findByName = function (typeName) {\r\n        return this._items.hasOwnProperty(typeName) ? this._items[typeName] : undefined;\r\n    };\r\n    CardObjectRegistry.prototype.clear = function () {\r\n        this._items = {};\r\n    };\r\n    CardObjectRegistry.prototype.register = function (typeName, objectType, schemaVersion) {\r\n        if (schemaVersion === void 0) { schemaVersion = serialization_1.Versions.v1_0; }\r\n        var registrationInfo = this.findByName(typeName);\r\n        if (registrationInfo !== undefined) {\r\n            registrationInfo.objectType = objectType;\r\n        }\r\n        else {\r\n            registrationInfo = {\r\n                typeName: typeName,\r\n                objectType: objectType,\r\n                schemaVersion: schemaVersion\r\n            };\r\n        }\r\n        this._items[typeName] = registrationInfo;\r\n    };\r\n    CardObjectRegistry.prototype.unregister = function (typeName) {\r\n        delete this._items[typeName];\r\n    };\r\n    CardObjectRegistry.prototype.createInstance = function (typeName, targetVersion) {\r\n        var registrationInfo = this.findByName(typeName);\r\n        return (registrationInfo && registrationInfo.schemaVersion.compareTo(targetVersion) <= 0) ? new registrationInfo.objectType() : undefined;\r\n    };\r\n    CardObjectRegistry.prototype.getItemCount = function () {\r\n        return Object.keys(this._items).length;\r\n    };\r\n    CardObjectRegistry.prototype.getItemAt = function (index) {\r\n        return Object.values(this._items)[index];\r\n    };\r\n    return CardObjectRegistry;\r\n}());\r\nexports.CardObjectRegistry = CardObjectRegistry;\r\n//# sourceMappingURL=registry.js.map"]},"metadata":{},"sourceType":"script"}