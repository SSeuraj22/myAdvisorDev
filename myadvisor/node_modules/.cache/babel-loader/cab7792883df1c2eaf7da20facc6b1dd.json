{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ubuntu/myAdvisorDev/myadvisor/src/components/Start.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from \"react\";\nimport \"../assets/css/Start.css\";\nimport { Link } from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport PullProgrammes from \"./PullProgrammes\";\nimport { useHistory } from 'react-router-dom';\nimport axios from \"axios\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst Start = props => {\n  _s();\n\n  const [radio, setRadio] = useState(null); // Store which radio was selected\n\n  const [programme, setProgramme] = useState(\"None\"); // Store which programme was selected\n\n  const [loading, setLoading] = useState(false); // Boolean used to indicate whether or not the recommended courses for the user has been generated\n\n  useEffect();\n  props.setHidden(true); // Hide the sidebar\n\n  props.setShowBotButtons(false); // Hide \"Back to courses\" and \"Finish advising\" buttons on sidebar\n\n  var programmes = PullProgrammes(); // Get all degree programmes from the database\n\n  const history = useHistory(); // Used to redirect to a new path without losing state values\n  // Function that runs when the next button is clicked and the user is a new student\n\n  const onClickFunction = () => {\n    setLoading(true); // Iterate through all programmes\n\n    for (var i = 0; i < programmes.length; i++) {\n      if (programmes[i].name === programme) {\n        // If programme is the one that the user selected\n        var programmeId = programmes[i].id;\n      }\n    }\n\n    if (programmeId) {\n      // If programme was found\n      determineCourses(programmeId); // Generate recommended courses\n    }\n  }; // Function to fetch courses that are associated with a given programme\n\n\n  async function getProgrammeCourses(id) {\n    try {\n      const {\n        data: response\n      } = await axios.get(`/programmes/offered-courses/${id}`); //use data destructuring to get data from the promise object\n\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  } // Function to generate list of recommended courses for a new student\n\n\n  async function determineCourses(programmeId) {\n    var recCourses = []; // Array to store the recommended courses for the user\n\n    var today = new Date(); // Today's date\n\n    var currentSem; // Student's current semester\n\n    if (today.getMonth() < 4) {\n      // If the date is currently between January and April\n      currentSem = \"2\";\n    } // else if (today.getMonth() < 6) { // If the date is currently between May and July\n    //     currentSem = \"1\";\n    // }\n    else {\n        // If the date is currently between August and December\n        currentSem = \"1\";\n      }\n\n    var courses = await getProgrammeCourses(programmeId); // Iterate through courses\n\n    for (var i = 0; i < courses.length; i++) {\n      // Get core level I courses for the current semester\n      if (courses[i].type === \"Core\" && courses[i].semester === currentSem && courses[i].level === \"I\") {\n        recCourses.push(courses[i].courseCode);\n      }\n    }\n\n    props.setRecommended(recCourses); // Set global state of recommended courses\n    // Route user to courses page\n\n    history.push({\n      pathname: '/courses'\n    });\n  } // Function that runs when a radio button is selected\n\n\n  function onRadioChange(event) {\n    setRadio(event.currentTarget.value); // Set radio state to value of the radio selected\n\n    if (event.currentTarget.value === \"new\") {\n      // If the user is a new student\n      props.setDegProg(0); // Set degree progress to 0\n\n      props.setCreds(93); // Set remaining credits for student to 93\n\n      props.setShowBack(false); // Hide back button on career page\n    }\n  } // Function that runs when an option in the dropdown is selected\n\n\n  function onSelectChange(event) {\n    setProgramme(event.currentTarget.value); // Set programme state to value of option\n\n    localStorage.setItem(\"programme\", event.currentTarget.value); // Set localStorage item to value of option\n\n    props.setStudentProgramme(event.currentTarget.value); // Set global student programme state to value of option\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"welcome blue-txt\",\n          children: \"Welcome to myAdvisor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"started blue-txt\",\n          children: \"Let's get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card start-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              class: \"form-check-input\",\n              type: \"radio\",\n              name: \"studentRadio\",\n              id: \"studentRadiosNew\",\n              value: \"new\",\n              onChange: onRadioChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"form-check-label new-label\",\n              htmlFor: \"studentRadiosNew\",\n              children: \"I am a new student in my first semester of my programme\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this), radio === \"new\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row select-row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-6\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"form-group\",\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    class: \"form-control\",\n                    id: \"exampleFormControlSelect1\",\n                    onChange: onSelectChange,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"None\",\n                      children: \"Select your programme\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 49\n                    }, this), Array.from({\n                      length: programmes.length\n                    }, (_, k) => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: programmes[k].name,\n                        children: programmes[k].name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 127,\n                        columnNumber: 60\n                      }, this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 37\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              class: \"form-check-input\",\n              type: \"radio\",\n              name: \"studentRadio\",\n              id: \"studentRadiosCont\",\n              value: \"cont\",\n              onChange: onRadioChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"form-check-label\",\n              htmlFor: \"studentRadiosCont\",\n              children: \"I am a continuing student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }, this), radio === \"cont\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row select-row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-6\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"form-group\",\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    class: \"form-control\",\n                    id: \"exampleFormControlSelect1\",\n                    onChange: onSelectChange,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"None\",\n                      children: \"Select your programme\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 145,\n                      columnNumber: 49\n                    }, this), Array.from({\n                      length: programmes.length\n                    }, (_, k) => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: programmes[k].name,\n                        children: programmes[k].name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 148,\n                        columnNumber: 60\n                      }, this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 37\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [radio === \"new\" && programme !== \"None\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              class: \"btn btn-custom start-next-button blue-button\",\n              onClick: onClickFunction,\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 33\n          }, this) : radio === \"new\" && programme === \"None\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              class: \"btn btn-custom start-next-button blue-button\",\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this) : radio === \"cont\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-2\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/home\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                class: \"btn btn-custom start-next-button blue-button\",\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              class: \"btn btn-custom start-next-button blue-button\",\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 31\n          }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-2\",\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n              className: \"circ-prog start-prog\",\n              size: 30\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Start, \"STlY3HZFD4PyJqz0fn125GCoULI=\", false, function () {\n  return [useHistory];\n});\n\n_c = Start;\nexport default Start;\n\nvar _c;\n\n$RefreshReg$(_c, \"Start\");","map":{"version":3,"sources":["/home/ubuntu/myAdvisorDev/myadvisor/src/components/Start.js"],"names":["React","Component","Link","useEffect","useState","PullProgrammes","useHistory","axios","CircularProgress","Start","props","radio","setRadio","programme","setProgramme","loading","setLoading","setHidden","setShowBotButtons","programmes","history","onClickFunction","i","length","name","programmeId","id","determineCourses","getProgrammeCourses","data","response","get","error","console","log","recCourses","today","Date","currentSem","getMonth","courses","type","semester","level","push","courseCode","setRecommended","pathname","onRadioChange","event","currentTarget","value","setDegProg","setCreds","setShowBack","onSelectChange","localStorage","setItem","setStudentProgramme","Array","from","_","k"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../assets/css/Start.css\";\nimport { Link } from 'react-router-dom'\nimport { useEffect, useState } from \"react\";\nimport PullProgrammes from \"./PullProgrammes\";\nimport { useHistory } from 'react-router-dom';\nimport axios from \"axios\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst Start = (props) => { \n\n    const [radio, setRadio] = useState(null); // Store which radio was selected\n    const [programme, setProgramme] = useState(\"None\"); // Store which programme was selected\n    const [loading, setLoading] = useState(false); // Boolean used to indicate whether or not the recommended courses for the user has been generated\n\n    useEffect()\n    props.setHidden(true); // Hide the sidebar\n    props.setShowBotButtons(false); // Hide \"Back to courses\" and \"Finish advising\" buttons on sidebar\n    var programmes = PullProgrammes(); // Get all degree programmes from the database\n\n    const history = useHistory(); // Used to redirect to a new path without losing state values\n\n    // Function that runs when the next button is clicked and the user is a new student\n    const onClickFunction = () => {\n        setLoading(true);\n\n        // Iterate through all programmes\n        for(var i=0; i<programmes.length; i++) {\n            if (programmes[i].name === programme) { // If programme is the one that the user selected\n                var programmeId = programmes[i].id;\n            }\n        }\n        if (programmeId) { // If programme was found\n            determineCourses(programmeId); // Generate recommended courses\n        }\n    }\n\n    // Function to fetch courses that are associated with a given programme\n    async function getProgrammeCourses(id) {\n        try {\n          const {data:response} = await axios.get(`/programmes/offered-courses/${id}`) //use data destructuring to get data from the promise object\n          return response\n        }\n    \n        catch (error) {\n          console.log(error);\n        }\n    }\n\n    // Function to generate list of recommended courses for a new student\n    async function determineCourses(programmeId){\n\n        var recCourses = []; // Array to store the recommended courses for the user\n        var today = new Date(); // Today's date\n        var currentSem; // Student's current semester\n        \n        if (today.getMonth() < 4) { // If the date is currently between January and April\n            currentSem = \"2\";\n        }\n        // else if (today.getMonth() < 6) { // If the date is currently between May and July\n        //     currentSem = \"1\";\n        // }\n        else { // If the date is currently between August and December\n            currentSem = \"1\";\n        }\n\n        var courses = await getProgrammeCourses(programmeId);\n\n        // Iterate through courses\n        for(var i=0; i<courses.length; i++) {\n\n            // Get core level I courses for the current semester\n            if (courses[i].type === \"Core\" && courses[i].semester === currentSem && courses[i].level === \"I\") {\n                recCourses.push(courses[i].courseCode);\n            }\n        }\n\n        props.setRecommended(recCourses); // Set global state of recommended courses\n        \n        // Route user to courses page\n        history.push({\n            pathname: '/courses'\n        })\n        \n    }\n\n    // Function that runs when a radio button is selected\n    function onRadioChange(event) { \n        setRadio(event.currentTarget.value); // Set radio state to value of the radio selected\n        if (event.currentTarget.value === \"new\") { // If the user is a new student\n            props.setDegProg(0); // Set degree progress to 0\n            props.setCreds(93); // Set remaining credits for student to 93\n            props.setShowBack(false); // Hide back button on career page\n        }\n    }\n\n    // Function that runs when an option in the dropdown is selected\n    function onSelectChange(event) { \n        setProgramme(event.currentTarget.value); // Set programme state to value of option\n        localStorage.setItem(\"programme\", event.currentTarget.value); // Set localStorage item to value of option\n        props.setStudentProgramme(event.currentTarget.value); // Set global student programme state to value of option\n    }\n\n \n    return (\n        <div className=\"content\">\n                <div className=\"container-fluid\">\n                    <div className=\"header\">\n                        <p className=\"welcome blue-txt\">Welcome to myAdvisor</p>\n                        <p className=\"started blue-txt\">Let's get started.</p>\n                    </div>\n                    <div className=\"card start-card\">\n                        <div className=\"card-body\">\n                        <div class=\"form-check\">\n                                <input class=\"form-check-input\" type=\"radio\" name=\"studentRadio\" id=\"studentRadiosNew\" value=\"new\"  onChange={onRadioChange}/>\n                                <label class=\"form-check-label new-label\" htmlFor=\"studentRadiosNew\">\n                                    I am a new student in my first semester of my programme\n                                </label>\n                                { radio === \"new\" ? (\n                                    <div className=\"row select-row\">\n                                        <div className=\"col-sm-6\">\n                                            <div class=\"form-group\">\n                                                <select class=\"form-control\" id=\"exampleFormControlSelect1\" onChange={onSelectChange}>\n                                                <option value=\"None\">Select your programme</option>\n                                                {\n                                                 Array.from({ length: programmes.length }, (_, k) => {\n                                                    return <option value={programmes[k].name}>{programmes[k].name}</option> \n                                                })}\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    ) : (null) }\n                            </div>\n                            <div class=\"form-check\">\n                                <input class=\"form-check-input\" type=\"radio\" name=\"studentRadio\" id=\"studentRadiosCont\" value=\"cont\"  onChange={onRadioChange}/>\n                                <label class=\"form-check-label\" htmlFor=\"studentRadiosCont\">\n                                    I am a continuing student\n                                </label>\n                                { radio === \"cont\" ? (\n                                    <div className=\"row select-row\">\n                                        <div className=\"col-sm-6\">\n                                            <div class=\"form-group\">\n                                                <select class=\"form-control\" id=\"exampleFormControlSelect1\" onChange={onSelectChange}>\n                                                <option value=\"None\">Select your programme</option>\n                                                {\n                                                 Array.from({ length: programmes.length }, (_, k) => {\n                                                    return <option value={programmes[k].name}>{programmes[k].name}</option> \n                                                })}\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    ) : (null) }\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                        { radio === \"new\" && programme !== \"None\" ? (\n\n                                <div className=\"col-sm-2\">\n                                    <button type=\"submit\" class=\"btn btn-custom start-next-button blue-button\" onClick={onClickFunction}>Next</button>\n                                </div>\n                            ) :\n\n                            radio === \"new\" && programme === \"None\" ? (\n                            <div className=\"col-sm-2\">\n                                <button type=\"submit\" class=\"btn btn-custom start-next-button blue-button\">Next</button>\n                            </div>) : \n                            \n                            radio === \"cont\" ? (\n                              <div className=\"col-sm-2\">\n                                <Link to=\"/home\">\n                                  <button type=\"submit\" class=\"btn btn-custom start-next-button blue-button\">Next</button>\n                                </Link>\n                              </div>\n                            ) : \n\n                            (\n                              <div className=\"col-sm-2\">\n                                  <button type=\"submit\" class=\"btn btn-custom start-next-button blue-button\">Next</button>\n                              </div>\n                            )\n                        }\n                        { loading ? (\n                            <div className=\"col-sm-2\">\n                                <CircularProgress className=\"circ-prog start-prog\" size={30}/>\n                            </div>\n                        ) : (null)\n                        }\n                        </div>\n                    </div>\n                </div>\n        </div>\n        );\n    \n}\n\nexport default Start;\n"]},"metadata":{},"sourceType":"module"}