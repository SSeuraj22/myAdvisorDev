{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useRegisterFocusSendBox;\n\nvar _react = require(\"react\");\n\nvar _removeInline = _interopRequireDefault(require(\"../../Utils/removeInline\"));\n\nvar _useWebChatUIContext2 = _interopRequireDefault(require(\"./useWebChatUIContext\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // This hook is for registering and unregister a callback, used by <BasicSendBox>.\n// When called, the callback should focus on the text box of the send box.\n\n\nfunction useRegisterFocusSendBox(callback) {\n  var _useWebChatUIContext = (0, _useWebChatUIContext2.default)(),\n      focusSendBoxCallbacksRef = _useWebChatUIContext.focusSendBoxCallbacksRef;\n\n  (0, _react.useEffect)(function () {\n    if (callback) {\n      var focusSendBoxCallbacks = focusSendBoxCallbacksRef.current;\n      focusSendBoxCallbacks.push(callback);\n      return function () {\n        return (0, _removeInline.default)(focusSendBoxCallbacks, callback);\n      };\n    }\n  }, [callback, focusSendBoxCallbacksRef]);\n}","map":{"version":3,"sources":["../../../src/hooks/internal/useRegisterFocusSendBox.js"],"names":["focusSendBoxCallbacksRef","focusSendBoxCallbacks"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,CAAA;;AACA,IAAA,qBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,uBAAA,CAAA,CAAA;;;;;;EAEA;AACA;;;AAEe,SAAA,uBAAA,CAAA,QAAA,EAA2C;AAAA,MAAA,oBAAA,GACnB,CAAA,GAAA,qBAAA,CADmB,OACnB,GADmB;AAAA,MAChDA,wBADgD,GAAA,oBAAA,CAAA,wBAAA;;AAGxD,GAAA,GAAA,MAAA,CAAA,SAAA,EAAU,YAAM;AACd,QAAA,QAAA,EAAc;AAAA,UACKC,qBADL,GAC+BD,wBAD/B,CAAA,OAAA;AAGZC,MAAAA,qBAAqB,CAArBA,IAAAA,CAAAA,QAAAA;AAEA,aAAO,YAAA;AAAA,eAAM,CAAA,GAAA,aAAA,CAAA,OAAA,EAAA,qBAAA,EAAN,QAAM,CAAN;AAAP,OAAA;AACD;AAPH,GAAA,EAQG,CAAA,QAAA,EARH,wBAQG,CARH;AASD","sourcesContent":["import { useEffect } from 'react';\n\nimport removeInline from '../../Utils/removeInline';\nimport useWebChatUIContext from './useWebChatUIContext';\n\n// This hook is for registering and unregister a callback, used by <BasicSendBox>.\n// When called, the callback should focus on the text box of the send box.\n\nexport default function useRegisterFocusSendBox(callback) {\n  const { focusSendBoxCallbacksRef } = useWebChatUIContext();\n\n  useEffect(() => {\n    if (callback) {\n      const { current: focusSendBoxCallbacks } = focusSendBoxCallbacksRef;\n\n      focusSendBoxCallbacks.push(callback);\n\n      return () => removeInline(focusSendBoxCallbacks, callback);\n    }\n  }, [callback, focusSendBoxCallbacksRef]);\n}\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}