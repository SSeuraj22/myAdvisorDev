{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createAdaptiveCardsStyleSet;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _botframeworkWebchatApi = require(\"botframework-webchat-api\");\n\nvar _AdaptiveCardRenderer = _interopRequireDefault(require(\"./StyleSet/AdaptiveCardRenderer\"));\n\nvar _AnimationCardAttachment = _interopRequireDefault(require(\"./StyleSet/AnimationCardAttachment\"));\n\nvar _AudioCardAttachment = _interopRequireDefault(require(\"./StyleSet/AudioCardAttachment\"));\n\nvar _normalizeStyleOptions = _interopRequireDefault(require(\"../normalizeStyleOptions\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // TODO: [P4] We should add a notice for people who want to use \"styleSet\" instead of \"styleOptions\".\n//       \"styleSet\" is actually CSS stylesheet and it is based on the DOM tree.\n//       DOM tree may change from time to time, thus, maintaining \"styleSet\" becomes a constant effort.\n\n\nfunction createAdaptiveCardsStyleSet(options) {\n  var strictOptions = _objectSpread(_objectSpread({}, (0, _botframeworkWebchatApi.normalizeStyleOptions)(options)), (0, _normalizeStyleOptions.default)(options));\n\n  return {\n    adaptiveCardRenderer: (0, _AdaptiveCardRenderer.default)(strictOptions),\n    animationCardAttachment: (0, _AnimationCardAttachment.default)(),\n    audioCardAttachment: (0, _AudioCardAttachment.default)(strictOptions)\n  };\n}","map":{"version":3,"sources":["../../../src/adaptiveCards/Styles/createAdaptiveCardsStyleSet.ts"],"names":["strictOptions","adaptiveCardRenderer","animationCardAttachment","audioCardAttachment"],"mappings":";;;;;;;;;;;AAAA,IAAA,uBAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AAGA,IAAA,qBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,iCAAA,CAAA,CAAA;;AACA,IAAA,wBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,oCAAA,CAAA,CAAA;;AACA,IAAA,oBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,gCAAA,CAAA,CAAA;;AACA,IAAA,sBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAEA;AACA;AACA;;;AAEe,SAAA,2BAAA,CAAA,OAAA,EAA6F;AAC1G,MAAMA,aAAa,GAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EACd,CAAA,GAAA,uBAAA,CAAA,qBAAA,EADc,OACd,CADc,CAAA,EAEd,CAAA,GAAA,sBAAA,CAAA,OAAA,EAFL,OAEK,CAFc,CAAnB;;AAKA,SAAO;AACLC,IAAAA,oBAAoB,EAAE,CAAA,GAAA,qBAAA,CAAA,OAAA,EADjB,aACiB,CADjB;AAELC,IAAAA,uBAAuB,EAAE,CAAA,GAAA,wBAAA,CAFpB,OAEoB,GAFpB;AAGLC,IAAAA,mBAAmB,EAAE,CAAA,GAAA,oBAAA,CAAA,OAAA,EAAA,aAAA;AAHhB,GAAP;AAKD","sourcesContent":["import { normalizeStyleOptions, StyleOptions } from 'botframework-webchat-api';\n\nimport AdaptiveCardsStyleOptions from '../AdaptiveCardsStyleOptions';\nimport createAdaptiveCardRendererStyle from './StyleSet/AdaptiveCardRenderer';\nimport createAnimationCardAttachmentStyle from './StyleSet/AnimationCardAttachment';\nimport createAudioCardAttachmentStyle from './StyleSet/AudioCardAttachment';\nimport normalizeAdaptiveCardsStyleOptions from '../normalizeStyleOptions';\n\n// TODO: [P4] We should add a notice for people who want to use \"styleSet\" instead of \"styleOptions\".\n//       \"styleSet\" is actually CSS stylesheet and it is based on the DOM tree.\n//       DOM tree may change from time to time, thus, maintaining \"styleSet\" becomes a constant effort.\n\nexport default function createAdaptiveCardsStyleSet(options: StyleOptions & AdaptiveCardsStyleOptions): any {\n  const strictOptions = {\n    ...normalizeStyleOptions(options),\n    ...normalizeAdaptiveCardsStyleOptions(options)\n  };\n\n  return {\n    adaptiveCardRenderer: createAdaptiveCardRendererStyle(strictOptions),\n    animationCardAttachment: createAnimationCardAttachmentStyle(),\n    audioCardAttachment: createAudioCardAttachmentStyle(strictOptions)\n  };\n}\n"],"sourceRoot":"bundle:///"},"metadata":{},"sourceType":"script"}