{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ubuntu/myAdvisorDev/myadvisor/src/components/Staff/AddCourse.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Form, Col } from \"react-bootstrap\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n/*\n    AddCourse allows a staff member to add courses to the system.\n*/\n\nfunction AddCourse({\n  setShow,\n  refreshTable\n}) {\n  _s();\n\n  /*\n      The validated state is used to keep track of the validity of the add course form.\n      It's initial state is false.\n  */\n  const [validated, setValidated] = useState(false);\n  /*\n      The checkBoxState array is used to keep track of the checked state of the checkboxes.\n      It's initial state is false.\n  */\n\n  const [checkBoxState, setCheckBoxState] = useState(new Array(13).fill(false)); //console.log(checkBoxState);\n\n  const assessments = [\"coursework\", \"finalExam\", \"groupProject\", \"individualWork\", \"practicalCoursework\", \"courseworkExam\", \"projectPres\", \"project\", \"presentation\", \"assignment\", \"labAssessment\", \"midSemesterMcq\", \"projectReport\"];\n  /*\n      notifyAdded is used to display toast notifications for events. It displays a green toast.\n  */\n\n  const notifyAdded = text => toast.success(text);\n  /*\n      notifyNotAdded is used to display toast notifications for events. It displays a red toast.\n  */\n\n\n  const notifyNotAdded = text => toast.error(text);\n  /*\n      HandleChange gets the checkboxes that were checked and stores them in an array.\n  */\n\n\n  const handleChange = event => {\n    //console.log(event.target.id);\n    const updateCheckboxState = checkBoxState.map((checkbox, count) => {\n      if (count === parseInt(event.target.id)) {\n        return !checkbox;\n      } else {\n        return checkbox;\n      }\n    });\n    setCheckBoxState(updateCheckboxState); //console.log(updateCheckboxState);\n  };\n  /*\n      HandleSubmit gets the data from the form as passes it to the addCourse function.\n  */\n\n\n  const handleSubmit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n    setValidated(true);\n    var formData = {\n      courseCode: form.elements.courseCode.value.replace(/\\s+/g, ''),\n      courseTitle: form.elements.courseTitle.value,\n      credits: form.elements.credits.value,\n      semester: form.elements.semester.value,\n      level: form.elements.level.value,\n      type: form.elements.type.value,\n      prerequisites: form.elements.prerequisites.value,\n      description: form.elements.description.value,\n      coursework: String(form.elements.coursework.value) + \"%\"\n    };\n    /*\n                coursework: String(form.elements.coursework.value) + \"%\",\n                finalExam: String(form.elements.finalExam.value),\n                groupProject: String(form.elements.groupProject.value) + \"%\",\n                individualWork: String(form.elements.individualWork.value) + \"%\",\n                practicalCw: String(form.elements.practicalCw.value) + \"%\",\n                cwExam: String(form.elements.cwExam.value) + \"%\",\n                projectPres: String(form.elements.projectPres.value) + \"%\",\n                project: String(form.elements.project.value) + \"%\",\n                presentation: String(form.elements.presentation.value) + \"%\",\n                assignment: String(form.elements.assignment.value) + \"%\",\n                labAssessment: String(form.elements.labAssessment.value) + \"%\",\n                midSemMcq: String(form.elements.midSemMcq.value) + \"%\",\n                projectReport: String(form.elements.projectReport.value) + \"%\"\n    */\n    //Get the selected assessments and store them in an array\n\n    for (var i = 0; i < checkBoxState.length; i++) {\n      if (checkBoxState[i] === true) {//if checkbox is checked\n        //add elements to the formData\n        //formData[assessments[i]] = String(form.elements[assessments[i]].value) + \"%\"; \n      }\n    } //if(formData.coursework)\n\n\n    console.log(formData.coursework); //console.log(form.elements.);\n\n    addCourse(formData);\n  };\n  /*\n      addCourse creates a post request to the server, which adds a new course to the system.\n  */\n\n\n  async function addCourse(data) {\n    try {\n      //console.log(\"Hi\");\n      const res = await fetch(\"/courses/add\", {\n        method: \"POST\",\n        headers: {\n          token: localStorage.getItem(\"token\"),\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      console.log(res);\n      setShow(false);\n      refreshTable();\n\n      if (res.status === 401) {\n        notifyNotAdded(data.courseCode + \" Already Exists!\");\n      } else {\n        if (res.status === 200) {\n          notifyAdded(data.courseCode + \" Added!\");\n        }\n      }\n\n      const status = await res.statusText;\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  const styleCheckbox = {\n    marginTop: \"10px\",\n    marginLeft: \"20px\",\n    marginRight: \"10px\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      validated: validated,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"courseCode\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Course Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"courseTitle\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Course Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"3\",\n          controlId: \"credits\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Credits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"3\",\n          controlId: \"semester\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Semester\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"3\",\n          controlId: \"level\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"I\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"II\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"III\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"3\",\n          controlId: \"type\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Core\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Elective\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"assessment\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Assessments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"coursework\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Coursework\",\n              id: \"0\",\n              name: \"Coursework\",\n              onChange: handleChange,\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"finalExam\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Final Exam\",\n              id: \"1\",\n              name: \"Final Exam\",\n              onChange: handleChange,\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"groupProject\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Group Project\",\n              id: \"2\",\n              name: \"Group Project\",\n              onChange: handleChange,\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"individualWork\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Individual Work\",\n              id: \"3\",\n              name: \"Individual Work\",\n              onChange: handleChange,\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"practicalCoursework\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Practical Coursework\",\n              id: \"4\",\n              name: \"Practical Coursework\",\n              onChange: handleChange,\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"courseworkExam\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Coursework Exam\",\n              id: \"5\",\n              name: \"Coursework Exam\",\n              onChange: handleChange,\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"projectPres\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Project Presentation\",\n              id: \"6\",\n              name: \"Project Presentation\",\n              onChange: handleChange,\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"project\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Project\",\n              id: \"7\",\n              name: \"Project\",\n              onChange: handleChange,\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"presentation\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Presentation\",\n              id: \"8\",\n              name: \"Presentation\",\n              onChange: handleChange,\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"assignment\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Assignment\",\n              id: \"9\",\n              name: \"Assignment\",\n              onChange: handleChange,\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"labAssessment\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Lab Assessment\",\n              id: \"10\",\n              name: \"Lab Assessment\",\n              onChange: handleChange,\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"midSemesterMcq\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Mid Semester MCQ\",\n              id: \"11\",\n              name: \"Mid Semester MCQ\",\n              onChange: handleChange,\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"projectReport\",\n            className: \"form-inline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              label: \"Project Report\",\n              id: \"12\",\n              name: \"Project Report\",\n              onChange: handleChange,\n              style: styleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              max: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"prerequisites\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Prerequisites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"description\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          as: \"textarea\",\n          rows: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"float-right\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          class: \"btn btn-custom\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      pauseOnHover: true,\n      position: \"bottom-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddCourse, \"jlqtwjaP069VDpBSv7nyyfQ5GlM=\");\n\n_c = AddCourse;\nexport default AddCourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCourse\");","map":{"version":3,"sources":["/home/ubuntu/myAdvisorDev/myadvisor/src/components/Staff/AddCourse.js"],"names":["React","useState","Button","Form","Col","ToastContainer","toast","AddCourse","setShow","refreshTable","validated","setValidated","checkBoxState","setCheckBoxState","Array","fill","assessments","notifyAdded","text","success","notifyNotAdded","error","handleChange","event","updateCheckboxState","map","checkbox","count","parseInt","target","id","handleSubmit","form","currentTarget","checkValidity","preventDefault","stopPropagation","formData","courseCode","elements","value","replace","courseTitle","credits","semester","level","type","prerequisites","description","coursework","String","i","length","console","log","addCourse","data","res","fetch","method","headers","token","localStorage","getItem","body","JSON","stringify","status","statusText","err","message","styleCheckbox","marginTop","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form, Col } from \"react-bootstrap\";\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n/*\n    AddCourse allows a staff member to add courses to the system.\n*/\n\nfunction AddCourse({setShow, refreshTable}) {\n    /*\n        The validated state is used to keep track of the validity of the add course form.\n        It's initial state is false.\n    */    \n    const [validated, setValidated] = useState(false);\n\n    /*\n        The checkBoxState array is used to keep track of the checked state of the checkboxes.\n        It's initial state is false.\n    */    \n        const [checkBoxState, setCheckBoxState] = useState(new Array(13).fill(false));\n        //console.log(checkBoxState);\n\n        const assessments = [\"coursework\", \"finalExam\", \"groupProject\", \"individualWork\", \"practicalCoursework\", \"courseworkExam\", \n                             \"projectPres\", \"project\", \"presentation\", \"assignment\", \"labAssessment\", \"midSemesterMcq\", \n                             \"projectReport\"];\n                            \n        \n    /*\n        notifyAdded is used to display toast notifications for events. It displays a green toast.\n    */    \n    const notifyAdded = (text) => toast.success(text);\n\n    /*\n        notifyNotAdded is used to display toast notifications for events. It displays a red toast.\n    */    \n    const notifyNotAdded = (text) => toast.error(text);\n\n    /*\n        HandleChange gets the checkboxes that were checked and stores them in an array.\n    */    \n        const handleChange = (event) => {\n            //console.log(event.target.id);\n\n            const updateCheckboxState = checkBoxState.map((checkbox, count) => {\n                if(count === parseInt(event.target.id)){\n                    return !checkbox;\n                }\n                else{\n                    return checkbox;\n                }\n            });\n\n            setCheckBoxState(updateCheckboxState);\n            //console.log(updateCheckboxState);\n        };\n\n    /*\n        HandleSubmit gets the data from the form as passes it to the addCourse function.\n    */    \n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n\n        if (form.checkValidity() === false) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n        setValidated(true);\n\n        var formData = {\n            courseCode : (form.elements.courseCode.value).replace(/\\s+/g, ''),\n            courseTitle : form.elements.courseTitle.value,\n            credits : form.elements.credits.value,\n            semester : form.elements.semester.value,\n            level : form.elements.level.value,\n            type: form.elements.type.value,\n            prerequisites : form.elements.prerequisites.value,\n            description: form.elements.description.value,\n            coursework: String(form.elements.coursework.value) + \"%\",\n            \n        }\n        \n/*\n            coursework: String(form.elements.coursework.value) + \"%\",\n            finalExam: String(form.elements.finalExam.value),\n            groupProject: String(form.elements.groupProject.value) + \"%\",\n            individualWork: String(form.elements.individualWork.value) + \"%\",\n            practicalCw: String(form.elements.practicalCw.value) + \"%\",\n            cwExam: String(form.elements.cwExam.value) + \"%\",\n            projectPres: String(form.elements.projectPres.value) + \"%\",\n            project: String(form.elements.project.value) + \"%\",\n            presentation: String(form.elements.presentation.value) + \"%\",\n            assignment: String(form.elements.assignment.value) + \"%\",\n            labAssessment: String(form.elements.labAssessment.value) + \"%\",\n            midSemMcq: String(form.elements.midSemMcq.value) + \"%\",\n            projectReport: String(form.elements.projectReport.value) + \"%\"\n*/\n        \n        //Get the selected assessments and store them in an array\n        for(var i=0; i<checkBoxState.length; i++){\n            if(checkBoxState[i] === true){//if checkbox is checked\n                //add elements to the formData\n                //formData[assessments[i]] = String(form.elements[assessments[i]].value) + \"%\"; \n            }\n        }\n\n        //if(formData.coursework)\n        console.log(formData.coursework);\n        //console.log(form.elements.);\n        \n        addCourse(formData);\n    };\n\n    /*\n        addCourse creates a post request to the server, which adds a new course to the system.\n    */\n    async function addCourse(data) {\n        try {\n          //console.log(\"Hi\");\n          const res = await fetch(\"/courses/add\", {\n            method: \"POST\",\n            headers: {\n                token: localStorage.getItem(\"token\"),\n                \"Content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n          });\n          console.log(res);\n    \n          setShow(false);\n          refreshTable();\n\n          if(res.status===401){\n            notifyNotAdded(data.courseCode + \" Already Exists!\");\n          }\n          else{\n                if(res.status===200){\n                    notifyAdded(data.courseCode + \" Added!\");\n                }\n          }\n\n          const status = await res.statusText;\n          \n        } catch (err) {\n          console.error(err.message);\n        }\n    }\n\n        const styleCheckbox = {\n            marginTop: \"10px\",\n            marginLeft: \"20px\",\n            marginRight: \"10px\"\n        };\n    \n    return (\n        <>\n            <Form validated={validated} onSubmit={handleSubmit}>\n                <Form.Group controlId=\"courseCode\">\n                    <Form.Label>Course Code</Form.Label>\n                    <Form.Control required type=\"text\"/>\n                </Form.Group>\n\n                <Form.Group controlId=\"courseTitle\">\n                    <Form.Label>Course Title</Form.Label>\n                    <Form.Control required type=\"text\"/>\n                </Form.Group>\n\n                <Form.Row>\n                    <Form.Group as={Col} md=\"3\" controlId=\"credits\">\n                        <Form.Label>Credits</Form.Label>\n                        <Form.Control required as=\"select\">\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                            <option>4</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} md=\"3\" controlId=\"semester\">\n                        <Form.Label>Semester</Form.Label>\n                        <Form.Control required as=\"select\">\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} md=\"3\" controlId=\"level\">\n                        <Form.Label>Level</Form.Label>\n                        <Form.Control required as=\"select\">\n                            <option>I</option>\n                            <option>II</option>\n                            <option>III</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} md=\"3\" controlId=\"type\">\n                        <Form.Label>Type</Form.Label>\n                        <Form.Control required as=\"select\">\n                            <option>Core</option>\n                            <option>Elective</option>\n                        </Form.Control>\n                    </Form.Group>\n                </Form.Row>\n                \n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"assessment\">\n                        <Form.Label>Assessments</Form.Label>\n\n                        <Form.Group as={Col} controlId=\"coursework\" className=\"form-inline\">\n                            <Form.Check label=\"Coursework\" id=\"0\" name=\"Coursework\" onChange={handleChange} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\"/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"finalExam\" className=\"form-inline\">\n                            <Form.Check label=\"Final Exam\" id=\"1\" name=\"Final Exam\" onChange={handleChange} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\"/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"groupProject\" className=\"form-inline\">\n                            <Form.Check label=\"Group Project\" id=\"2\" name=\"Group Project\" onChange={handleChange} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\"/>\n                        </Form.Group>\n                        \n                        <Form.Group as={Col} controlId=\"individualWork\" className=\"form-inline\">\n                            <Form.Check label=\"Individual Work\" id=\"3\" name=\"Individual Work\" onChange={handleChange} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\"/>\n                        </Form.Group>\n                        \n                        <Form.Group as={Col} controlId=\"practicalCoursework\" className=\"form-inline\">\n                            <Form.Check label=\"Practical Coursework\" id=\"4\" name=\"Practical Coursework\" onChange={handleChange} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\"/>\n                        </Form.Group>\n                        \n                        <Form.Group as={Col} controlId=\"courseworkExam\" className=\"form-inline\">\n                            <Form.Check label=\"Coursework Exam\" id=\"5\" name=\"Coursework Exam\" onChange={handleChange} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\"/>\n                        </Form.Group>\n                        \n                        <Form.Group as={Col} controlId=\"projectPres\" className=\"form-inline\">\n                            <Form.Check label=\"Project Presentation\" id=\"6\" name=\"Project Presentation\" onChange={handleChange} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\"/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"project\" className=\"form-inline\">\n                            <Form.Check label=\"Project\" id=\"7\" name=\"Project\" onChange={handleChange} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\"/>\n                        </Form.Group>\n                        \n                        <Form.Group as={Col} controlId=\"presentation\" className=\"form-inline\">\n                            <Form.Check label=\"Presentation\" id=\"8\" name=\"Presentation\" onChange={handleChange} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\"/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"assignment\" className=\"form-inline\">\n                            <Form.Check label=\"Assignment\" id=\"9\" name=\"Assignment\" onChange={handleChange} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\"/>\n                        </Form.Group>\n                        \n                        <Form.Group as={Col} controlId=\"labAssessment\" className=\"form-inline\">\n                            <Form.Check label=\"Lab Assessment\" id=\"10\" name=\"Lab Assessment\" onChange={handleChange} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\"/>\n                        </Form.Group>\n                        \n                        <Form.Group as={Col} controlId=\"midSemesterMcq\" className=\"form-inline\">\n                            <Form.Check label=\"Mid Semester MCQ\" id=\"11\" name=\"Mid Semester MCQ\" onChange={handleChange} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\"/>\n                        </Form.Group>\n                        \n                        <Form.Group as={Col} controlId=\"projectReport\" className=\"form-inline\">\n                            <Form.Check label=\"Project Report\" id=\"12\" name=\"Project Report\" onChange={handleChange} style={styleCheckbox}></Form.Check>\n                            <Form.Control type=\"number\" min=\"0\" max=\"100\"/>\n                        </Form.Group>\n\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Group controlId=\"prerequisites\">\n                    <Form.Label>Prerequisites</Form.Label>\n                    <Form.Control required type=\"text\"/>\n                </Form.Group>\n\n                <Form.Group controlId=\"description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control required as=\"textarea\" rows={3}/>\n                </Form.Group>\n\n                <div class=\"float-right\"><Button type=\"submit\" class=\"btn btn-custom\">Submit</Button></div>\n            </Form>\n\n            <ToastContainer \n                pauseOnHover\n                position=\"bottom-right\"\n            />\n        </>\n    );\n}\n\nexport default AddCourse;"]},"metadata":{},"sourceType":"module"}