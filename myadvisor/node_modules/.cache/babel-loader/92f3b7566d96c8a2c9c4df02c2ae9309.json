{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _botframeworkWebchatApi = require(\"botframework-webchat-api\");\n\nvar _reactScrollToBottom = require(\"react-scroll-to-bottom\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _mathRandom = _interopRequireDefault(require(\"math-random\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _BasicTypingIndicator = _interopRequireDefault(require(\"./BasicTypingIndicator\"));\n\nvar _Fade = _interopRequireDefault(require(\"./Utils/Fade\"));\n\nvar _FocusRedirector = _interopRequireDefault(require(\"./Utils/FocusRedirector\"));\n\nvar _getActivityUniqueId = _interopRequireDefault(require(\"./Utils/getActivityUniqueId\"));\n\nvar _getTabIndex = _interopRequireDefault(require(\"./Utils/TypeFocusSink/getTabIndex\"));\n\nvar _inputtableKey = _interopRequireDefault(require(\"./Utils/TypeFocusSink/inputtableKey\"));\n\nvar _intersectionOf = _interopRequireDefault(require(\"./Utils/intersectionOf\"));\n\nvar _isZeroOrPositive = _interopRequireDefault(require(\"./Utils/isZeroOrPositive\"));\n\nvar _removeInline = _interopRequireDefault(require(\"./Utils/removeInline\"));\n\nvar _ScreenReaderActivity = _interopRequireDefault(require(\"./ScreenReaderActivity\"));\n\nvar _ScreenReaderText = _interopRequireDefault(require(\"./ScreenReaderText\"));\n\nvar _ScrollToEndButton = _interopRequireDefault(require(\"./Activity/ScrollToEndButton\"));\n\nvar _Speak = _interopRequireDefault(require(\"./Activity/Speak\"));\n\nvar _tabbableElements = _interopRequireDefault(require(\"./Utils/tabbableElements\"));\n\nvar _useAcknowledgedActivity = _interopRequireDefault(require(\"./hooks/internal/useAcknowledgedActivity\"));\n\nvar _useDispatchScrollPosition = _interopRequireDefault(require(\"./hooks/internal/useDispatchScrollPosition\"));\n\nvar _useDispatchTranscriptFocus = _interopRequireDefault(require(\"./hooks/internal/useDispatchTranscriptFocus\"));\n\nvar _useFocus = _interopRequireDefault(require(\"./hooks/useFocus\"));\n\nvar _useMemoize = _interopRequireDefault(require(\"./hooks/internal/useMemoize\"));\n\nvar _useRegisterFocusTranscript = _interopRequireDefault(require(\"./hooks/internal/useRegisterFocusTranscript\"));\n\nvar _useRegisterScrollRelative = _interopRequireDefault(require(\"./hooks/internal/useRegisterScrollRelative\"));\n\nvar _useRegisterScrollTo = _interopRequireDefault(require(\"./hooks/internal/useRegisterScrollTo\"));\n\nvar _useRegisterScrollToEnd = _interopRequireDefault(require(\"./hooks/internal/useRegisterScrollToEnd\"));\n\nvar _useStyleSet5 = _interopRequireDefault(require(\"./hooks/useStyleSet\"));\n\nvar _useStyleToEmotionObject = _interopRequireDefault(require(\"./hooks/internal/useStyleToEmotionObject\"));\n\nvar _useUniqueId = _interopRequireDefault(require(\"./hooks/internal/useUniqueId\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar useActivities = _botframeworkWebchatApi.hooks.useActivities,\n    useCreateActivityRenderer = _botframeworkWebchatApi.hooks.useCreateActivityRenderer,\n    useCreateActivityStatusRenderer = _botframeworkWebchatApi.hooks.useCreateActivityStatusRenderer,\n    useCreateAvatarRenderer = _botframeworkWebchatApi.hooks.useCreateAvatarRenderer,\n    useDirection = _botframeworkWebchatApi.hooks.useDirection,\n    useGroupActivities = _botframeworkWebchatApi.hooks.useGroupActivities,\n    useLocalizer = _botframeworkWebchatApi.hooks.useLocalizer,\n    useStyleOptions = _botframeworkWebchatApi.hooks.useStyleOptions;\nvar ROOT_STYLE = {\n  '&.webchat__basic-transcript': {\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden',\n    // Make sure to set \"position: relative\" here to form another stacking context for the scroll-to-end button.\n    // Stacking context help isolating elements that use \"z-index\" from global pollution.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n    position: 'relative',\n    '& .webchat__basic-transcript__filler': {\n      flex: 1\n    },\n    '& .webchat__basic-transcript__scrollable': {\n      display: 'flex',\n      flexDirection: 'column',\n      overflowX: 'hidden',\n      WebkitOverflowScrolling: 'touch'\n    },\n    '& .webchat__basic-transcript__transcript': {\n      listStyleType: 'none'\n    }\n  }\n};\n\nfunction validateAllActivitiesTagged(activities, bins) {\n  return activities.every(function (activity) {\n    return bins.some(function (bin) {\n      return bin.includes(activity);\n    });\n  });\n}\n\nvar InternalTranscript = function InternalTranscript(_ref) {\n  var activityElementsRef = _ref.activityElementsRef,\n      className = _ref.className;\n\n  var _useStyleSet = (0, _useStyleSet5.default)(),\n      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),\n      basicTranscriptStyleSet = _useStyleSet2[0].basicTranscript;\n\n  var _useStyleOptions = useStyleOptions(),\n      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),\n      _useStyleOptions2$ = _useStyleOptions2[0],\n      bubbleFromUserNubOffset = _useStyleOptions2$.bubbleFromUserNubOffset,\n      bubbleNubOffset = _useStyleOptions2$.bubbleNubOffset,\n      groupTimestamp = _useStyleOptions2$.groupTimestamp,\n      internalLiveRegionFadeAfter = _useStyleOptions2$.internalLiveRegionFadeAfter,\n      showAvatarInGroup = _useStyleOptions2$.showAvatarInGroup;\n\n  var _useState = (0, _react.useState)(),\n      _useState2 = _slicedToArray(_useState, 2),\n      focusedActivityKey = _useState2[0],\n      setFocusedActivityKey = _useState2[1];\n\n  var _useActivities = useActivities(),\n      _useActivities2 = _slicedToArray(_useActivities, 1),\n      activities = _useActivities2[0];\n\n  var _useDirection = useDirection(),\n      _useDirection2 = _slicedToArray(_useDirection, 1),\n      direction = _useDirection2[0];\n\n  var createActivityRenderer = useCreateActivityRenderer();\n  var createActivityStatusRenderer = useCreateActivityStatusRenderer();\n  var createAvatarRenderer = useCreateAvatarRenderer();\n  var focus = (0, _useFocus.default)();\n  var groupActivities = useGroupActivities();\n  var localize = useLocalizer();\n  var rootClassName = (0, _useStyleToEmotionObject.default)()(ROOT_STYLE) + '';\n  var rootElementRef = (0, _react.useRef)();\n  var terminatorRef = (0, _react.useRef)();\n  var activityInteractiveAlt = localize('ACTIVITY_INTERACTIVE_LABEL_ALT');\n  var terminatorText = localize('TRANSCRIPT_TERMINATOR_TEXT');\n  var transcriptAriaLabel = localize('TRANSCRIPT_ARIA_LABEL_ALT');\n  var transcriptRoleDescription = localize('TRANSCRIPT_ARIA_ROLE_ALT');\n  var hideAllTimestamps = groupTimestamp === false; // Gets renderer for every activity.\n  // Activities that are not visible will return a falsy renderer.\n  // Converted from createActivityRenderer({ activity, nextVisibleActivity }) to createActivityRenderer(activity, nextVisibleActivity).\n  // This is for the memoization function to cache the arguments. Memoizer can only cache literal arguments.\n\n  var createActivityRendererWithLiteralArgs = (0, _react.useCallback)(function (activity, nextVisibleActivity) {\n    return createActivityRenderer({\n      activity: activity,\n      nextVisibleActivity: nextVisibleActivity\n    });\n  }, [createActivityRenderer]); // Create a memoized context of the createActivityRenderer function.\n\n  var activitiesWithRenderer = (0, _useMemoize.default)(createActivityRendererWithLiteralArgs, function (createActivityRendererWithLiteralArgsMemoized) {\n    // All calls to createActivityRendererWithLiteralArgsMemoized() in this function will be memoized (LRU = 1).\n    // In the next render cycle, calls to createActivityRendererWithLiteralArgsMemoized() might return the memoized result instead.\n    // This is an improvement to React useMemo(), because it only allows 1 memoization.\n    // useMemoize() allows any number of memoization.\n    var activitiesWithRenderer = [];\n    var nextVisibleActivity;\n\n    for (var index = activities.length - 1; index >= 0; index--) {\n      var activity = activities[index];\n      var renderActivity = createActivityRendererWithLiteralArgsMemoized(activity, nextVisibleActivity);\n\n      if (renderActivity) {\n        activitiesWithRenderer.splice(0, 0, {\n          activity: activity,\n          renderActivity: renderActivity\n        });\n        nextVisibleActivity = activity;\n      }\n    }\n\n    return activitiesWithRenderer;\n  }, [activities]);\n  var visibleActivities = (0, _react.useMemo)(function () {\n    return activitiesWithRenderer.map(function (_ref2) {\n      var activity = _ref2.activity;\n      return activity;\n    });\n  }, [activitiesWithRenderer]); // Tag activities based on types.\n  // The default implementation tag into 2 types: sender and status.\n\n  var _useMemo = (0, _react.useMemo)(function () {\n    var _groupActivities = groupActivities({\n      activities: visibleActivities\n    }),\n        activitiesGroupBySender = _groupActivities.sender,\n        activitiesGroupByStatus = _groupActivities.status;\n\n    if (!validateAllActivitiesTagged(visibleActivities, activitiesGroupBySender)) {\n      console.warn('botframework-webchat: Not every activities are grouped in the \"sender\" property. Please fix \"groupActivitiesMiddleware\" and group every activities.');\n    }\n\n    if (!validateAllActivitiesTagged(visibleActivities, activitiesGroupByStatus)) {\n      console.warn('botframework-webchat: Not every activities are grouped in the \"status\" property. Please fix \"groupActivitiesMiddleware\" and group every activities.');\n    }\n\n    return {\n      activitiesGroupBySender: activitiesGroupBySender,\n      activitiesGroupByStatus: activitiesGroupByStatus\n    };\n  }, [groupActivities, visibleActivities]),\n      activitiesGroupBySender = _useMemo.activitiesGroupBySender,\n      activitiesGroupByStatus = _useMemo.activitiesGroupByStatus; // Create a tree of activities with 2 dimensions: sender, followed by status.\n\n\n  var activityTree = (0, _react.useMemo)(function () {\n    var visibleActivitiesPendingGrouping = _toConsumableArray(visibleActivities);\n\n    var activityTree = [];\n\n    var _loop = function _loop() {\n      var _visibleActivitiesPen = _slicedToArray(visibleActivitiesPendingGrouping, 1),\n          activity = _visibleActivitiesPen[0];\n\n      var senderTree = [];\n      var activitiesWithSameSender = activitiesGroupBySender.find(function (activities) {\n        return activities.includes(activity);\n      });\n      activityTree.push(senderTree);\n      activitiesWithSameSender.forEach(function (activity) {\n        var activitiesWithSameStatus = activitiesGroupByStatus.find(function (activities) {\n          return activities.includes(activity);\n        });\n        var activitiesWithSameSenderAndStatus = (0, _intersectionOf.default)(visibleActivitiesPendingGrouping, activitiesWithSameSender, activitiesWithSameStatus);\n\n        if (activitiesWithSameSenderAndStatus.length) {\n          senderTree.push(activitiesWithSameSenderAndStatus);\n\n          _removeInline.default.apply(void 0, [visibleActivitiesPendingGrouping].concat(_toConsumableArray(activitiesWithSameSenderAndStatus)));\n        }\n      });\n    };\n\n    while (visibleActivitiesPendingGrouping.length) {\n      _loop();\n    } // Assertion: All activities in visibleActivities, must be assigned to the activityTree\n\n\n    if (!visibleActivities.every(function (activity) {\n      return activityTree.some(function (activitiesWithSameSender) {\n        return activitiesWithSameSender.some(function (activitiesWithSameSenderAndStatus) {\n          return activitiesWithSameSenderAndStatus.includes(activity);\n        });\n      });\n    })) {\n      console.warn('botframework-webchat internal: Not all visible activities are grouped in the activityTree.', {\n        visibleActivities: visibleActivities,\n        activityTree: activityTree\n      });\n    }\n\n    return activityTree;\n  }, [activitiesGroupBySender, activitiesGroupByStatus, visibleActivities]); // Flatten the tree back into an array with information related to rendering.\n\n  var renderingElements = (0, _react.useMemo)(function () {\n    var renderingElements = [];\n    var topSideBotNub = (0, _isZeroOrPositive.default)(bubbleNubOffset);\n    var topSideUserNub = (0, _isZeroOrPositive.default)(bubbleFromUserNubOffset);\n    activityTree.forEach(function (activitiesWithSameSender) {\n      var _activitiesWithSameSe = _slicedToArray(activitiesWithSameSender, 1),\n          _activitiesWithSameSe2 = _slicedToArray(_activitiesWithSameSe[0], 1),\n          firstActivity = _activitiesWithSameSe2[0];\n\n      var renderAvatar = createAvatarRenderer({\n        activity: firstActivity\n      });\n      activitiesWithSameSender.forEach(function (activitiesWithSameSenderAndStatus, indexWithinSenderGroup) {\n        var firstInSenderGroup = !indexWithinSenderGroup;\n        var lastInSenderGroup = indexWithinSenderGroup === activitiesWithSameSender.length - 1;\n        activitiesWithSameSenderAndStatus.forEach(function (activity, indexWithinSenderAndStatusGroup) {\n          // We only show the timestamp at the end of the sender group. But we always show the \"Send failed, retry\" prompt.\n          var renderActivityStatus = createActivityStatusRenderer({\n            activity: activity\n          });\n          var firstInSenderAndStatusGroup = !indexWithinSenderAndStatusGroup;\n          var lastInSenderAndStatusGroup = indexWithinSenderAndStatusGroup === activitiesWithSameSenderAndStatus.length - 1;\n\n          var _activitiesWithRender = activitiesWithRenderer.find(function (entry) {\n            return entry.activity === activity;\n          }),\n              renderActivity = _activitiesWithRender.renderActivity;\n\n          var key = (0, _getActivityUniqueId.default)(activity) || renderingElements.length;\n          var _activity$channelData = activity.channelData;\n          _activity$channelData = _activity$channelData === void 0 ? {} : _activity$channelData;\n          var _activity$channelData2 = _activity$channelData.messageBack;\n          _activity$channelData2 = _activity$channelData2 === void 0 ? {} : _activity$channelData2;\n          var messageBackDisplayText = _activity$channelData2.displayText,\n              role = activity.from.role,\n              text = activity.text;\n          var topSideNub = role === 'user' ? topSideUserNub : topSideBotNub;\n          var showCallout; // Depending on the \"showAvatarInGroup\" setting, the avatar will render in different positions.\n\n          if (showAvatarInGroup === 'sender') {\n            if (topSideNub) {\n              showCallout = firstInSenderGroup && firstInSenderAndStatusGroup;\n            } else {\n              showCallout = lastInSenderGroup && lastInSenderAndStatusGroup;\n            }\n          } else if (showAvatarInGroup === 'status') {\n            if (topSideNub) {\n              showCallout = firstInSenderAndStatusGroup;\n            } else {\n              showCallout = lastInSenderAndStatusGroup;\n            }\n          } else {\n            showCallout = true;\n          }\n\n          var focusActivity = function focusActivity() {\n            setFocusedActivityKey((0, _getActivityUniqueId.default)(activity)); // IE11 need to manually focus on the transcript.\n\n            var rootElement = rootElementRef.current;\n            rootElement && rootElement.focus();\n          };\n\n          renderingElements.push({\n            activity: activity,\n            // After the element is mounted, set it to activityElementsRef.\n            callbackRef: function callbackRef(activityElement) {\n              var entry = activityElementsRef.current.find(function (_ref3) {\n                var activityID = _ref3.activityID;\n                return activityID === activity.id;\n              });\n\n              if (entry) {\n                entry.element = activityElement;\n              }\n            },\n            // Calling this function will put the focus on the transcript and the activity.\n            focusActivity: focusActivity,\n            // When a child of the activity receives focus, notify the transcript to set the aria-activedescendant to this activity.\n            handleFocus: function handleFocus() {\n              setFocusedActivityKey((0, _getActivityUniqueId.default)(activity));\n            },\n            handleKeyDown: function handleKeyDown(event) {\n              if (event.key === 'Escape') {\n                event.preventDefault();\n                event.stopPropagation();\n                setFocusedActivityKey((0, _getActivityUniqueId.default)(activity));\n                var current = rootElementRef.current;\n                current && current.focus();\n              }\n            },\n            // For accessibility: when the user press up/down arrow keys, we put a visual focus indicator around the focused activity.\n            // We should do the same for mouse, that is why we have the click handler here.\n            // We are doing it in event capture phase to prevent other components from stopping event propagation to us.\n            handleMouseDownCapture: function handleMouseDownCapture(_ref4) {\n              var target = _ref4.target;\n              var tabIndex = (0, _getTabIndex.default)(target);\n\n              if (typeof tabIndex !== 'number' || tabIndex < 0 || target.getAttribute('aria-disabled') === 'true') {\n                focusActivity();\n              }\n            },\n            // \"hideTimestamp\" is a render-time parameter for renderActivityStatus().\n            // If true, it will hide the timestamp, but it will continue to show the\n            // retry prompt. And show the screen reader version of the timestamp.\n            hideTimestamp: hideAllTimestamps || indexWithinSenderAndStatusGroup !== activitiesWithSameSenderAndStatus.length - 1,\n            key: key,\n            // When \"liveRegionKey\" changes, it will show up in the live region momentarily.\n            liveRegionKey: key + '|' + (messageBackDisplayText || text),\n            renderActivity: renderActivity,\n            renderActivityStatus: renderActivityStatus,\n            renderAvatar: renderAvatar,\n            role: role,\n            // TODO: [P2] #2858 We should use core/definitions/speakingActivity for this predicate instead\n            shouldSpeak: activity.channelData && activity.channelData.speak,\n            showCallout: showCallout\n          });\n        });\n      });\n    });\n    var activityElements = activityElementsRef.current; // Update activityElementRef with new sets of activity, while retaining the existing referencing element if exists.\n\n    activityElementsRef.current = renderingElements.map(function (_ref5) {\n      var activity = _ref5.activity,\n          id = _ref5.activity.id,\n          elementId = _ref5.elementId,\n          key = _ref5.key;\n      var existingEntry = activityElements.find(function (entry) {\n        return entry.key === key;\n      });\n      return {\n        activity: activity,\n        activityID: id,\n        ariaLabelID: existingEntry ? existingEntry.ariaLabelID : \"webchat__basic-transcript__activity-label-\".concat((0, _mathRandom.default)().toString(36).substr(2, 5)),\n        element: existingEntry && existingEntry.element,\n        elementId: elementId,\n        key: key\n      };\n    }); // There must be one focused (a.k.a. aria-activedescendant) designated. We default it to the last one.\n\n    if (!renderingElements.find(function (_ref6) {\n      var focused = _ref6.focused;\n      return focused;\n    })) {\n      var lastElement = renderingElements[renderingElements.length - 1];\n\n      if (lastElement) {\n        lastElement.focused = true;\n      }\n    }\n\n    return renderingElements;\n  }, [activitiesWithRenderer, activityElementsRef, activityTree, bubbleFromUserNubOffset, bubbleNubOffset, createActivityStatusRenderer, createAvatarRenderer, hideAllTimestamps, rootElementRef, showAvatarInGroup]);\n  var renderingActivities = (0, _react.useMemo)(function () {\n    return renderingElements.map(function (_ref7) {\n      var activity = _ref7.activity;\n      return activity;\n    });\n  }, [renderingElements]);\n  var scrollToBottomScrollTo = (0, _reactScrollToBottom.useScrollTo)();\n  var scrollToBottomScrollToEnd = (0, _reactScrollToBottom.useScrollToEnd)();\n  var scrollTo = (0, _react.useCallback)(function (position) {\n    var _ref8 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref8$behavior = _ref8.behavior,\n        behavior = _ref8$behavior === void 0 ? 'auto' : _ref8$behavior;\n\n    if (!position) {\n      throw new Error('botframework-webchat: First argument passed to \"useScrollTo\" must be a ScrollPosition object.');\n    }\n\n    var activityID = position.activityID,\n        scrollTop = position.scrollTop;\n\n    if (typeof scrollTop !== 'undefined') {\n      scrollToBottomScrollTo(scrollTop, {\n        behavior: behavior\n      });\n    } else if (typeof activityID !== 'undefined') {\n      var rootElement = rootElementRef.current;\n\n      var _ref9 = activityElementsRef.current.find(function (entry) {\n        return entry.activityID === activityID;\n      }) || {},\n          activityElement = _ref9.element;\n\n      var scrollableElement = rootElement.querySelector('.webchat__basic-transcript__scrollable');\n\n      if (scrollableElement && activityElement) {\n        var _activityElement$getC = activityElement.getClientRects(),\n            _activityElement$getC2 = _slicedToArray(_activityElement$getC, 1),\n            _activityElement$getC3 = _activityElement$getC2[0],\n            activityElementHeight = _activityElement$getC3.height,\n            activityElementY = _activityElement$getC3.y;\n\n        var _scrollableElement$ge = scrollableElement.getClientRects(),\n            _scrollableElement$ge2 = _slicedToArray(_scrollableElement$ge, 1),\n            scrollableHeight = _scrollableElement$ge2[0].height;\n\n        var activityElementOffsetTop = activityElementY + scrollableElement.scrollTop;\n\n        var _scrollTop = Math.min(activityElementOffsetTop, activityElementOffsetTop - scrollableHeight + activityElementHeight);\n\n        scrollToBottomScrollTo(_scrollTop, {\n          behavior: behavior\n        });\n      }\n    }\n  }, [activityElementsRef, rootElementRef, scrollToBottomScrollTo]);\n  var scrollRelative = (0, _react.useCallback)(function (direction) {\n    var _ref10 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        displacement = _ref10.displacement;\n\n    var rootElement = rootElementRef.current;\n\n    if (!rootElement) {\n      return;\n    }\n\n    var scrollable = rootElement.querySelector('.webchat__basic-transcript__scrollable');\n    var nextScrollTop;\n\n    if (typeof displacement === 'number') {\n      nextScrollTop = scrollable.scrollTop + (direction === 'down' ? 1 : -1) * displacement;\n    } else {\n      nextScrollTop = scrollable.scrollTop + (direction === 'down' ? 1 : -1) * scrollable.offsetHeight;\n    }\n\n    scrollTo({\n      scrollTop: Math.max(0, Math.min(scrollable.scrollHeight - scrollable.offsetHeight, nextScrollTop))\n    }, {\n      behavior: 'smooth'\n    });\n  }, [rootElementRef, scrollTo]); // Since there could be multiple instances of <BasicTranscript> inside the <Composer>, when the developer calls `scrollXXX`, we need to call it on all instances.\n  // We call `useRegisterScrollXXX` to register a callback function, the `useScrollXXX` will multiplex the call into each instance of <BasicTranscript>.\n\n  (0, _useRegisterScrollTo.default)(scrollTo);\n  (0, _useRegisterScrollToEnd.default)(scrollToBottomScrollToEnd);\n  (0, _useRegisterScrollRelative.default)(scrollRelative);\n  var dispatchScrollPosition = (0, _useDispatchScrollPosition.default)();\n  var patchedDispatchScrollPosition = (0, _react.useMemo)(function () {\n    if (!dispatchScrollPosition) {\n      return;\n    }\n\n    return function (_ref11) {\n      var scrollTop = _ref11.scrollTop;\n      var rootElement = rootElementRef.current;\n\n      if (!rootElement) {\n        return;\n      }\n\n      var scrollableElement = rootElement.querySelector('.webchat__basic-transcript__scrollable');\n\n      var _scrollableElement$ge3 = scrollableElement.getClientRects(),\n          _scrollableElement$ge4 = _slicedToArray(_scrollableElement$ge3, 1),\n          _scrollableElement$ge5 = _scrollableElement$ge4[0];\n\n      _scrollableElement$ge5 = _scrollableElement$ge5 === void 0 ? {} : _scrollableElement$ge5;\n      var offsetHeight = _scrollableElement$ge5.height; // Find the activity just above scroll view bottom.\n      // If the scroll view is already on top, get the first activity.\n\n      var entry = scrollableElement.scrollTop ? _toConsumableArray(activityElementsRef.current).reverse().find(function (_ref12) {\n        var element = _ref12.element;\n\n        if (!element) {\n          return false;\n        }\n\n        var _element$getClientRec = element.getClientRects(),\n            _element$getClientRec2 = _slicedToArray(_element$getClientRec, 1),\n            _element$getClientRec3 = _element$getClientRec2[0];\n\n        _element$getClientRec3 = _element$getClientRec3 === void 0 ? {} : _element$getClientRec3;\n        var y = _element$getClientRec3.y;\n        return y < offsetHeight;\n      }) : activityElementsRef.current[0];\n\n      var _ref13 = entry || {},\n          activityID = _ref13.activityID;\n\n      dispatchScrollPosition(_objectSpread(_objectSpread({}, activityID ? {\n        activityID: activityID\n      } : {}), {}, {\n        scrollTop: scrollTop\n      }));\n    };\n  }, [activityElementsRef, dispatchScrollPosition, rootElementRef]);\n  (0, _reactScrollToBottom.useObserveScrollPosition)(patchedDispatchScrollPosition);\n\n  var _useAcknowledgedActiv = (0, _useAcknowledgedActivity.default)(),\n      _useAcknowledgedActiv2 = _slicedToArray(_useAcknowledgedActiv, 1),\n      lastInteractedActivity = _useAcknowledgedActiv2[0];\n\n  var indexOfLastInteractedActivity = activities.indexOf(lastInteractedActivity); // Create a new ID for aria-activedescendant every time the active descendant change.\n  // In our design, the transcript will only have 1 focused activity and it has an ID. Other blurred activities will not have ID assigned.\n  // This help with performance.\n  // But browser usually do noop if the value of aria-activedescendant doesn't change.\n  // That means, if we assign the same ID to another element, browser will do noop.\n  // We need to generate a new ID so the browser see there is a change in aria-activedescendant value and perform accordingly.\n\n  var activeDescendantElementId = (0, _react.useMemo)(function () {\n    return focusedActivityKey && \"webchat__basic-transcript__active-descendant-\".concat((0, _mathRandom.default)().toString(36).substr(2, 5));\n  }, [focusedActivityKey]);\n  var scrollActiveDescendantIntoView = (0, _react.useCallback)(function () {\n    var activeDescendant = activeDescendantElementId && document.getElementById(activeDescendantElementId); // Don't scroll active descendant into view if the focus is already inside it.\n    // Otherwise, given the focus is on the send box, clicking on any <input> inside the Adaptive Cards may cause the view to move.\n    // This UX is not desirable because click should not cause scroll.\n\n    if (activeDescendant && !activeDescendant.contains(document.activeElement)) {\n      // Checks if scrollIntoView support options or not.\n      // - https://github.com/Modernizr/Modernizr/issues/1568#issuecomment-419457972\n      // - https://stackoverflow.com/questions/46919627/is-it-possible-to-test-for-scrollintoview-browser-compatibility\n      if ('scrollBehavior' in document.documentElement.style) {\n        activeDescendant.scrollIntoView({\n          block: 'nearest'\n        });\n      } else {\n        // This is for browser that does not support options passed to scrollIntoView(), possibly IE11.\n        var scrollableElement = rootElementRef.current.querySelector('.webchat__basic-transcript__scrollable');\n        var scrollTopAtTopSide = activeDescendant.offsetTop;\n        var scrollTopAtBottomSide = activeDescendant.offsetTop + activeDescendant.offsetHeight;\n\n        if (scrollTopAtTopSide < scrollableElement.scrollTop) {\n          scrollableElement.scrollTop = scrollTopAtTopSide;\n        } else if (scrollTopAtBottomSide > scrollableElement.scrollTop + scrollableElement.offsetHeight) {\n          scrollableElement.scrollTop = scrollTopAtBottomSide - scrollableElement.offsetHeight;\n        }\n      }\n    }\n  }, [activeDescendantElementId, rootElementRef]);\n  var handleTranscriptFocus = (0, _react.useCallback)(function (event) {\n    var currentTarget = event.currentTarget,\n        target = event.target; // When focus is placed on the transcript, scroll active descendant into the view.\n\n    currentTarget === target && scrollActiveDescendantIntoView();\n  }, [scrollActiveDescendantIntoView]); // After new aria-activedescendant is assigned, we will need to scroll it into view.\n  // User agent will scroll automatically for focusing element, but not for aria-activedescendant.\n  // We need to do the scrolling manually.\n\n  (0, _react.useEffect)(function () {\n    return scrollActiveDescendantIntoView();\n  }, [scrollActiveDescendantIntoView]); // If any activities has changed, reset the active descendant.\n\n  (0, _react.useEffect)(function () {\n    return setFocusedActivityKey(undefined);\n  }, [activities, setFocusedActivityKey]);\n  var focusRelativeActivity = (0, _react.useCallback)(function (delta) {\n    if (isNaN(delta) || !renderingElements.length) {\n      return setFocusedActivityKey(undefined);\n    }\n\n    var index = renderingElements.findIndex(function (_ref14) {\n      var key = _ref14.key;\n      return key === focusedActivityKey;\n    });\n    var nextIndex = ~index ? Math.max(0, Math.min(renderingElements.length - 1, index + delta)) : renderingElements.length - 1;\n    var nextFocusedActivity = renderingElements[nextIndex];\n    setFocusedActivityKey(nextFocusedActivity.key);\n    rootElementRef.current && rootElementRef.current.focus();\n  }, [focusedActivityKey, renderingElements, rootElementRef, setFocusedActivityKey]);\n  var handleTranscriptKeyDown = (0, _react.useCallback)(function (event) {\n    var target = event.target;\n    var fromEndOfTranscriptIndicator = target === terminatorRef.current;\n    var fromTranscript = target === event.currentTarget;\n\n    if (!fromEndOfTranscriptIndicator && !fromTranscript) {\n      return;\n    }\n\n    var handled = true;\n\n    switch (event.key) {\n      case 'ArrowDown':\n        focusRelativeActivity(fromEndOfTranscriptIndicator ? 0 : 1);\n        break;\n\n      case 'ArrowUp':\n        focusRelativeActivity(fromEndOfTranscriptIndicator ? 0 : -1);\n        break;\n\n      case 'End':\n        focusRelativeActivity(Infinity);\n        break;\n\n      case 'Enter':\n        if (!fromEndOfTranscriptIndicator) {\n          var focusedActivityEntry = renderingElements.find(function (_ref15) {\n            var key = _ref15.key;\n            return key === focusedActivityKey;\n          });\n\n          if (focusedActivityEntry) {\n            var _ref16 = activityElementsRef.current.find(function (_ref17) {\n              var activity = _ref17.activity;\n              return activity === focusedActivityEntry.activity;\n            }) || {},\n                focusedActivityElement = _ref16.element;\n\n            if (focusedActivityElement) {\n              var _tabbableElements$fil = (0, _tabbableElements.default)(focusedActivityElement).filter(function (_ref18) {\n                var className = _ref18.className;\n                return className !== 'webchat__basic-transcript__activity-sentinel';\n              }),\n                  _tabbableElements$fil2 = _slicedToArray(_tabbableElements$fil, 1),\n                  firstTabbableElement = _tabbableElements$fil2[0];\n\n              firstTabbableElement && firstTabbableElement.focus();\n            }\n          }\n        }\n\n        break;\n\n      case 'Escape':\n        focus('sendBoxWithoutKeyboard');\n        break;\n\n      case 'Home':\n        focusRelativeActivity(-Infinity);\n        break;\n\n      default:\n        handled = false;\n        break;\n    }\n\n    if (handled) {\n      event.preventDefault(); // If a custom HTML control wants to handle up/down arrow, we will prevent them from listening to this event to prevent bugs due to handling arrow keys twice.\n\n      event.stopPropagation();\n    }\n  }, [focusedActivityKey, activityElementsRef, focusRelativeActivity, focus, terminatorRef, renderingElements]);\n  var labelId = (0, _useUniqueId.default)('webchat__basic-transcript__label'); // If SHIFT-TAB from \"End of transcript\" indicator, if focusedActivityKey is not set (or no longer exists), set it the the bottommost activity.\n\n  var setBottommostFocusedActivityKeyIfNeeded = (0, _react.useCallback)(function () {\n    if (!~renderingElements.findIndex(function (_ref19) {\n      var key = _ref19.key;\n      return key === focusedActivityKey;\n    })) {\n      var _ref20 = renderingElements[renderingElements.length - 1] || {},\n          lastActivityKey = _ref20.key;\n\n      setFocusedActivityKey(lastActivityKey);\n    }\n  }, [focusedActivityKey, renderingElements, setFocusedActivityKey]);\n  var handleTranscriptKeyDownCapture = (0, _react.useCallback)(function (event) {\n    var altKey = event.altKey,\n        ctrlKey = event.ctrlKey,\n        key = event.key,\n        metaKey = event.metaKey,\n        target = event.target;\n\n    if (altKey || ctrlKey && key !== 'v' || metaKey || !(0, _inputtableKey.default)(key) && key !== 'Backspace') {\n      // Ignore if one of the utility key (except SHIFT) is pressed\n      // E.g. CTRL-C on a link in one of the message should not jump to chat box\n      // E.g. \"A\" or \"Backspace\" should jump to chat box\n      return;\n    } // Send keystrokes to send box if we are focusing on the transcript or terminator.\n\n\n    if (target === event.currentTarget || target === terminatorRef.current) {\n      event.stopPropagation();\n      focus('sendBox');\n    }\n  }, [focus]);\n  var focusTranscriptCallback = (0, _react.useCallback)(function () {\n    return rootElementRef.current && rootElementRef.current.focus();\n  }, [rootElementRef]);\n  (0, _useRegisterFocusTranscript.default)(focusTranscriptCallback);\n  var handleFocusActivity = (0, _react.useCallback)(function (key) {\n    setFocusedActivityKey(key);\n    rootElementRef.current && rootElementRef.current.focus();\n  }, [setFocusedActivityKey]); // When the focusing activity has changed, dispatch an event to observers of \"useObserveTranscriptFocus\".\n\n  var dispatchTranscriptFocus = (0, _useDispatchTranscriptFocus.default)();\n  var focusedActivity = (0, _react.useMemo)(function () {\n    var _ref21 = renderingElements.find(function (_ref22) {\n      var key = _ref22.key;\n      return key === focusedActivityKey;\n    }) || {},\n        activity = _ref21.activity;\n\n    return activity;\n  }, [focusedActivityKey, renderingElements]);\n  (0, _react.useMemo)(function () {\n    return dispatchTranscriptFocus && dispatchTranscriptFocus({\n      activity: focusedActivity\n    });\n  }, [dispatchTranscriptFocus, focusedActivity]); // This is required by IE11.\n  // When the user clicks on and empty space (a.k.a. filler) in an empty transcript, IE11 says the focus is on the <div className=\"filler\">,\n  // despite the fact there are no \"tabIndex\" attributes set on the filler.\n  // We need to artificially send the focus back to the transcript.\n\n  var handleFocusFiller = (0, _react.useCallback)(function () {\n    var current = rootElementRef.current;\n    current && current.focus();\n  }, [rootElementRef]);\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    \"aria-activedescendant\": focusedActivityKey ? activeDescendantElementId : undefined,\n    \"aria-labelledby\": labelId,\n    className: (0, _classnames.default)('webchat__basic-transcript', basicTranscriptStyleSet + '', rootClassName, (className || '') + ''),\n    dir: direction,\n    onFocus: handleTranscriptFocus,\n    onKeyDown: handleTranscriptKeyDown,\n    onKeyDownCapture: handleTranscriptKeyDownCapture,\n    ref: rootElementRef // \"aria-activedescendant\" will only works with a number of roles and it must be explicitly set.\n    // https://www.w3.org/TR/wai-aria/#aria-activedescendant\n    ,\n    role: \"group\" // For up/down arrow key navigation across activities, this component must be included in the tab sequence.\n    // Otherwise, \"aria-activedescendant\" will not be narrated when the user press up/down arrow keys.\n    // https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_focus_activedescendant\n    ,\n    tabIndex: 0\n  }, /*#__PURE__*/_react.default.createElement(_ScreenReaderText.default, {\n    id: labelId,\n    text: transcriptAriaLabel\n  }), /*#__PURE__*/_react.default.createElement(\"section\", {\n    \"aria-atomic\": false,\n    \"aria-live\": \"polite\",\n    \"aria-relevant\": \"additions\",\n    \"aria-roledescription\": transcriptRoleDescription,\n    role: \"log\"\n  }, renderingElements.map(function (_ref23) {\n    var activity = _ref23.activity,\n        liveRegionKey = _ref23.liveRegionKey;\n    return /*#__PURE__*/_react.default.createElement(_Fade.default, {\n      fadeAfter: internalLiveRegionFadeAfter,\n      key: liveRegionKey\n    }, function () {\n      return /*#__PURE__*/_react.default.createElement(_ScreenReaderActivity.default, {\n        activity: activity\n      });\n    });\n  })), /*#__PURE__*/_react.default.createElement(InternalTranscriptScrollable, {\n    activities: renderingActivities,\n    onFocusActivity: handleFocusActivity,\n    onFocusFiller: handleFocusFiller,\n    terminatorRef: terminatorRef\n  }, renderingElements.map(function (_ref24, index) {\n    var activity = _ref24.activity,\n        callbackRef = _ref24.callbackRef,\n        focusActivity = _ref24.focusActivity,\n        handleFocus = _ref24.handleFocus,\n        handleKeyDown = _ref24.handleKeyDown,\n        handleMouseDownCapture = _ref24.handleMouseDownCapture,\n        hideTimestamp = _ref24.hideTimestamp,\n        key = _ref24.key,\n        renderActivity = _ref24.renderActivity,\n        renderActivityStatus = _ref24.renderActivityStatus,\n        renderAvatar = _ref24.renderAvatar,\n        role = _ref24.role,\n        shouldSpeak = _ref24.shouldSpeak,\n        showCallout = _ref24.showCallout;\n\n    var _ref25 = activityElementsRef.current.find(function (entry) {\n      return entry.activity === activity;\n    }) || {},\n        ariaLabelID = _ref25.ariaLabelID,\n        element = _ref25.element;\n\n    var activeDescendant = focusedActivityKey === key;\n    var isContentInteractive = !!(element ? (0, _tabbableElements.default)(element.querySelector('.webchat__basic-transcript__activity-box')).length : 0);\n    return /*#__PURE__*/_react.default.createElement(\"li\", {\n      \"aria-labelledby\": ariaLabelID,\n      className: (0, _classnames.default)('webchat__basic-transcript__activity', {\n        'webchat__basic-transcript__activity--acknowledged': index <= indexOfLastInteractedActivity,\n        'webchat__basic-transcript__activity--from-bot': role !== 'user',\n        'webchat__basic-transcript__activity--from-user': role === 'user'\n      }) // Set \"id\" for valid for accessibility.\n\n      /* eslint-disable-next-line react/forbid-dom-props */\n      ,\n      id: activeDescendant ? activeDescendantElementId : undefined,\n      key: key,\n      onFocus: handleFocus,\n      onKeyDown: handleKeyDown,\n      onMouseDownCapture: handleMouseDownCapture,\n      ref: callbackRef\n    }, /*#__PURE__*/_react.default.createElement(_ScreenReaderActivity.default, {\n      activity: activity,\n      id: ariaLabelID,\n      renderAttachments: false\n    }, !!isContentInteractive && /*#__PURE__*/_react.default.createElement(\"p\", null, activityInteractiveAlt)), /*#__PURE__*/_react.default.createElement(_FocusRedirector.default, {\n      className: \"webchat__basic-transcript__activity-sentinel\",\n      onFocus: focusActivity,\n      redirectRef: rootElementRef\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      className: \"webchat__basic-transcript__activity-box\"\n    }, renderActivity({\n      hideTimestamp: hideTimestamp,\n      renderActivityStatus: renderActivityStatus,\n      renderAvatar: renderAvatar,\n      showCallout: showCallout\n    })), shouldSpeak && /*#__PURE__*/_react.default.createElement(_Speak.default, {\n      activity: activity\n    }), /*#__PURE__*/_react.default.createElement(_FocusRedirector.default, {\n      className: \"webchat__basic-transcript__activity-sentinel\",\n      onFocus: focusActivity,\n      redirectRef: rootElementRef\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      className: (0, _classnames.default)('webchat__basic-transcript__activity-indicator', {\n        'webchat__basic-transcript__activity-indicator--first': !index,\n        'webchat__basic-transcript__activity-indicator--focus': activeDescendant\n      })\n    }));\n  })), !!renderingElements.length && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_FocusRedirector.default, {\n    className: \"webchat__basic-transcript__sentinel\",\n    onFocus: setBottommostFocusedActivityKeyIfNeeded,\n    redirectRef: rootElementRef\n  }), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__basic-transcript__terminator\",\n    ref: terminatorRef,\n    tabIndex: 0\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__basic-transcript__terminator-body\"\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__basic-transcript__terminator-text\"\n  }, terminatorText)))), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__basic-transcript__focus-indicator\"\n  }));\n};\n\nInternalTranscript.defaultProps = {\n  className: ''\n};\nInternalTranscript.propTypes = {\n  activityElementsRef: _propTypes.default.shape({\n    current: _propTypes.default.array.isRequired\n  }).isRequired,\n  className: _propTypes.default.string\n};\n\nvar InternalScreenReaderTranscript = function InternalScreenReaderTranscript(_ref26) {\n  var renderingElements = _ref26.renderingElements;\n  var localize = useLocalizer();\n\n  var _useStyleOptions3 = useStyleOptions(),\n      _useStyleOptions4 = _slicedToArray(_useStyleOptions3, 1),\n      internalLiveRegionFadeAfter = _useStyleOptions4[0];\n\n  var transcriptRoleDescription = localize('TRANSCRIPT_ARIA_ROLE_ALT');\n  return /*#__PURE__*/_react.default.createElement(\"section\", {\n    \"aria-atomic\": false,\n    \"aria-live\": \"polite\",\n    \"aria-relevant\": \"additions\",\n    \"aria-roledescription\": transcriptRoleDescription,\n    role: \"log\"\n  }, renderingElements.map(function (_ref27) {\n    var activity = _ref27.activity,\n        liveRegionKey = _ref27.liveRegionKey;\n    return /*#__PURE__*/_react.default.createElement(_Fade.default, {\n      fadeAfter: internalLiveRegionFadeAfter,\n      key: liveRegionKey\n    }, function () {\n      return /*#__PURE__*/_react.default.createElement(_ScreenReaderActivity.default, {\n        activity: activity\n      });\n    });\n  }));\n};\n\nInternalScreenReaderTranscript.propTypes = {\n  renderingElements: _propTypes.default.arrayOf(_propTypes.default.shape({\n    activity: _propTypes.default.any,\n    liveRegionKey: _propTypes.default.string\n  })).isRequired\n}; // Separating high-frequency hooks to improve performance.\n\nvar InternalTranscriptScrollable = function InternalTranscriptScrollable(_ref28) {\n  var activities = _ref28.activities,\n      children = _ref28.children,\n      onFocusActivity = _ref28.onFocusActivity,\n      onFocusFiller = _ref28.onFocusFiller,\n      terminatorRef = _ref28.terminatorRef;\n\n  var _useStyleSet3 = (0, _useStyleSet5.default)(),\n      _useStyleSet4 = _slicedToArray(_useStyleSet3, 1),\n      activitiesStyleSet = _useStyleSet4[0].activities;\n\n  var _useStyleOptions5 = useStyleOptions(),\n      _useStyleOptions6 = _slicedToArray(_useStyleOptions5, 1),\n      hideScrollToEndButton = _useStyleOptions6[0].hideScrollToEndButton;\n\n  var _useAnimatingToEnd = (0, _reactScrollToBottom.useAnimatingToEnd)(),\n      _useAnimatingToEnd2 = _slicedToArray(_useAnimatingToEnd, 1),\n      animatingToEnd = _useAnimatingToEnd2[0];\n\n  var _useSticky = (0, _reactScrollToBottom.useSticky)(),\n      _useSticky2 = _slicedToArray(_useSticky, 1),\n      sticky = _useSticky2[0];\n\n  var lastVisibleActivityId = (0, _getActivityUniqueId.default)(activities[activities.length - 1] || {}); // Activity ID of the last visible activity in the list.\n\n  var localize = useLocalizer();\n  var scrollToEndButtonRef = (0, _react.useRef)();\n  var lastReadActivityIdRef = (0, _react.useRef)(lastVisibleActivityId);\n  var transcriptRoleDescription = localize('TRANSCRIPT_ARIA_ROLE_ALT');\n  var allActivitiesRead = lastVisibleActivityId === lastReadActivityIdRef.current;\n  var handleScrollToEndButtonClick = (0, _react.useCallback)(function () {\n    // After the \"New message\" button is clicked, focus on the first unread activity.\n    var index = activities.findIndex(function (_ref29) {\n      var id = _ref29.id;\n      return id === lastReadActivityIdRef.current;\n    });\n\n    if (~index) {\n      var firstUnreadActivity = activities[index + 1];\n\n      if (firstUnreadActivity) {\n        return onFocusActivity((0, _getActivityUniqueId.default)(firstUnreadActivity));\n      }\n    }\n\n    var current = terminatorRef.current;\n    current && current.focus();\n  }, [activities, lastReadActivityIdRef, onFocusActivity, terminatorRef]);\n\n  if (sticky) {\n    // If it is sticky, the user is at the bottom of the transcript, everything is read.\n    // So mark the activity ID as read.\n    lastReadActivityIdRef.current = lastVisibleActivityId;\n  } // Finds where we should render the \"New messages\" button, in index. Returns -1 to hide the button.\n\n\n  var renderSeparatorAfterIndex = (0, _react.useMemo)(function () {\n    // Don't show the button if:\n    // - All activities have been read\n    // - Currently animating towards bottom\n    //   - \"New messages\" button must not flash when: 1. Type \"help\", 2. Scroll to top, 3. Type \"help\" again, 4. Expect the \"New messages\" button not flashy\n    // - Hidden by style options\n    // - It is already at the bottom (sticky)\n    // Any changes to this logic, verify:\n    // - \"New messages\" button should persist while programmatically scrolling to mid-point of the transcript:\n    //   1. Type \"help\"\n    //   2. Type \"proactive\", then immediately scroll to top\n    //      Expect: the \"New messages\" button should appear\n    //   3. Run hook \"useScrollTo({ scrollTop: 500 })\"\n    //      Expect: when the scroll is animating to 500px, the \"New messages\" button should kept on the screen\n    // - \"New messages\" button must not flashy:\n    //   1. Type \"help\"\n    //   2. Scroll to top\n    //      Expect: no \"New messages\" button is shown\n    //   3. Type \"help\" again\n    //      Expect: \"New messages\" button must not flash-appear\n    if (allActivitiesRead || animatingToEnd || hideScrollToEndButton || sticky) {\n      return -1;\n    }\n\n    return activities.findIndex(function (activity) {\n      return (0, _getActivityUniqueId.default)(activity) === lastReadActivityIdRef.current;\n    });\n  }, [activities, allActivitiesRead, animatingToEnd, hideScrollToEndButton, lastReadActivityIdRef, sticky]);\n  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, renderSeparatorAfterIndex !== -1 && /*#__PURE__*/_react.default.createElement(_ScrollToEndButton.default, {\n    onClick: handleScrollToEndButtonClick,\n    ref: scrollToEndButtonRef\n  }), !!_react.default.Children.count(children) && /*#__PURE__*/_react.default.createElement(_FocusRedirector.default, {\n    className: \"webchat__basic-transcript__sentinel\",\n    redirectRef: terminatorRef\n  }), /*#__PURE__*/_react.default.createElement(_reactScrollToBottom.Panel, {\n    className: \"webchat__basic-transcript__scrollable\"\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    \"aria-hidden\": true,\n    className: \"webchat__basic-transcript__filler\",\n    onFocus: onFocusFiller\n  }), /*#__PURE__*/_react.default.createElement(\"ul\", {\n    \"aria-roledescription\": transcriptRoleDescription,\n    className: (0, _classnames.default)(activitiesStyleSet + '', 'webchat__basic-transcript__transcript'),\n    role: \"list\"\n  }, children), /*#__PURE__*/_react.default.createElement(_BasicTypingIndicator.default, null)));\n};\n\nInternalTranscriptScrollable.propTypes = {\n  activities: _propTypes.default.array.isRequired,\n  children: _propTypes.default.any.isRequired,\n  onFocusActivity: _propTypes.default.func.isRequired,\n  onFocusFiller: _propTypes.default.func.isRequired,\n  terminatorRef: _propTypes.default.any.isRequired\n};\n\nvar SetScroller = function SetScroller(_ref30) {\n  var activityElementsRef = _ref30.activityElementsRef,\n      scrollerRef = _ref30.scrollerRef;\n\n  var _useStyleOptions7 = useStyleOptions(),\n      _useStyleOptions8 = _slicedToArray(_useStyleOptions7, 1),\n      _useStyleOptions8$ = _useStyleOptions8[0],\n      autoScrollSnapOnActivity = _useStyleOptions8$.autoScrollSnapOnActivity,\n      autoScrollSnapOnActivityOffset = _useStyleOptions8$.autoScrollSnapOnActivityOffset,\n      autoScrollSnapOnPage = _useStyleOptions8$.autoScrollSnapOnPage,\n      autoScrollSnapOnPageOffset = _useStyleOptions8$.autoScrollSnapOnPageOffset;\n\n  var _useAcknowledgedActiv3 = (0, _useAcknowledgedActivity.default)(),\n      _useAcknowledgedActiv4 = _slicedToArray(_useAcknowledgedActiv3, 1),\n      lastAcknowledgedActivity = _useAcknowledgedActiv4[0];\n\n  var lastAcknowledgedActivityRef = (0, _react.useRef)(lastAcknowledgedActivity);\n  lastAcknowledgedActivityRef.current = lastAcknowledgedActivity;\n  scrollerRef.current = (0, _react.useCallback)(function (_ref31) {\n    var offsetHeight = _ref31.offsetHeight,\n        scrollTop = _ref31.scrollTop;\n    var patchedAutoScrollSnapOnActivity = typeof autoScrollSnapOnActivity === 'number' ? Math.max(0, autoScrollSnapOnActivity) : autoScrollSnapOnActivity ? 1 : 0;\n    var patchedAutoScrollSnapOnPage = typeof autoScrollSnapOnPage === 'number' ? Math.max(0, Math.min(1, autoScrollSnapOnPage)) : autoScrollSnapOnPage ? 1 : 0;\n    var patchedAutoScrollSnapOnActivityOffset = typeof autoScrollSnapOnActivityOffset === 'number' ? autoScrollSnapOnActivityOffset : 0;\n    var patchedAutoScrollSnapOnPageOffset = typeof autoScrollSnapOnPageOffset === 'number' ? autoScrollSnapOnPageOffset : 0;\n\n    if (patchedAutoScrollSnapOnActivity || patchedAutoScrollSnapOnPage) {\n      var _lastAcknowledgedActivity = lastAcknowledgedActivityRef.current;\n      var values = [];\n\n      if (patchedAutoScrollSnapOnActivity) {\n        var _ref32 = activityElementsRef.current[activityElementsRef.current.findIndex(function (_ref33) {\n          var activity = _ref33.activity;\n          return activity === _lastAcknowledgedActivity;\n        }) + patchedAutoScrollSnapOnActivity] || {},\n            nthUnacknowledgedActivityElement = _ref32.element;\n\n        if (nthUnacknowledgedActivityElement) {\n          values.push(nthUnacknowledgedActivityElement.offsetTop + nthUnacknowledgedActivityElement.offsetHeight - offsetHeight - scrollTop + patchedAutoScrollSnapOnActivityOffset);\n        }\n      }\n\n      if (patchedAutoScrollSnapOnPage) {\n        var _ref34 = activityElementsRef.current[activityElementsRef.current.findIndex(function (_ref35) {\n          var activity = _ref35.activity;\n          return activity === _lastAcknowledgedActivity;\n        }) + 1] || {},\n            firstUnacknowledgedActivityElement = _ref34.element;\n\n        if (firstUnacknowledgedActivityElement) {\n          values.push(firstUnacknowledgedActivityElement.offsetTop - scrollTop - offsetHeight * (1 - patchedAutoScrollSnapOnPage) + patchedAutoScrollSnapOnPageOffset);\n        }\n      }\n\n      return values.reduce(function (minValue, value) {\n        return Math.min(minValue, value);\n      }, Infinity);\n    }\n\n    return Infinity;\n  }, [activityElementsRef, autoScrollSnapOnActivity, autoScrollSnapOnActivityOffset, autoScrollSnapOnPage, autoScrollSnapOnPageOffset, lastAcknowledgedActivityRef]);\n  return false;\n};\n\nvar BasicTranscript = function BasicTranscript(_ref36) {\n  var className = _ref36.className;\n  var activityElementsRef = (0, _react.useRef)([]);\n  var scrollerRef = (0, _react.useRef)(function () {\n    return Infinity;\n  });\n  var scroller = (0, _react.useCallback)(function () {\n    return scrollerRef.current.apply(scrollerRef, arguments);\n  }, [scrollerRef]);\n  return /*#__PURE__*/_react.default.createElement(_reactScrollToBottom.Composer, {\n    scroller: scroller\n  }, /*#__PURE__*/_react.default.createElement(SetScroller, {\n    activityElementsRef: activityElementsRef,\n    scrollerRef: scrollerRef\n  }), /*#__PURE__*/_react.default.createElement(InternalTranscript, {\n    activityElementsRef: activityElementsRef,\n    className: className\n  }));\n};\n\nBasicTranscript.defaultProps = {\n  className: ''\n};\nBasicTranscript.propTypes = {\n  className: _propTypes.default.string\n};\nvar _default = BasicTranscript;\nexports.default = _default;","map":{"version":3,"sources":["../src/BasicTranscript.js"],"names":["useActivities","useCreateActivityRenderer","useCreateActivityStatusRenderer","useCreateAvatarRenderer","useDirection","useGroupActivities","useLocalizer","useStyleOptions","hooks","ROOT_STYLE","display","flexDirection","overflow","position","flex","overflowX","WebkitOverflowScrolling","listStyleType","bin","InternalTranscript","activityElementsRef","className","basicTranscriptStyleSet","bubbleFromUserNubOffset","bubbleNubOffset","groupTimestamp","internalLiveRegionFadeAfter","showAvatarInGroup","focusedActivityKey","setFocusedActivityKey","activities","direction","createActivityRenderer","createActivityStatusRenderer","createAvatarRenderer","focus","groupActivities","localize","rootClassName","rootElementRef","terminatorRef","activityInteractiveAlt","terminatorText","transcriptAriaLabel","transcriptRoleDescription","hideAllTimestamps","createActivityRendererWithLiteralArgs","activity","nextVisibleActivity","activitiesWithRenderer","index","renderActivity","createActivityRendererWithLiteralArgsMemoized","visibleActivities","activitiesGroupBySender","activitiesGroupByStatus","validateAllActivitiesTagged","console","activityTree","visibleActivitiesPendingGrouping","senderTree","activitiesWithSameSender","activitiesWithSameStatus","activitiesWithSameSenderAndStatus","removeInline","renderingElements","topSideBotNub","topSideUserNub","firstActivity","renderAvatar","firstInSenderGroup","lastInSenderGroup","indexWithinSenderGroup","renderActivityStatus","firstInSenderAndStatusGroup","lastInSenderAndStatusGroup","indexWithinSenderAndStatusGroup","entry","key","messageBackDisplayText","role","text","topSideNub","showCallout","focusActivity","rootElement","callbackRef","activityID","handleFocus","handleKeyDown","event","current","handleMouseDownCapture","target","tabIndex","hideTimestamp","liveRegionKey","shouldSpeak","activityElements","id","elementId","existingEntry","ariaLabelID","element","focused","lastElement","renderingActivities","scrollToBottomScrollTo","scrollToBottomScrollToEnd","scrollTo","behavior","scrollTop","activityElement","scrollableElement","activityElementHeight","activityElementY","scrollableHeight","activityElementOffsetTop","Math","scrollRelative","displacement","scrollable","nextScrollTop","dispatchScrollPosition","patchedDispatchScrollPosition","offsetHeight","y","lastInteractedActivity","indexOfLastInteractedActivity","activeDescendantElementId","scrollActiveDescendantIntoView","activeDescendant","document","block","scrollTopAtTopSide","scrollTopAtBottomSide","handleTranscriptFocus","currentTarget","focusRelativeActivity","isNaN","nextIndex","nextFocusedActivity","handleTranscriptKeyDown","fromEndOfTranscriptIndicator","fromTranscript","handled","focusedActivityEntry","focusedActivityElement","firstTabbableElement","labelId","setBottommostFocusedActivityKeyIfNeeded","lastActivityKey","handleTranscriptKeyDownCapture","altKey","ctrlKey","metaKey","focusTranscriptCallback","handleFocusActivity","dispatchTranscriptFocus","focusedActivity","handleFocusFiller","isContentInteractive","PropTypes","isRequired","string","InternalScreenReaderTranscript","InternalTranscriptScrollable","children","onFocusActivity","onFocusFiller","activitiesStyleSet","hideScrollToEndButton","animatingToEnd","sticky","lastVisibleActivityId","scrollToEndButtonRef","lastReadActivityIdRef","allActivitiesRead","handleScrollToEndButtonClick","firstUnreadActivity","renderSeparatorAfterIndex","React","SetScroller","scrollerRef","autoScrollSnapOnActivity","autoScrollSnapOnActivityOffset","autoScrollSnapOnPage","autoScrollSnapOnPageOffset","lastAcknowledgedActivity","lastAcknowledgedActivityRef","patchedAutoScrollSnapOnActivity","patchedAutoScrollSnapOnPage","patchedAutoScrollSnapOnActivityOffset","patchedAutoScrollSnapOnPageOffset","values","nthUnacknowledgedActivityElement","firstUnacknowledgedActivityElement","BasicTranscript","scroller"],"mappings":"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","sourcesContent":["/* eslint no-magic-numbers: [\"error\", { \"ignore\": [-1, 0, 1, 2, 5, 36] }] */\n\nimport { hooks } from 'botframework-webchat-api';\nimport {\n  Composer as ReactScrollToBottomComposer,\n  Panel as ReactScrollToBottomPanel,\n  useAnimatingToEnd,\n  useObserveScrollPosition,\n  useScrollTo,\n  useScrollToEnd,\n  useSticky\n} from 'react-scroll-to-bottom';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport random from 'math-random';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport BasicTypingIndicator from './BasicTypingIndicator';\nimport Fade from './Utils/Fade';\nimport FocusRedirector from './Utils/FocusRedirector';\nimport getActivityUniqueId from './Utils/getActivityUniqueId';\nimport getTabIndex from './Utils/TypeFocusSink/getTabIndex';\nimport inputtableKey from './Utils/TypeFocusSink/inputtableKey';\nimport intersectionOf from './Utils/intersectionOf';\nimport isZeroOrPositive from './Utils/isZeroOrPositive';\nimport removeInline from './Utils/removeInline';\nimport ScreenReaderActivity from './ScreenReaderActivity';\nimport ScreenReaderText from './ScreenReaderText';\nimport ScrollToEndButton from './Activity/ScrollToEndButton';\nimport SpeakActivity from './Activity/Speak';\nimport tabbableElements from './Utils/tabbableElements';\nimport useAcknowledgedActivity from './hooks/internal/useAcknowledgedActivity';\nimport useDispatchScrollPosition from './hooks/internal/useDispatchScrollPosition';\nimport useDispatchTranscriptFocus from './hooks/internal/useDispatchTranscriptFocus';\nimport useFocus from './hooks/useFocus';\nimport useMemoize from './hooks/internal/useMemoize';\nimport useRegisterFocusTranscript from './hooks/internal/useRegisterFocusTranscript';\nimport useRegisterScrollRelative from './hooks/internal/useRegisterScrollRelative';\nimport useRegisterScrollTo from './hooks/internal/useRegisterScrollTo';\nimport useRegisterScrollToEnd from './hooks/internal/useRegisterScrollToEnd';\nimport useStyleSet from './hooks/useStyleSet';\nimport useStyleToEmotionObject from './hooks/internal/useStyleToEmotionObject';\nimport useUniqueId from './hooks/internal/useUniqueId';\n\nconst {\n  useActivities,\n  useCreateActivityRenderer,\n  useCreateActivityStatusRenderer,\n  useCreateAvatarRenderer,\n  useDirection,\n  useGroupActivities,\n  useLocalizer,\n  useStyleOptions\n} = hooks;\n\nconst ROOT_STYLE = {\n  '&.webchat__basic-transcript': {\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden',\n    // Make sure to set \"position: relative\" here to form another stacking context for the scroll-to-end button.\n    // Stacking context help isolating elements that use \"z-index\" from global pollution.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n    position: 'relative',\n\n    '& .webchat__basic-transcript__filler': {\n      flex: 1\n    },\n\n    '& .webchat__basic-transcript__scrollable': {\n      display: 'flex',\n      flexDirection: 'column',\n      overflowX: 'hidden',\n      WebkitOverflowScrolling: 'touch'\n    },\n\n    '& .webchat__basic-transcript__transcript': {\n      listStyleType: 'none'\n    }\n  }\n};\n\nfunction validateAllActivitiesTagged(activities, bins) {\n  return activities.every(activity => bins.some(bin => bin.includes(activity)));\n}\n\nconst InternalTranscript = ({ activityElementsRef, className }) => {\n  const [{ basicTranscript: basicTranscriptStyleSet }] = useStyleSet();\n  const [\n    { bubbleFromUserNubOffset, bubbleNubOffset, groupTimestamp, internalLiveRegionFadeAfter, showAvatarInGroup }\n  ] = useStyleOptions();\n  const [focusedActivityKey, setFocusedActivityKey] = useState();\n  const [activities] = useActivities();\n  const [direction] = useDirection();\n  const createActivityRenderer = useCreateActivityRenderer();\n  const createActivityStatusRenderer = useCreateActivityStatusRenderer();\n  const createAvatarRenderer = useCreateAvatarRenderer();\n  const focus = useFocus();\n  const groupActivities = useGroupActivities();\n  const localize = useLocalizer();\n  const rootClassName = useStyleToEmotionObject()(ROOT_STYLE) + '';\n  const rootElementRef = useRef();\n  const terminatorRef = useRef();\n\n  const activityInteractiveAlt = localize('ACTIVITY_INTERACTIVE_LABEL_ALT');\n  const terminatorText = localize('TRANSCRIPT_TERMINATOR_TEXT');\n  const transcriptAriaLabel = localize('TRANSCRIPT_ARIA_LABEL_ALT');\n  const transcriptRoleDescription = localize('TRANSCRIPT_ARIA_ROLE_ALT');\n\n  const hideAllTimestamps = groupTimestamp === false;\n\n  // Gets renderer for every activity.\n  // Activities that are not visible will return a falsy renderer.\n\n  // Converted from createActivityRenderer({ activity, nextVisibleActivity }) to createActivityRenderer(activity, nextVisibleActivity).\n  // This is for the memoization function to cache the arguments. Memoizer can only cache literal arguments.\n  const createActivityRendererWithLiteralArgs = useCallback(\n    (activity, nextVisibleActivity) => createActivityRenderer({ activity, nextVisibleActivity }),\n    [createActivityRenderer]\n  );\n\n  // Create a memoized context of the createActivityRenderer function.\n  const activitiesWithRenderer = useMemoize(\n    createActivityRendererWithLiteralArgs,\n    createActivityRendererWithLiteralArgsMemoized => {\n      // All calls to createActivityRendererWithLiteralArgsMemoized() in this function will be memoized (LRU = 1).\n      // In the next render cycle, calls to createActivityRendererWithLiteralArgsMemoized() might return the memoized result instead.\n      // This is an improvement to React useMemo(), because it only allows 1 memoization.\n      // useMemoize() allows any number of memoization.\n\n      const activitiesWithRenderer = [];\n      let nextVisibleActivity;\n\n      for (let index = activities.length - 1; index >= 0; index--) {\n        const activity = activities[index];\n        const renderActivity = createActivityRendererWithLiteralArgsMemoized(activity, nextVisibleActivity);\n\n        if (renderActivity) {\n          activitiesWithRenderer.splice(0, 0, {\n            activity,\n            renderActivity\n          });\n\n          nextVisibleActivity = activity;\n        }\n      }\n\n      return activitiesWithRenderer;\n    },\n    [activities]\n  );\n\n  const visibleActivities = useMemo(() => activitiesWithRenderer.map(({ activity }) => activity), [\n    activitiesWithRenderer\n  ]);\n\n  // Tag activities based on types.\n  // The default implementation tag into 2 types: sender and status.\n\n  const { activitiesGroupBySender, activitiesGroupByStatus } = useMemo(() => {\n    const { sender: activitiesGroupBySender, status: activitiesGroupByStatus } = groupActivities({\n      activities: visibleActivities\n    });\n\n    if (!validateAllActivitiesTagged(visibleActivities, activitiesGroupBySender)) {\n      console.warn(\n        'botframework-webchat: Not every activities are grouped in the \"sender\" property. Please fix \"groupActivitiesMiddleware\" and group every activities.'\n      );\n    }\n\n    if (!validateAllActivitiesTagged(visibleActivities, activitiesGroupByStatus)) {\n      console.warn(\n        'botframework-webchat: Not every activities are grouped in the \"status\" property. Please fix \"groupActivitiesMiddleware\" and group every activities.'\n      );\n    }\n\n    return {\n      activitiesGroupBySender,\n      activitiesGroupByStatus\n    };\n  }, [groupActivities, visibleActivities]);\n\n  // Create a tree of activities with 2 dimensions: sender, followed by status.\n\n  const activityTree = useMemo(() => {\n    const visibleActivitiesPendingGrouping = [...visibleActivities];\n    const activityTree = [];\n\n    while (visibleActivitiesPendingGrouping.length) {\n      const [activity] = visibleActivitiesPendingGrouping;\n      const senderTree = [];\n      const activitiesWithSameSender = activitiesGroupBySender.find(activities => activities.includes(activity));\n\n      activityTree.push(senderTree);\n\n      activitiesWithSameSender.forEach(activity => {\n        const activitiesWithSameStatus = activitiesGroupByStatus.find(activities => activities.includes(activity));\n\n        const activitiesWithSameSenderAndStatus = intersectionOf(\n          visibleActivitiesPendingGrouping,\n          activitiesWithSameSender,\n          activitiesWithSameStatus\n        );\n\n        if (activitiesWithSameSenderAndStatus.length) {\n          senderTree.push(activitiesWithSameSenderAndStatus);\n          removeInline(visibleActivitiesPendingGrouping, ...activitiesWithSameSenderAndStatus);\n        }\n      });\n    }\n\n    // Assertion: All activities in visibleActivities, must be assigned to the activityTree\n    if (\n      !visibleActivities.every(activity =>\n        activityTree.some(activitiesWithSameSender =>\n          activitiesWithSameSender.some(activitiesWithSameSenderAndStatus =>\n            activitiesWithSameSenderAndStatus.includes(activity)\n          )\n        )\n      )\n    ) {\n      console.warn('botframework-webchat internal: Not all visible activities are grouped in the activityTree.', {\n        visibleActivities,\n        activityTree\n      });\n    }\n\n    return activityTree;\n  }, [activitiesGroupBySender, activitiesGroupByStatus, visibleActivities]);\n\n  // Flatten the tree back into an array with information related to rendering.\n\n  const renderingElements = useMemo(() => {\n    const renderingElements = [];\n    const topSideBotNub = isZeroOrPositive(bubbleNubOffset);\n    const topSideUserNub = isZeroOrPositive(bubbleFromUserNubOffset);\n\n    activityTree.forEach(activitiesWithSameSender => {\n      const [[firstActivity]] = activitiesWithSameSender;\n      const renderAvatar = createAvatarRenderer({ activity: firstActivity });\n\n      activitiesWithSameSender.forEach((activitiesWithSameSenderAndStatus, indexWithinSenderGroup) => {\n        const firstInSenderGroup = !indexWithinSenderGroup;\n        const lastInSenderGroup = indexWithinSenderGroup === activitiesWithSameSender.length - 1;\n\n        activitiesWithSameSenderAndStatus.forEach((activity, indexWithinSenderAndStatusGroup) => {\n          // We only show the timestamp at the end of the sender group. But we always show the \"Send failed, retry\" prompt.\n          const renderActivityStatus = createActivityStatusRenderer({\n            activity\n          });\n\n          const firstInSenderAndStatusGroup = !indexWithinSenderAndStatusGroup;\n          const lastInSenderAndStatusGroup =\n            indexWithinSenderAndStatusGroup === activitiesWithSameSenderAndStatus.length - 1;\n\n          const { renderActivity } = activitiesWithRenderer.find(entry => entry.activity === activity);\n          const key = getActivityUniqueId(activity) || renderingElements.length;\n          const {\n            channelData: { messageBack: { displayText: messageBackDisplayText } = {} } = {},\n            from: { role },\n            text\n          } = activity;\n\n          const topSideNub = role === 'user' ? topSideUserNub : topSideBotNub;\n\n          let showCallout;\n\n          // Depending on the \"showAvatarInGroup\" setting, the avatar will render in different positions.\n          if (showAvatarInGroup === 'sender') {\n            if (topSideNub) {\n              showCallout = firstInSenderGroup && firstInSenderAndStatusGroup;\n            } else {\n              showCallout = lastInSenderGroup && lastInSenderAndStatusGroup;\n            }\n          } else if (showAvatarInGroup === 'status') {\n            if (topSideNub) {\n              showCallout = firstInSenderAndStatusGroup;\n            } else {\n              showCallout = lastInSenderAndStatusGroup;\n            }\n          } else {\n            showCallout = true;\n          }\n\n          const focusActivity = () => {\n            setFocusedActivityKey(getActivityUniqueId(activity));\n\n            // IE11 need to manually focus on the transcript.\n            const { current: rootElement } = rootElementRef;\n\n            rootElement && rootElement.focus();\n          };\n\n          renderingElements.push({\n            activity,\n\n            // After the element is mounted, set it to activityElementsRef.\n            callbackRef: activityElement => {\n              const entry = activityElementsRef.current.find(({ activityID }) => activityID === activity.id);\n\n              if (entry) {\n                entry.element = activityElement;\n              }\n            },\n\n            // Calling this function will put the focus on the transcript and the activity.\n            focusActivity,\n\n            // When a child of the activity receives focus, notify the transcript to set the aria-activedescendant to this activity.\n            handleFocus: () => {\n              setFocusedActivityKey(getActivityUniqueId(activity));\n            },\n\n            handleKeyDown: event => {\n              if (event.key === 'Escape') {\n                event.preventDefault();\n                event.stopPropagation();\n\n                setFocusedActivityKey(getActivityUniqueId(activity));\n\n                const { current } = rootElementRef;\n\n                current && current.focus();\n              }\n            },\n\n            // For accessibility: when the user press up/down arrow keys, we put a visual focus indicator around the focused activity.\n            // We should do the same for mouse, that is why we have the click handler here.\n            // We are doing it in event capture phase to prevent other components from stopping event propagation to us.\n            handleMouseDownCapture: ({ target }) => {\n              const tabIndex = getTabIndex(target);\n\n              if (typeof tabIndex !== 'number' || tabIndex < 0 || target.getAttribute('aria-disabled') === 'true') {\n                focusActivity();\n              }\n            },\n\n            // \"hideTimestamp\" is a render-time parameter for renderActivityStatus().\n            // If true, it will hide the timestamp, but it will continue to show the\n            // retry prompt. And show the screen reader version of the timestamp.\n            hideTimestamp:\n              hideAllTimestamps || indexWithinSenderAndStatusGroup !== activitiesWithSameSenderAndStatus.length - 1,\n            key,\n\n            // When \"liveRegionKey\" changes, it will show up in the live region momentarily.\n            liveRegionKey: key + '|' + (messageBackDisplayText || text),\n            renderActivity,\n            renderActivityStatus,\n            renderAvatar,\n            role,\n\n            // TODO: [P2] #2858 We should use core/definitions/speakingActivity for this predicate instead\n            shouldSpeak: activity.channelData && activity.channelData.speak,\n            showCallout\n          });\n        });\n      });\n    });\n\n    const { current: activityElements } = activityElementsRef;\n\n    // Update activityElementRef with new sets of activity, while retaining the existing referencing element if exists.\n    activityElementsRef.current = renderingElements.map(({ activity, activity: { id }, elementId, key }) => {\n      const existingEntry = activityElements.find(entry => entry.key === key);\n\n      return {\n        activity,\n        activityID: id,\n        ariaLabelID: existingEntry\n          ? existingEntry.ariaLabelID\n          : `webchat__basic-transcript__activity-label-${random().toString(36).substr(2, 5)}`,\n        element: existingEntry && existingEntry.element,\n        elementId,\n        key\n      };\n    });\n\n    // There must be one focused (a.k.a. aria-activedescendant) designated. We default it to the last one.\n    if (!renderingElements.find(({ focused }) => focused)) {\n      const lastElement = renderingElements[renderingElements.length - 1];\n\n      if (lastElement) {\n        lastElement.focused = true;\n      }\n    }\n\n    return renderingElements;\n  }, [\n    activitiesWithRenderer,\n    activityElementsRef,\n    activityTree,\n    bubbleFromUserNubOffset,\n    bubbleNubOffset,\n    createActivityStatusRenderer,\n    createAvatarRenderer,\n    hideAllTimestamps,\n    rootElementRef,\n    showAvatarInGroup\n  ]);\n\n  const renderingActivities = useMemo(() => renderingElements.map(({ activity }) => activity), [renderingElements]);\n\n  const scrollToBottomScrollTo = useScrollTo();\n  const scrollToBottomScrollToEnd = useScrollToEnd();\n\n  const scrollTo = useCallback(\n    (position, { behavior = 'auto' } = {}) => {\n      if (!position) {\n        throw new Error(\n          'botframework-webchat: First argument passed to \"useScrollTo\" must be a ScrollPosition object.'\n        );\n      }\n\n      const { activityID, scrollTop } = position;\n\n      if (typeof scrollTop !== 'undefined') {\n        scrollToBottomScrollTo(scrollTop, { behavior });\n      } else if (typeof activityID !== 'undefined') {\n        const { current: rootElement } = rootElementRef;\n        const { element: activityElement } =\n          activityElementsRef.current.find(entry => entry.activityID === activityID) || {};\n\n        const scrollableElement = rootElement.querySelector('.webchat__basic-transcript__scrollable');\n\n        if (scrollableElement && activityElement) {\n          const [{ height: activityElementHeight, y: activityElementY }] = activityElement.getClientRects();\n          const [{ height: scrollableHeight }] = scrollableElement.getClientRects();\n\n          const activityElementOffsetTop = activityElementY + scrollableElement.scrollTop;\n\n          const scrollTop = Math.min(\n            activityElementOffsetTop,\n            activityElementOffsetTop - scrollableHeight + activityElementHeight\n          );\n\n          scrollToBottomScrollTo(scrollTop, { behavior });\n        }\n      }\n    },\n    [activityElementsRef, rootElementRef, scrollToBottomScrollTo]\n  );\n\n  const scrollRelative = useCallback(\n    (direction, { displacement } = {}) => {\n      const { current: rootElement } = rootElementRef;\n\n      if (!rootElement) {\n        return;\n      }\n\n      const scrollable = rootElement.querySelector('.webchat__basic-transcript__scrollable');\n      let nextScrollTop;\n\n      if (typeof displacement === 'number') {\n        nextScrollTop = scrollable.scrollTop + (direction === 'down' ? 1 : -1) * displacement;\n      } else {\n        nextScrollTop = scrollable.scrollTop + (direction === 'down' ? 1 : -1) * scrollable.offsetHeight;\n      }\n\n      scrollTo(\n        {\n          scrollTop: Math.max(0, Math.min(scrollable.scrollHeight - scrollable.offsetHeight, nextScrollTop))\n        },\n        { behavior: 'smooth' }\n      );\n    },\n    [rootElementRef, scrollTo]\n  );\n\n  // Since there could be multiple instances of <BasicTranscript> inside the <Composer>, when the developer calls `scrollXXX`, we need to call it on all instances.\n  // We call `useRegisterScrollXXX` to register a callback function, the `useScrollXXX` will multiplex the call into each instance of <BasicTranscript>.\n  useRegisterScrollTo(scrollTo);\n  useRegisterScrollToEnd(scrollToBottomScrollToEnd);\n  useRegisterScrollRelative(scrollRelative);\n\n  const dispatchScrollPosition = useDispatchScrollPosition();\n  const patchedDispatchScrollPosition = useMemo(() => {\n    if (!dispatchScrollPosition) {\n      return;\n    }\n\n    return ({ scrollTop }) => {\n      const { current: rootElement } = rootElementRef;\n\n      if (!rootElement) {\n        return;\n      }\n\n      const scrollableElement = rootElement.querySelector('.webchat__basic-transcript__scrollable');\n\n      const [{ height: offsetHeight } = {}] = scrollableElement.getClientRects();\n\n      // Find the activity just above scroll view bottom.\n      // If the scroll view is already on top, get the first activity.\n      const entry = scrollableElement.scrollTop\n        ? [...activityElementsRef.current].reverse().find(({ element }) => {\n            if (!element) {\n              return false;\n            }\n\n            const [{ y } = {}] = element.getClientRects();\n\n            return y < offsetHeight;\n          })\n        : activityElementsRef.current[0];\n\n      const { activityID } = entry || {};\n\n      dispatchScrollPosition({ ...(activityID ? { activityID } : {}), scrollTop });\n    };\n  }, [activityElementsRef, dispatchScrollPosition, rootElementRef]);\n\n  useObserveScrollPosition(patchedDispatchScrollPosition);\n\n  const [lastInteractedActivity] = useAcknowledgedActivity();\n\n  const indexOfLastInteractedActivity = activities.indexOf(lastInteractedActivity);\n\n  // Create a new ID for aria-activedescendant every time the active descendant change.\n  // In our design, the transcript will only have 1 focused activity and it has an ID. Other blurred activities will not have ID assigned.\n  // This help with performance.\n  // But browser usually do noop if the value of aria-activedescendant doesn't change.\n  // That means, if we assign the same ID to another element, browser will do noop.\n  // We need to generate a new ID so the browser see there is a change in aria-activedescendant value and perform accordingly.\n  const activeDescendantElementId = useMemo(\n    () => focusedActivityKey && `webchat__basic-transcript__active-descendant-${random().toString(36).substr(2, 5)}`,\n    [focusedActivityKey]\n  );\n\n  const scrollActiveDescendantIntoView = useCallback(() => {\n    const activeDescendant = activeDescendantElementId && document.getElementById(activeDescendantElementId);\n\n    // Don't scroll active descendant into view if the focus is already inside it.\n    // Otherwise, given the focus is on the send box, clicking on any <input> inside the Adaptive Cards may cause the view to move.\n    // This UX is not desirable because click should not cause scroll.\n    if (activeDescendant && !activeDescendant.contains(document.activeElement)) {\n      // Checks if scrollIntoView support options or not.\n      // - https://github.com/Modernizr/Modernizr/issues/1568#issuecomment-419457972\n      // - https://stackoverflow.com/questions/46919627/is-it-possible-to-test-for-scrollintoview-browser-compatibility\n      if ('scrollBehavior' in document.documentElement.style) {\n        activeDescendant.scrollIntoView({ block: 'nearest' });\n      } else {\n        // This is for browser that does not support options passed to scrollIntoView(), possibly IE11.\n        const scrollableElement = rootElementRef.current.querySelector('.webchat__basic-transcript__scrollable');\n        const scrollTopAtTopSide = activeDescendant.offsetTop;\n        const scrollTopAtBottomSide = activeDescendant.offsetTop + activeDescendant.offsetHeight;\n\n        if (scrollTopAtTopSide < scrollableElement.scrollTop) {\n          scrollableElement.scrollTop = scrollTopAtTopSide;\n        } else if (scrollTopAtBottomSide > scrollableElement.scrollTop + scrollableElement.offsetHeight) {\n          scrollableElement.scrollTop = scrollTopAtBottomSide - scrollableElement.offsetHeight;\n        }\n      }\n    }\n  }, [activeDescendantElementId, rootElementRef]);\n\n  const handleTranscriptFocus = useCallback(\n    event => {\n      const { currentTarget, target } = event;\n\n      // When focus is placed on the transcript, scroll active descendant into the view.\n      currentTarget === target && scrollActiveDescendantIntoView();\n    },\n    [scrollActiveDescendantIntoView]\n  );\n\n  // After new aria-activedescendant is assigned, we will need to scroll it into view.\n  // User agent will scroll automatically for focusing element, but not for aria-activedescendant.\n  // We need to do the scrolling manually.\n  useEffect(() => scrollActiveDescendantIntoView(), [scrollActiveDescendantIntoView]);\n\n  // If any activities has changed, reset the active descendant.\n  useEffect(() => setFocusedActivityKey(undefined), [activities, setFocusedActivityKey]);\n\n  const focusRelativeActivity = useCallback(\n    delta => {\n      if (isNaN(delta) || !renderingElements.length) {\n        return setFocusedActivityKey(undefined);\n      }\n\n      const index = renderingElements.findIndex(({ key }) => key === focusedActivityKey);\n      const nextIndex = ~index\n        ? Math.max(0, Math.min(renderingElements.length - 1, index + delta))\n        : renderingElements.length - 1;\n      const nextFocusedActivity = renderingElements[nextIndex];\n\n      setFocusedActivityKey(nextFocusedActivity.key);\n      rootElementRef.current && rootElementRef.current.focus();\n    },\n    [focusedActivityKey, renderingElements, rootElementRef, setFocusedActivityKey]\n  );\n\n  const handleTranscriptKeyDown = useCallback(\n    event => {\n      const { target } = event;\n\n      const fromEndOfTranscriptIndicator = target === terminatorRef.current;\n      const fromTranscript = target === event.currentTarget;\n\n      if (!fromEndOfTranscriptIndicator && !fromTranscript) {\n        return;\n      }\n\n      let handled = true;\n\n      switch (event.key) {\n        case 'ArrowDown':\n          focusRelativeActivity(fromEndOfTranscriptIndicator ? 0 : 1);\n          break;\n\n        case 'ArrowUp':\n          focusRelativeActivity(fromEndOfTranscriptIndicator ? 0 : -1);\n          break;\n\n        case 'End':\n          focusRelativeActivity(Infinity);\n          break;\n\n        case 'Enter':\n          if (!fromEndOfTranscriptIndicator) {\n            const focusedActivityEntry = renderingElements.find(({ key }) => key === focusedActivityKey);\n\n            if (focusedActivityEntry) {\n              const { element: focusedActivityElement } =\n                activityElementsRef.current.find(({ activity }) => activity === focusedActivityEntry.activity) || {};\n\n              if (focusedActivityElement) {\n                const [firstTabbableElement] = tabbableElements(focusedActivityElement).filter(\n                  ({ className }) => className !== 'webchat__basic-transcript__activity-sentinel'\n                );\n\n                firstTabbableElement && firstTabbableElement.focus();\n              }\n            }\n          }\n\n          break;\n\n        case 'Escape':\n          focus('sendBoxWithoutKeyboard');\n          break;\n\n        case 'Home':\n          focusRelativeActivity(-Infinity);\n          break;\n\n        default:\n          handled = false;\n          break;\n      }\n\n      if (handled) {\n        event.preventDefault();\n\n        // If a custom HTML control wants to handle up/down arrow, we will prevent them from listening to this event to prevent bugs due to handling arrow keys twice.\n        event.stopPropagation();\n      }\n    },\n    [focusedActivityKey, activityElementsRef, focusRelativeActivity, focus, terminatorRef, renderingElements]\n  );\n\n  const labelId = useUniqueId('webchat__basic-transcript__label');\n\n  // If SHIFT-TAB from \"End of transcript\" indicator, if focusedActivityKey is not set (or no longer exists), set it the the bottommost activity.\n  const setBottommostFocusedActivityKeyIfNeeded = useCallback(() => {\n    if (!~renderingElements.findIndex(({ key }) => key === focusedActivityKey)) {\n      const { key: lastActivityKey } = renderingElements[renderingElements.length - 1] || {};\n\n      setFocusedActivityKey(lastActivityKey);\n    }\n  }, [focusedActivityKey, renderingElements, setFocusedActivityKey]);\n\n  const handleTranscriptKeyDownCapture = useCallback(\n    event => {\n      const { altKey, ctrlKey, key, metaKey, target } = event;\n\n      if (altKey || (ctrlKey && key !== 'v') || metaKey || (!inputtableKey(key) && key !== 'Backspace')) {\n        // Ignore if one of the utility key (except SHIFT) is pressed\n        // E.g. CTRL-C on a link in one of the message should not jump to chat box\n        // E.g. \"A\" or \"Backspace\" should jump to chat box\n        return;\n      }\n\n      // Send keystrokes to send box if we are focusing on the transcript or terminator.\n      if (target === event.currentTarget || target === terminatorRef.current) {\n        event.stopPropagation();\n\n        focus('sendBox');\n      }\n    },\n    [focus]\n  );\n\n  const focusTranscriptCallback = useCallback(() => rootElementRef.current && rootElementRef.current.focus(), [\n    rootElementRef\n  ]);\n\n  useRegisterFocusTranscript(focusTranscriptCallback);\n\n  const handleFocusActivity = useCallback(\n    key => {\n      setFocusedActivityKey(key);\n      rootElementRef.current && rootElementRef.current.focus();\n    },\n    [setFocusedActivityKey]\n  );\n\n  // When the focusing activity has changed, dispatch an event to observers of \"useObserveTranscriptFocus\".\n  const dispatchTranscriptFocus = useDispatchTranscriptFocus();\n  const focusedActivity = useMemo(() => {\n    const { activity } = renderingElements.find(({ key }) => key === focusedActivityKey) || {};\n\n    return activity;\n  }, [focusedActivityKey, renderingElements]);\n\n  useMemo(() => dispatchTranscriptFocus && dispatchTranscriptFocus({ activity: focusedActivity }), [\n    dispatchTranscriptFocus,\n    focusedActivity\n  ]);\n\n  // This is required by IE11.\n  // When the user clicks on and empty space (a.k.a. filler) in an empty transcript, IE11 says the focus is on the <div className=\"filler\">,\n  // despite the fact there are no \"tabIndex\" attributes set on the filler.\n  // We need to artificially send the focus back to the transcript.\n  const handleFocusFiller = useCallback(() => {\n    const { current } = rootElementRef;\n\n    current && current.focus();\n  }, [rootElementRef]);\n\n  return (\n    <div\n      aria-activedescendant={focusedActivityKey ? activeDescendantElementId : undefined}\n      aria-labelledby={labelId}\n      className={classNames(\n        'webchat__basic-transcript',\n        basicTranscriptStyleSet + '',\n        rootClassName,\n        (className || '') + ''\n      )}\n      dir={direction}\n      onFocus={handleTranscriptFocus}\n      onKeyDown={handleTranscriptKeyDown}\n      onKeyDownCapture={handleTranscriptKeyDownCapture}\n      ref={rootElementRef}\n      // \"aria-activedescendant\" will only works with a number of roles and it must be explicitly set.\n      // https://www.w3.org/TR/wai-aria/#aria-activedescendant\n      role=\"group\"\n      // For up/down arrow key navigation across activities, this component must be included in the tab sequence.\n      // Otherwise, \"aria-activedescendant\" will not be narrated when the user press up/down arrow keys.\n      // https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_focus_activedescendant\n      tabIndex={0}\n    >\n      <ScreenReaderText id={labelId} text={transcriptAriaLabel} />\n      {/* This <section> is for live region only. Content is made invisible through CSS. */}\n      <section\n        aria-atomic={false}\n        aria-live=\"polite\"\n        aria-relevant=\"additions\"\n        aria-roledescription={transcriptRoleDescription}\n        role=\"log\"\n      >\n        {renderingElements.map(({ activity, liveRegionKey }) => (\n          <Fade fadeAfter={internalLiveRegionFadeAfter} key={liveRegionKey}>\n            {() => <ScreenReaderActivity activity={activity} />}\n          </Fade>\n        ))}\n      </section>\n      {/* TODO: [P2] Fix ESLint error `no-use-before-define` */}\n      {/* eslint-disable-next-line @typescript-eslint/no-use-before-define */}\n      <InternalTranscriptScrollable\n        activities={renderingActivities}\n        onFocusActivity={handleFocusActivity}\n        onFocusFiller={handleFocusFiller}\n        terminatorRef={terminatorRef}\n      >\n        {renderingElements.map(\n          (\n            {\n              activity,\n              callbackRef,\n              focusActivity,\n              handleFocus,\n              handleKeyDown,\n              handleMouseDownCapture,\n              hideTimestamp,\n              key,\n              renderActivity,\n              renderActivityStatus,\n              renderAvatar,\n              role,\n              shouldSpeak,\n              showCallout\n            },\n            index\n          ) => {\n            const { ariaLabelID, element } =\n              activityElementsRef.current.find(entry => entry.activity === activity) || {};\n            const activeDescendant = focusedActivityKey === key;\n            const isContentInteractive = !!(element\n              ? tabbableElements(element.querySelector('.webchat__basic-transcript__activity-box')).length\n              : 0);\n\n            return (\n              <li\n                aria-labelledby={ariaLabelID}\n                className={classNames('webchat__basic-transcript__activity', {\n                  'webchat__basic-transcript__activity--acknowledged': index <= indexOfLastInteractedActivity,\n                  'webchat__basic-transcript__activity--from-bot': role !== 'user',\n                  'webchat__basic-transcript__activity--from-user': role === 'user'\n                })}\n                // Set \"id\" for valid for accessibility.\n                /* eslint-disable-next-line react/forbid-dom-props */\n                id={activeDescendant ? activeDescendantElementId : undefined}\n                key={key}\n                onFocus={handleFocus}\n                onKeyDown={handleKeyDown}\n                onMouseDownCapture={handleMouseDownCapture}\n                ref={callbackRef}\n              >\n                <ScreenReaderActivity activity={activity} id={ariaLabelID} renderAttachments={false}>\n                  {!!isContentInteractive && <p>{activityInteractiveAlt}</p>}\n                </ScreenReaderActivity>\n                <FocusRedirector\n                  className=\"webchat__basic-transcript__activity-sentinel\"\n                  onFocus={focusActivity}\n                  redirectRef={rootElementRef}\n                />\n                <div className=\"webchat__basic-transcript__activity-box\">\n                  {renderActivity({\n                    hideTimestamp,\n                    renderActivityStatus,\n                    renderAvatar,\n                    showCallout\n                  })}\n                </div>\n                {shouldSpeak && <SpeakActivity activity={activity} />}\n                <FocusRedirector\n                  className=\"webchat__basic-transcript__activity-sentinel\"\n                  onFocus={focusActivity}\n                  redirectRef={rootElementRef}\n                />\n                <div\n                  className={classNames('webchat__basic-transcript__activity-indicator', {\n                    'webchat__basic-transcript__activity-indicator--first': !index,\n                    'webchat__basic-transcript__activity-indicator--focus': activeDescendant\n                  })}\n                />\n              </li>\n            );\n          }\n        )}\n      </InternalTranscriptScrollable>\n      {!!renderingElements.length && (\n        <React.Fragment>\n          <FocusRedirector\n            className=\"webchat__basic-transcript__sentinel\"\n            onFocus={setBottommostFocusedActivityKeyIfNeeded}\n            redirectRef={rootElementRef}\n          />\n          <div className=\"webchat__basic-transcript__terminator\" ref={terminatorRef} tabIndex={0}>\n            <div className=\"webchat__basic-transcript__terminator-body\">\n              <div className=\"webchat__basic-transcript__terminator-text\">{terminatorText}</div>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n      <div className=\"webchat__basic-transcript__focus-indicator\" />\n    </div>\n  );\n};\n\nInternalTranscript.defaultProps = {\n  className: ''\n};\n\nInternalTranscript.propTypes = {\n  activityElementsRef: PropTypes.shape({\n    current: PropTypes.array.isRequired\n  }).isRequired,\n  className: PropTypes.string\n};\n\nconst InternalScreenReaderTranscript = ({ renderingElements }) => {\n  const localize = useLocalizer();\n  const [internalLiveRegionFadeAfter] = useStyleOptions();\n\n  const transcriptRoleDescription = localize('TRANSCRIPT_ARIA_ROLE_ALT');\n\n  return (\n    <section\n      aria-atomic={false}\n      aria-live=\"polite\"\n      aria-relevant=\"additions\"\n      aria-roledescription={transcriptRoleDescription}\n      role=\"log\"\n    >\n      {renderingElements.map(({ activity, liveRegionKey }) => (\n        <Fade fadeAfter={internalLiveRegionFadeAfter} key={liveRegionKey}>\n          {() => <ScreenReaderActivity activity={activity} />}\n        </Fade>\n      ))}\n    </section>\n  );\n};\n\nInternalScreenReaderTranscript.propTypes = {\n  renderingElements: PropTypes.arrayOf(\n    PropTypes.shape({\n      activity: PropTypes.any,\n      liveRegionKey: PropTypes.string\n    })\n  ).isRequired\n};\n\n// Separating high-frequency hooks to improve performance.\nconst InternalTranscriptScrollable = ({ activities, children, onFocusActivity, onFocusFiller, terminatorRef }) => {\n  const [{ activities: activitiesStyleSet }] = useStyleSet();\n  const [{ hideScrollToEndButton }] = useStyleOptions();\n  const [animatingToEnd] = useAnimatingToEnd();\n  const [sticky] = useSticky();\n  const lastVisibleActivityId = getActivityUniqueId(activities[activities.length - 1] || {}); // Activity ID of the last visible activity in the list.\n  const localize = useLocalizer();\n  const scrollToEndButtonRef = useRef();\n\n  const lastReadActivityIdRef = useRef(lastVisibleActivityId);\n  const transcriptRoleDescription = localize('TRANSCRIPT_ARIA_ROLE_ALT');\n\n  const allActivitiesRead = lastVisibleActivityId === lastReadActivityIdRef.current;\n\n  const handleScrollToEndButtonClick = useCallback(() => {\n    // After the \"New message\" button is clicked, focus on the first unread activity.\n    const index = activities.findIndex(({ id }) => id === lastReadActivityIdRef.current);\n\n    if (~index) {\n      const firstUnreadActivity = activities[index + 1];\n\n      if (firstUnreadActivity) {\n        return onFocusActivity(getActivityUniqueId(firstUnreadActivity));\n      }\n    }\n\n    const { current } = terminatorRef;\n\n    current && current.focus();\n  }, [activities, lastReadActivityIdRef, onFocusActivity, terminatorRef]);\n\n  if (sticky) {\n    // If it is sticky, the user is at the bottom of the transcript, everything is read.\n    // So mark the activity ID as read.\n    lastReadActivityIdRef.current = lastVisibleActivityId;\n  }\n\n  // Finds where we should render the \"New messages\" button, in index. Returns -1 to hide the button.\n  const renderSeparatorAfterIndex = useMemo(() => {\n    // Don't show the button if:\n    // - All activities have been read\n    // - Currently animating towards bottom\n    //   - \"New messages\" button must not flash when: 1. Type \"help\", 2. Scroll to top, 3. Type \"help\" again, 4. Expect the \"New messages\" button not flashy\n    // - Hidden by style options\n    // - It is already at the bottom (sticky)\n\n    // Any changes to this logic, verify:\n    // - \"New messages\" button should persist while programmatically scrolling to mid-point of the transcript:\n    //   1. Type \"help\"\n    //   2. Type \"proactive\", then immediately scroll to top\n    //      Expect: the \"New messages\" button should appear\n    //   3. Run hook \"useScrollTo({ scrollTop: 500 })\"\n    //      Expect: when the scroll is animating to 500px, the \"New messages\" button should kept on the screen\n    // - \"New messages\" button must not flashy:\n    //   1. Type \"help\"\n    //   2. Scroll to top\n    //      Expect: no \"New messages\" button is shown\n    //   3. Type \"help\" again\n    //      Expect: \"New messages\" button must not flash-appear\n\n    if (allActivitiesRead || animatingToEnd || hideScrollToEndButton || sticky) {\n      return -1;\n    }\n\n    return activities.findIndex(activity => getActivityUniqueId(activity) === lastReadActivityIdRef.current);\n  }, [activities, allActivitiesRead, animatingToEnd, hideScrollToEndButton, lastReadActivityIdRef, sticky]);\n\n  return (\n    <React.Fragment>\n      {renderSeparatorAfterIndex !== -1 && (\n        <ScrollToEndButton onClick={handleScrollToEndButtonClick} ref={scrollToEndButtonRef} />\n      )}\n      {!!React.Children.count(children) && (\n        <FocusRedirector className=\"webchat__basic-transcript__sentinel\" redirectRef={terminatorRef} />\n      )}\n      <ReactScrollToBottomPanel className=\"webchat__basic-transcript__scrollable\">\n        <div aria-hidden={true} className=\"webchat__basic-transcript__filler\" onFocus={onFocusFiller} />\n        <ul\n          aria-roledescription={transcriptRoleDescription}\n          className={classNames(activitiesStyleSet + '', 'webchat__basic-transcript__transcript')}\n          role=\"list\"\n        >\n          {children}\n        </ul>\n        <BasicTypingIndicator />\n      </ReactScrollToBottomPanel>\n    </React.Fragment>\n  );\n};\n\nInternalTranscriptScrollable.propTypes = {\n  activities: PropTypes.array.isRequired,\n  children: PropTypes.any.isRequired,\n  onFocusActivity: PropTypes.func.isRequired,\n  onFocusFiller: PropTypes.func.isRequired,\n  terminatorRef: PropTypes.any.isRequired\n};\n\nconst SetScroller = ({ activityElementsRef, scrollerRef }) => {\n  const [\n    { autoScrollSnapOnActivity, autoScrollSnapOnActivityOffset, autoScrollSnapOnPage, autoScrollSnapOnPageOffset }\n  ] = useStyleOptions();\n  const [lastAcknowledgedActivity] = useAcknowledgedActivity();\n\n  const lastAcknowledgedActivityRef = useRef(lastAcknowledgedActivity);\n\n  lastAcknowledgedActivityRef.current = lastAcknowledgedActivity;\n\n  scrollerRef.current = useCallback(\n    ({ offsetHeight, scrollTop }) => {\n      const patchedAutoScrollSnapOnActivity =\n        typeof autoScrollSnapOnActivity === 'number'\n          ? Math.max(0, autoScrollSnapOnActivity)\n          : autoScrollSnapOnActivity\n          ? 1\n          : 0;\n      const patchedAutoScrollSnapOnPage =\n        typeof autoScrollSnapOnPage === 'number'\n          ? Math.max(0, Math.min(1, autoScrollSnapOnPage))\n          : autoScrollSnapOnPage\n          ? 1\n          : 0;\n      const patchedAutoScrollSnapOnActivityOffset =\n        typeof autoScrollSnapOnActivityOffset === 'number' ? autoScrollSnapOnActivityOffset : 0;\n      const patchedAutoScrollSnapOnPageOffset =\n        typeof autoScrollSnapOnPageOffset === 'number' ? autoScrollSnapOnPageOffset : 0;\n\n      if (patchedAutoScrollSnapOnActivity || patchedAutoScrollSnapOnPage) {\n        const { current: lastAcknowledgedActivity } = lastAcknowledgedActivityRef;\n\n        const values = [];\n\n        if (patchedAutoScrollSnapOnActivity) {\n          const { element: nthUnacknowledgedActivityElement } =\n            activityElementsRef.current[\n              activityElementsRef.current.findIndex(({ activity }) => activity === lastAcknowledgedActivity) +\n                patchedAutoScrollSnapOnActivity\n            ] || {};\n\n          if (nthUnacknowledgedActivityElement) {\n            values.push(\n              nthUnacknowledgedActivityElement.offsetTop +\n                nthUnacknowledgedActivityElement.offsetHeight -\n                offsetHeight -\n                scrollTop +\n                patchedAutoScrollSnapOnActivityOffset\n            );\n          }\n        }\n\n        if (patchedAutoScrollSnapOnPage) {\n          const { element: firstUnacknowledgedActivityElement } =\n            activityElementsRef.current[\n              activityElementsRef.current.findIndex(({ activity }) => activity === lastAcknowledgedActivity) + 1\n            ] || {};\n\n          if (firstUnacknowledgedActivityElement) {\n            values.push(\n              firstUnacknowledgedActivityElement.offsetTop -\n                scrollTop -\n                offsetHeight * (1 - patchedAutoScrollSnapOnPage) +\n                patchedAutoScrollSnapOnPageOffset\n            );\n          }\n        }\n\n        return values.reduce((minValue, value) => Math.min(minValue, value), Infinity);\n      }\n\n      return Infinity;\n    },\n    [\n      activityElementsRef,\n      autoScrollSnapOnActivity,\n      autoScrollSnapOnActivityOffset,\n      autoScrollSnapOnPage,\n      autoScrollSnapOnPageOffset,\n      lastAcknowledgedActivityRef\n    ]\n  );\n\n  return false;\n};\n\nconst BasicTranscript = ({ className }) => {\n  const activityElementsRef = useRef([]);\n  const scrollerRef = useRef(() => Infinity);\n\n  const scroller = useCallback((...args) => scrollerRef.current(...args), [scrollerRef]);\n\n  return (\n    <ReactScrollToBottomComposer scroller={scroller}>\n      <SetScroller activityElementsRef={activityElementsRef} scrollerRef={scrollerRef} />\n      <InternalTranscript activityElementsRef={activityElementsRef} className={className} />\n    </ReactScrollToBottomComposer>\n  );\n};\n\nBasicTranscript.defaultProps = {\n  className: ''\n};\n\nBasicTranscript.propTypes = {\n  className: PropTypes.string\n};\n\nexport default BasicTranscript;\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}