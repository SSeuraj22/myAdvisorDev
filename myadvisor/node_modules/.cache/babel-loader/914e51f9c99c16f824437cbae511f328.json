{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _botframeworkWebchatApi = require(\"botframework-webchat-api\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _useScrollToEnd = _interopRequireDefault(require(\"../hooks/useScrollToEnd\"));\n\nvar _useStyleSet3 = _interopRequireDefault(require(\"../hooks/useStyleSet\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar useDirection = _botframeworkWebchatApi.hooks.useDirection,\n    useLocalizer = _botframeworkWebchatApi.hooks.useLocalizer;\nvar ScrollToEndButton = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {\n  var className = _ref.className,\n      onClick = _ref.onClick;\n\n  var _useStyleSet = (0, _useStyleSet3.default)(),\n      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),\n      scrollToEndButtonStyleSet = _useStyleSet2[0].scrollToEndButton;\n\n  var _useDirection = useDirection(),\n      _useDirection2 = _slicedToArray(_useDirection, 1),\n      direction = _useDirection2[0];\n\n  var localize = useLocalizer();\n  var scrollToEnd = (0, _useScrollToEnd.default)();\n  var handleClick = (0, _react.useCallback)(function (event) {\n    onClick && onClick(event);\n    scrollToEnd();\n  }, [onClick, scrollToEnd]);\n  var newMessageText = localize('TRANSCRIPT_NEW_MESSAGES');\n  return /*#__PURE__*/_react.default.createElement(\"button\", {\n    \"aria-label\": newMessageText,\n    className: (0, _classnames.default)('webchat__scrollToEndButton', scrollToEndButtonStyleSet + '', className + '', direction === 'rtl' ? 'webchat__overlay--rtl' : ''),\n    onClick: handleClick,\n    ref: ref,\n    tabIndex: 0,\n    type: \"button\"\n  }, newMessageText);\n});\nScrollToEndButton.defaultProps = {\n  className: '',\n  onClick: undefined\n};\nScrollToEndButton.displayName = 'ScrollToEndButton';\nScrollToEndButton.propTypes = {\n  className: _propTypes.default.string,\n  onClick: _propTypes.default.func\n};\nvar _default = ScrollToEndButton;\nexports.default = _default;","map":{"version":3,"sources":["../../src/Activity/ScrollToEndButton.js"],"names":["useDirection","useLocalizer","hooks","ScrollToEndButton","className","onClick","scrollToEndButtonStyleSet","direction","localize","scrollToEnd","handleClick","newMessageText","undefined","PropTypes","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,uBAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,eAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEQA,Y,GAA+BE,uBAAAA,CAAAA,KAAAA,CAA/BF,Y;IAAcC,Y,GAAiBC,uBAAAA,CAAAA,KAAAA,CAAjBD,Y;AAEtB,IAAME,iBAAiB,GAAA,aAAG,CAAA,GAAA,MAAA,CAAA,UAAA,EAAW,UAAA,IAAA,EAAA,GAAA,EAAiC;AAAA,MAA9BC,SAA8B,GAAA,IAAA,CAA9BA,SAA8B;AAAA,MAAnBC,OAAmB,GAAA,IAAA,CAAnBA,OAAmB;;AAAA,MAAA,YAAA,GACT,CAAA,GAAA,aAAA,CADS,OACT,GADS;AAAA,MAAA,aAAA,GAAA,cAAA,CAAA,YAAA,EAAA,CAAA,CAAA;AAAA,MACxCC,yBADwC,GAAA,aAAA,CAAA,CAAA,CAAA,CAAA,iBAAA;;AAAA,MAAA,aAAA,GAEhDN,YAFgD,EAAA;AAAA,MAAA,cAAA,GAAA,cAAA,CAAA,aAAA,EAAA,CAAA,CAAA;AAAA,MAE7DO,SAF6D,GAAA,cAAA,CAAA,CAAA,CAAA;;AAGpE,MAAMC,QAAQ,GAAGP,YAAjB,EAAA;AACA,MAAMQ,WAAW,GAAG,CAAA,GAAA,eAAA,CAApB,OAAoB,GAApB;AAEA,MAAMC,WAAW,GAAG,CAAA,GAAA,MAAA,CAAA,WAAA,EAClB,UAAA,KAAA,EAAS;AACPL,IAAAA,OAAO,IAAIA,OAAO,CAAlBA,KAAkB,CAAlBA;AACAI,IAAAA,WAAW;AAHK,GAAA,EAKlB,CAAA,OAAA,EALF,WAKE,CALkB,CAApB;AAQA,MAAME,cAAc,GAAGH,QAAQ,CAA/B,yBAA+B,CAA/B;AAEA,SAAA,aACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACE,kBADF,cAAA;AAEE,IAAA,SAAS,EAAE,CAAA,GAAA,WAAA,CAAA,OAAA,EAAA,4BAAA,EAETF,yBAAyB,GAFhB,EAAA,EAGTF,SAAS,GAHA,EAAA,EAITG,SAAS,KAATA,KAAAA,GAAAA,uBAAAA,GANJ,EAEa,CAFb;AAQE,IAAA,OAAO,EART,WAAA;AASE,IAAA,GAAG,EATL,GAAA;AAUE,IAAA,QAAQ,EAVV,CAAA;AAWE,IAAA,IAAI,EAAC;AAXP,GAAA,EADF,cACE,CADF;AAhBF,CAA0B,CAA1B;AAmCAJ,iBAAiB,CAAjBA,YAAAA,GAAiC;AAC/BC,EAAAA,SAAS,EADsB,EAAA;AAE/BC,EAAAA,OAAO,EAAEO;AAFsB,CAAjCT;AAKAA,iBAAiB,CAAjBA,WAAAA,GAAAA,mBAAAA;AAEAA,iBAAiB,CAAjBA,SAAAA,GAA8B;AAC5BC,EAAAA,SAAS,EAAES,UAAAA,CAAAA,OAAAA,CADiB,MAAA;AAE5BR,EAAAA,OAAO,EAAEQ,UAAAA,CAAAA,OAAAA,CAAUC;AAFS,CAA9BX;eAKeA,iB","sourcesContent":["import { hooks } from 'botframework-webchat-api';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { forwardRef, useCallback } from 'react';\n\nimport useScrollToEnd from '../hooks/useScrollToEnd';\nimport useStyleSet from '../hooks/useStyleSet';\n\nconst { useDirection, useLocalizer } = hooks;\n\nconst ScrollToEndButton = forwardRef(({ className, onClick }, ref) => {\n  const [{ scrollToEndButton: scrollToEndButtonStyleSet }] = useStyleSet();\n  const [direction] = useDirection();\n  const localize = useLocalizer();\n  const scrollToEnd = useScrollToEnd();\n\n  const handleClick = useCallback(\n    event => {\n      onClick && onClick(event);\n      scrollToEnd();\n    },\n    [onClick, scrollToEnd]\n  );\n\n  const newMessageText = localize('TRANSCRIPT_NEW_MESSAGES');\n\n  return (\n    <button\n      aria-label={newMessageText}\n      className={classNames(\n        'webchat__scrollToEndButton',\n        scrollToEndButtonStyleSet + '',\n        className + '',\n        direction === 'rtl' ? 'webchat__overlay--rtl' : ''\n      )}\n      onClick={handleClick}\n      ref={ref}\n      tabIndex={0}\n      type=\"button\"\n    >\n      {newMessageText}\n    </button>\n  );\n});\n\nScrollToEndButton.defaultProps = {\n  className: '',\n  onClick: undefined\n};\n\nScrollToEndButton.displayName = 'ScrollToEndButton';\n\nScrollToEndButton.propTypes = {\n  className: PropTypes.string,\n  onClick: PropTypes.func\n};\n\nexport default ScrollToEndButton;\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}