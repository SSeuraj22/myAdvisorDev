{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ubuntu/myAdvisorDev/myadvisor/src/components/Staff/AddCourse.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Form, Col } from \"react-bootstrap\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n/*\n    AddCourse allows a staff member to add courses to the system.\n*/\n\nfunction AddCourse({\n  setShow,\n  refreshTable\n}) {\n  _s();\n\n  /*\n      The validated state is used to keep track of the validity of the add course form.\n      It's initial state is false.\n  */\n  const [validated, setValidated] = useState(false);\n  /*\n      notifyAdded is used to display toast notifications for events. It displays a green toast.\n  */\n\n  const notifyAdded = text => toast.success(text);\n  /*\n      notifyNotAdded is used to display toast notifications for events. It displays a red toast.\n  */\n\n\n  const notifyNotAdded = text => toast.error(text);\n  /*\n      HandleSubmit gets the data from the form as passes it to the addCourse function.\n  */\n\n\n  const handleSubmit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n    setValidated(true);\n    const formData = {\n      courseCode: form.elements.courseCode.value.replace(/\\s+/g, ''),\n      courseTitle: form.elements.courseTitle.value,\n      credits: form.elements.credits.value,\n      semester: form.elements.semester.value,\n      level: form.elements.level.value,\n      prerequisites: form.elements.prerequisites.value,\n      description: form.elements.description.value,\n      coursework: String(form.elements.coursework.value) + \"%\",\n      finalExam: String(form.elements.finalExam.value) + \"%\",\n      type: form.elements.type.value\n    };\n    addCourse(formData);\n  };\n  /*\n      addCourse creates a post request to the server, which adds a new course to the system.\n  */\n\n\n  async function addCourse(data) {\n    try {\n      const res = await fetch(\"/courses/add\", {\n        method: \"POST\",\n        headers: {\n          token: localStorage.getItem(\"token\"),\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      setShow(false);\n      refreshTable();\n\n      if (res.status === 401) {\n        notifyNotAdded(data.courseCode + \" Already Exists!\");\n      } else {\n        if (res.status === 200) {\n          notifyAdded(data.courseCode + \" Added!\");\n        }\n      }\n\n      const status = await res.statusText;\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      validated: validated,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"courseCode\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Course Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"courseTitle\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Course Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"4\",\n          controlId: \"credits\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Credits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"4\",\n          controlId: \"semester\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Semester\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"4\",\n          controlId: \"level\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"I\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"II\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"III\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"4\",\n          controlId: \"type\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Core\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Elective\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"coursework\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Coursework\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            min: \"0\",\n            max: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"finalExam\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Final Exam\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            min: \"0\",\n            max: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"prerequisites\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Prerequisites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"description\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          as: \"textarea\",\n          rows: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"float-right\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          class: \"btn btn-custom\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      pauseOnHover: true,\n      position: \"bottom-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddCourse, \"otD17mARj5mKZHrEMvBAd47slX0=\");\n\n_c = AddCourse;\nexport default AddCourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCourse\");","map":{"version":3,"sources":["/home/ubuntu/myAdvisorDev/myadvisor/src/components/Staff/AddCourse.js"],"names":["React","useState","Button","Form","Col","ToastContainer","toast","AddCourse","setShow","refreshTable","validated","setValidated","notifyAdded","text","success","notifyNotAdded","error","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","formData","courseCode","elements","value","replace","courseTitle","credits","semester","level","prerequisites","description","coursework","String","finalExam","type","addCourse","data","res","fetch","method","headers","token","localStorage","getItem","body","JSON","stringify","status","statusText","err","console","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form, Col } from \"react-bootstrap\";\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n/*\n    AddCourse allows a staff member to add courses to the system.\n*/\n\nfunction AddCourse({setShow, refreshTable}) {\n    /*\n        The validated state is used to keep track of the validity of the add course form.\n        It's initial state is false.\n    */    \n    const [validated, setValidated] = useState(false);\n\n    /*\n        notifyAdded is used to display toast notifications for events. It displays a green toast.\n    */    \n    const notifyAdded = (text) => toast.success(text);\n\n    /*\n        notifyNotAdded is used to display toast notifications for events. It displays a red toast.\n    */    \n    const notifyNotAdded = (text) => toast.error(text);\n\n    /*\n        HandleSubmit gets the data from the form as passes it to the addCourse function.\n    */    \n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n\n        if (form.checkValidity() === false) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n        setValidated(true);\n\n        const formData = {\n            courseCode : (form.elements.courseCode.value).replace(/\\s+/g, ''),\n            courseTitle : form.elements.courseTitle.value,\n            credits : form.elements.credits.value,\n            semester : form.elements.semester.value,\n            level : form.elements.level.value,\n            prerequisites : form.elements.prerequisites.value,\n            description: form.elements.description.value,\n            coursework: String(form.elements.coursework.value) + \"%\",\n            finalExam: String(form.elements.finalExam.value) + \"%\",\n            type: form.elements.type.value\n        }\n\n        addCourse(formData)\n    };\n\n    /*\n        addCourse creates a post request to the server, which adds a new course to the system.\n    */\n    async function addCourse(data) {\n        try {\n          const res = await fetch(\"/courses/add\", {\n            method: \"POST\",\n            headers: {\n                token: localStorage.getItem(\"token\"),\n                \"Content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n          });\n    \n          setShow(false);\n          refreshTable();\n\n          if(res.status===401){\n            notifyNotAdded(data.courseCode + \" Already Exists!\");\n          }\n          else{\n                if(res.status===200){\n                    notifyAdded(data.courseCode + \" Added!\");\n                }\n          }\n\n          const status = await res.statusText;\n          \n        } catch (err) {\n          console.error(err.message);\n        }\n    }\n\n    return (\n        <>\n            <Form validated={validated} onSubmit={handleSubmit}>\n                <Form.Group controlId=\"courseCode\">\n                    <Form.Label>Course Code</Form.Label>\n                    <Form.Control required type=\"text\"/>\n                </Form.Group>\n\n                <Form.Group controlId=\"courseTitle\">\n                    <Form.Label>Course Title</Form.Label>\n                    <Form.Control required type=\"text\"/>\n                </Form.Group>\n\n                <Form.Row>\n                    <Form.Group as={Col} md=\"4\" controlId=\"credits\">\n                        <Form.Label>Credits</Form.Label>\n                        <Form.Control required as=\"select\">\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                            <option>4</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} md=\"4\" controlId=\"semester\">\n                        <Form.Label>Semester</Form.Label>\n                        <Form.Control required as=\"select\">\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} md=\"4\" controlId=\"level\">\n                        <Form.Label>Level</Form.Label>\n                        <Form.Control required as=\"select\">\n                            <option>I</option>\n                            <option>II</option>\n                            <option>III</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} md=\"4\" controlId=\"type\">\n                        <Form.Label>Type</Form.Label>\n                        <Form.Control required as=\"select\">\n                            <option>Core</option>\n                            <option>Elective</option>\n                        </Form.Control>\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"coursework\">\n                        <Form.Label>Coursework</Form.Label>\n                        <Form.Control type=\"number\" min=\"0\" max=\"100\" />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"finalExam\">\n                        <Form.Label>Final Exam</Form.Label>\n                        <Form.Control type=\"number\" min=\"0\" max=\"100\" />\n                    </Form.Group>\n\n                    \n                </Form.Row>\n\n                <Form.Group controlId=\"prerequisites\">\n                    <Form.Label>Prerequisites</Form.Label>\n                    <Form.Control required type=\"text\"/>\n                </Form.Group>\n\n                <Form.Group controlId=\"description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control required as=\"textarea\" rows={3}/>\n                </Form.Group>\n\n                <div class=\"float-right\"><Button type=\"submit\" class=\"btn btn-custom\">Submit</Button></div>\n            </Form>\n\n            <ToastContainer \n                pauseOnHover\n                position=\"bottom-right\"\n            />\n        </>\n    );\n}\n\nexport default AddCourse;"]},"metadata":{},"sourceType":"module"}