{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ubuntu/myAdvisorDev/myadvisor/src/components/NoTranscript.js\";\nimport React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass NoTranscript extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeHandler = event => {\n      this.setState({\n        file: event.target.files[0]\n      });\n    };\n\n    this.onClickHandler = () => {\n      var formdata = new FormData();\n\n      if (this.state.file === null) {\n        // If no file has been uploaded, do nothing\n        return;\n      }\n\n      formdata.append(\"file\", this.state.file, \"[PROXY]\"); // Add file to FormData object, Proxy is only used in development to connect to node server\n\n      var requestOptions = {\n        // Create POST request\n        method: 'POST',\n        body: formdata,\n        redirect: 'follow'\n      };\n      toast.success(\"Processing transcript...\"); // Create a toast to let user know their transcript is being processed\n\n      fetch(\"/transcript/parseForm\", requestOptions) // Make request to server to parse transcript, upload student details and their courses to the database\n      .then(response => response.text()).then(result => console.log(result)).then(result => this.props.uploadedHandler()) // Once the data has been saved to the database, run uploadedHandler from StudentProfile\n      .catch(error => console.log('error', error));\n      var requestOptions2 = {\n        // Create GET request\n        method: 'GET'\n      };\n      fetch(\"/trnscript/parseFormGpaData\", requestOptions2);\n    };\n\n    this.state = {\n      file: null // Store file uploaded by user\n\n    };\n    props.setProg(0); // Set advising progress to 0%\n  } // Function that runs when the user uploads a file\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card details-card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"row-info\",\n            children: \"No transcript has been uploaded, please upload your unofficial transcript to get started with advising.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"input-field col-sm-12\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              action: \"\",\n              encType: \"multipart/form-data\",\n              method: \"POST\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file\",\n                onChange: this.onChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"button\",\n                value: \"Upload\",\n                class: \"btn btn-custom blue-btn\",\n                onClick: this.onClickHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"row-info new-student\",\n            children: \"New student and don't have a transcript yet? \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/start\",\n            onClick: this.props.newStudentHandler,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"row-info details-link new-student\",\n              children: \"Click here to get started\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n            pauseOnHover: true,\n            position: \"top-left\",\n            autoClose: 10000\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default NoTranscript;","map":{"version":3,"sources":["/home/ubuntu/myAdvisorDev/myadvisor/src/components/NoTranscript.js"],"names":["React","Component","Link","ToastContainer","toast","NoTranscript","constructor","props","onChangeHandler","event","setState","file","target","files","onClickHandler","formdata","FormData","state","append","requestOptions","method","body","redirect","success","fetch","then","response","text","result","console","log","uploadedHandler","catch","error","requestOptions2","setProg","render","newStudentHandler"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass NoTranscript extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            file: null // Store file uploaded by user\n        }\n       props.setProg(0); // Set advising progress to 0%\n    }\n\n    // Function that runs when the user uploads a file\n    onChangeHandler = event =>{\n        this.setState({\n            file: event.target.files[0]\n        })\n    }\n\n    // Functions that runs when the user clicks the \"Upload\" button\n    onClickHandler = () => {\n        var formdata = new FormData();\n        if (this.state.file === null) { // If no file has been uploaded, do nothing\n            return;\n        }\n        formdata.append(\"file\", this.state.file, \"[PROXY]\"); // Add file to FormData object, Proxy is only used in development to connect to node server\n        \n        var requestOptions = { // Create POST request\n          method: 'POST',\n          body: formdata,\n          redirect: 'follow'\n        };\n\n        toast.success(\"Processing transcript...\") // Create a toast to let user know their transcript is being processed\n        \n        fetch(\"/transcript/parseForm\", requestOptions) // Make request to server to parse transcript, upload student details and their courses to the database\n          .then(response => response.text())\n          .then(result => console.log(result))\n          .then(result => this.props.uploadedHandler()) // Once the data has been saved to the database, run uploadedHandler from StudentProfile\n          .catch(error => console.log('error', error));\n\n          var requestOptions2 = { // Create GET request\n            method: 'GET',\n          };\n\n          fetch(\"/trnscript/parseFormGpaData\", requestOptions2)\n\n\n\t}\n\n  render() {\n    return (\n        <div>\n            <div className=\"card details-card\">\n                <div className=\"card-body\">\n                    <p className=\"row-info\">No transcript has been uploaded, please upload your unofficial transcript to get started with advising.</p>\n                    <div class=\"input-field col-sm-12\">\n                        <form action=\"\" encType=\"multipart/form-data\" method=\"POST\">\n                            <input type=\"file\" name=\"file\" onChange={this.onChangeHandler}/>\n                            <input type=\"button\" value=\"Upload\" class=\"btn btn-custom blue-btn\" onClick={this.onClickHandler}/>\n                        </form>\n                    </div>\n                    <hr></hr>\n                    <span className=\"row-info new-student\">New student and don't have a transcript yet? </span>\n                    <Link to=\"/start\" onClick={this.props.newStudentHandler}>\n                        <span className=\"row-info details-link new-student\">Click here to get started</span>\n                    </Link>\n                    <ToastContainer \n                        pauseOnHover\n                        position=\"top-left\"\n                        autoClose={10000}\n                    />\n                </div>\n            </div>\n      </div>\n    );\n  }\n}\n\nexport default NoTranscript;\n"]},"metadata":{},"sourceType":"module"}