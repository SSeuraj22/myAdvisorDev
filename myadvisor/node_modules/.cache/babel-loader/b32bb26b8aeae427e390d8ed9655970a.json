{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // This is an element, when focused, will send the focus to the ref specified in \"redirectRef\".\n// Although the focus is being redirected, browser will scroll this redirector element into view.\n// Browser's \"scrollIntoView()\" call cannot be prevented through event.preventDefault() in both\n// bubble and capture phase of \"focus\" event.\n// When this focus redirector is put inside a scrollable container, you may want to resize or reposition\n// it to prevent unintentional scroll done by the browser default behavior.\n\n\nvar FocusRedirector = function FocusRedirector(_ref) {\n  var className = _ref.className,\n      onFocus = _ref.onFocus,\n      redirectRef = _ref.redirectRef;\n  var handleFocus = (0, _react.useCallback)(function () {\n    var current = redirectRef.current;\n    current && current.focus();\n    onFocus && onFocus();\n  }, [onFocus, redirectRef]);\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: className,\n    onFocus: handleFocus,\n    tabIndex: 0\n  });\n};\n\nFocusRedirector.defaultProps = {\n  className: undefined,\n  onFocus: undefined\n};\nFocusRedirector.propTypes = {\n  className: _propTypes.default.string,\n  onFocus: _propTypes.default.func,\n  redirectRef: _propTypes.default.shape({\n    current: _propTypes.default.any\n  }).isRequired\n};\nvar _default = FocusRedirector;\nexports.default = _default;","map":{"version":3,"sources":["../../src/Utils/FocusRedirector.js"],"names":["FocusRedirector","className","onFocus","redirectRef","handleFocus","current","undefined","PropTypes","any","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAEA;AACA;AAEA;AACA;AAEA;AACA;;;AAEA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAAA,IAAA,EAAyC;AAAA,MAAtCC,SAAsC,GAAA,IAAA,CAAtCA,SAAsC;AAAA,MAA3BC,OAA2B,GAAA,IAAA,CAA3BA,OAA2B;AAAA,MAAlBC,WAAkB,GAAA,IAAA,CAAlBA,WAAkB;AAC/D,MAAMC,WAAW,GAAG,CAAA,GAAA,MAAA,CAAA,WAAA,EAAY,YAAM;AAAA,QAC5BC,OAD4B,GAChBF,WADgB,CAAA,OAAA;AAGpCE,IAAAA,OAAO,IAAIA,OAAO,CAAlBA,KAAWA,EAAXA;AACAH,IAAAA,OAAO,IAAIA,OAAXA,EAAAA;AAJkB,GAAA,EAKjB,CAAA,OAAA,EALH,WAKG,CALiB,CAApB;AAOA,SAAA,aAAO,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAd,SAAA;AAA2B,IAAA,OAAO,EAAlC,WAAA;AAAiD,IAAA,QAAQ,EAAE;AAA3D,GAAA,CAAP;AARF,CAAA;;AAWAF,eAAe,CAAfA,YAAAA,GAA+B;AAC7BC,EAAAA,SAAS,EADoB,SAAA;AAE7BC,EAAAA,OAAO,EAAEI;AAFoB,CAA/BN;AAKAA,eAAe,CAAfA,SAAAA,GAA4B;AAC1BC,EAAAA,SAAS,EAAEM,UAAAA,CAAAA,OAAAA,CADe,MAAA;AAE1BL,EAAAA,OAAO,EAAEK,UAAAA,CAAAA,OAAAA,CAFiB,IAAA;AAG1BJ,EAAAA,WAAW,EAAE,UAAA,CAAA,OAAA,CAAA,KAAA,CAAgB;AAC3BE,IAAAA,OAAO,EAAEE,UAAAA,CAAAA,OAAAA,CAAUC;AADQ,GAAhB,EAEVC;AALuB,CAA5BT;eAQeA,e","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useCallback } from 'react';\n\n// This is an element, when focused, will send the focus to the ref specified in \"redirectRef\".\n// Although the focus is being redirected, browser will scroll this redirector element into view.\n\n// Browser's \"scrollIntoView()\" call cannot be prevented through event.preventDefault() in both\n// bubble and capture phase of \"focus\" event.\n\n// When this focus redirector is put inside a scrollable container, you may want to resize or reposition\n// it to prevent unintentional scroll done by the browser default behavior.\n\nconst FocusRedirector = ({ className, onFocus, redirectRef }) => {\n  const handleFocus = useCallback(() => {\n    const { current } = redirectRef;\n\n    current && current.focus();\n    onFocus && onFocus();\n  }, [onFocus, redirectRef]);\n\n  return <div className={className} onFocus={handleFocus} tabIndex={0} />;\n};\n\nFocusRedirector.defaultProps = {\n  className: undefined,\n  onFocus: undefined\n};\n\nFocusRedirector.propTypes = {\n  className: PropTypes.string,\n  onFocus: PropTypes.func,\n  redirectRef: PropTypes.shape({\n    current: PropTypes.any\n  }).isRequired\n};\n\nexport default FocusRedirector;\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}