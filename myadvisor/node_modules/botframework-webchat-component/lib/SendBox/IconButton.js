"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _AccessibleButton = _interopRequireDefault(require("../Utils/AccessibleButton"));

var _useStyleSet3 = _interopRequireDefault(require("../hooks/useStyleSet"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useStyleOptions = _botframeworkWebchatApi.hooks.useStyleOptions;

var IconButton = function IconButton(_ref) {
  var alt = _ref.alt,
      children = _ref.children,
      className = _ref.className,
      disabled = _ref.disabled,
      onClick = _ref.onClick;

  var _useStyleOptions = useStyleOptions(),
      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),
      sendBoxButtonAlignment = _useStyleOptions2[0].sendBoxButtonAlignment;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      sendBoxButtonStyleSet = _useStyleSet2[0].sendBoxButton;

  return /*#__PURE__*/_react.default.createElement(_AccessibleButton.default, {
    className: (0, _classnames.default)(sendBoxButtonStyleSet + '', 'webchat__icon-button', {
      'webchat__icon-button--stretch': sendBoxButtonAlignment !== 'bottom' && sendBoxButtonAlignment !== 'top'
    }, className + ''),
    disabled: disabled,
    onClick: disabled ? undefined : onClick,
    title: alt,
    type: "button"
  }, children);
};

IconButton.defaultProps = {
  alt: '',
  children: undefined,
  className: '',
  disabled: false,
  onClick: undefined
};
IconButton.propTypes = {
  alt: _propTypes.default.string,
  children: _propTypes.default.any,
  className: _propTypes.default.string,
  disabled: _propTypes.default.bool,
  onClick: _propTypes.default.func
};
var _default = IconButton;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9TZW5kQm94L0ljb25CdXR0b24uanMiXSwibmFtZXMiOlsidXNlU3R5bGVPcHRpb25zIiwiaG9va3MiLCJJY29uQnV0dG9uIiwiYWx0IiwiY2hpbGRyZW4iLCJjbGFzc05hbWUiLCJkaXNhYmxlZCIsIm9uQ2xpY2siLCJzZW5kQm94QnV0dG9uQWxpZ25tZW50Iiwic2VuZEJveEJ1dHRvblN0eWxlU2V0Iiwic2VuZEJveEJ1dHRvbiIsInVuZGVmaW5lZCIsImRlZmF1bHRQcm9wcyIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsInN0cmluZyIsImFueSIsImJvb2wiLCJmdW5jIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFUUEsZSxHQUFvQkMsNkIsQ0FBcEJELGU7O0FBRVIsSUFBTUUsVUFBVSxHQUFHLFNBQWJBLFVBQWEsT0FBcUQ7QUFBQSxNQUFsREMsR0FBa0QsUUFBbERBLEdBQWtEO0FBQUEsTUFBN0NDLFFBQTZDLFFBQTdDQSxRQUE2QztBQUFBLE1BQW5DQyxTQUFtQyxRQUFuQ0EsU0FBbUM7QUFBQSxNQUF4QkMsUUFBd0IsUUFBeEJBLFFBQXdCO0FBQUEsTUFBZEMsT0FBYyxRQUFkQSxPQUFjOztBQUFBLHlCQUNqQ1AsZUFBZSxFQURrQjtBQUFBO0FBQUEsTUFDN0RRLHNCQUQ2RCx3QkFDN0RBLHNCQUQ2RDs7QUFBQSxxQkFFbkIsNEJBRm1CO0FBQUE7QUFBQSxNQUU5Q0MscUJBRjhDLG9CQUU3REMsYUFGNkQ7O0FBSXRFLHNCQUNFLDZCQUFDLHlCQUFEO0FBQ0UsSUFBQSxTQUFTLEVBQUUseUJBQ1RELHFCQUFxQixHQUFHLEVBRGYsRUFFVCxzQkFGUyxFQUdUO0FBQ0UsdUNBQWlDRCxzQkFBc0IsS0FBSyxRQUEzQixJQUF1Q0Esc0JBQXNCLEtBQUs7QUFEckcsS0FIUyxFQU1USCxTQUFTLEdBQUcsRUFOSCxDQURiO0FBU0UsSUFBQSxRQUFRLEVBQUVDLFFBVFo7QUFVRSxJQUFBLE9BQU8sRUFBRUEsUUFBUSxHQUFHSyxTQUFILEdBQWVKLE9BVmxDO0FBV0UsSUFBQSxLQUFLLEVBQUVKLEdBWFQ7QUFZRSxJQUFBLElBQUksRUFBQztBQVpQLEtBY0dDLFFBZEgsQ0FERjtBQWtCRCxDQXRCRDs7QUF3QkFGLFVBQVUsQ0FBQ1UsWUFBWCxHQUEwQjtBQUN4QlQsRUFBQUEsR0FBRyxFQUFFLEVBRG1CO0FBRXhCQyxFQUFBQSxRQUFRLEVBQUVPLFNBRmM7QUFHeEJOLEVBQUFBLFNBQVMsRUFBRSxFQUhhO0FBSXhCQyxFQUFBQSxRQUFRLEVBQUUsS0FKYztBQUt4QkMsRUFBQUEsT0FBTyxFQUFFSTtBQUxlLENBQTFCO0FBUUFULFVBQVUsQ0FBQ1csU0FBWCxHQUF1QjtBQUNyQlYsRUFBQUEsR0FBRyxFQUFFVyxtQkFBVUMsTUFETTtBQUVyQlgsRUFBQUEsUUFBUSxFQUFFVSxtQkFBVUUsR0FGQztBQUdyQlgsRUFBQUEsU0FBUyxFQUFFUyxtQkFBVUMsTUFIQTtBQUlyQlQsRUFBQUEsUUFBUSxFQUFFUSxtQkFBVUcsSUFKQztBQUtyQlYsRUFBQUEsT0FBTyxFQUFFTyxtQkFBVUk7QUFMRSxDQUF2QjtlQVFlaEIsVSIsInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaG9va3MgfSBmcm9tICdib3RmcmFtZXdvcmstd2ViY2hhdC1hcGknO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IEFjY2Vzc2libGVCdXR0b24gZnJvbSAnLi4vVXRpbHMvQWNjZXNzaWJsZUJ1dHRvbic7XG5pbXBvcnQgdXNlU3R5bGVTZXQgZnJvbSAnLi4vaG9va3MvdXNlU3R5bGVTZXQnO1xuXG5jb25zdCB7IHVzZVN0eWxlT3B0aW9ucyB9ID0gaG9va3M7XG5cbmNvbnN0IEljb25CdXR0b24gPSAoeyBhbHQsIGNoaWxkcmVuLCBjbGFzc05hbWUsIGRpc2FibGVkLCBvbkNsaWNrIH0pID0+IHtcbiAgY29uc3QgW3sgc2VuZEJveEJ1dHRvbkFsaWdubWVudCB9XSA9IHVzZVN0eWxlT3B0aW9ucygpO1xuICBjb25zdCBbeyBzZW5kQm94QnV0dG9uOiBzZW5kQm94QnV0dG9uU3R5bGVTZXQgfV0gPSB1c2VTdHlsZVNldCgpO1xuXG4gIHJldHVybiAoXG4gICAgPEFjY2Vzc2libGVCdXR0b25cbiAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcyhcbiAgICAgICAgc2VuZEJveEJ1dHRvblN0eWxlU2V0ICsgJycsXG4gICAgICAgICd3ZWJjaGF0X19pY29uLWJ1dHRvbicsXG4gICAgICAgIHtcbiAgICAgICAgICAnd2ViY2hhdF9faWNvbi1idXR0b24tLXN0cmV0Y2gnOiBzZW5kQm94QnV0dG9uQWxpZ25tZW50ICE9PSAnYm90dG9tJyAmJiBzZW5kQm94QnV0dG9uQWxpZ25tZW50ICE9PSAndG9wJ1xuICAgICAgICB9LFxuICAgICAgICBjbGFzc05hbWUgKyAnJ1xuICAgICAgKX1cbiAgICAgIGRpc2FibGVkPXtkaXNhYmxlZH1cbiAgICAgIG9uQ2xpY2s9e2Rpc2FibGVkID8gdW5kZWZpbmVkIDogb25DbGlja31cbiAgICAgIHRpdGxlPXthbHR9XG4gICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICA+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9BY2Nlc3NpYmxlQnV0dG9uPlxuICApO1xufTtcblxuSWNvbkJ1dHRvbi5kZWZhdWx0UHJvcHMgPSB7XG4gIGFsdDogJycsXG4gIGNoaWxkcmVuOiB1bmRlZmluZWQsXG4gIGNsYXNzTmFtZTogJycsXG4gIGRpc2FibGVkOiBmYWxzZSxcbiAgb25DbGljazogdW5kZWZpbmVkXG59O1xuXG5JY29uQnV0dG9uLnByb3BUeXBlcyA9IHtcbiAgYWx0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLmFueSxcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBkaXNhYmxlZDogUHJvcFR5cGVzLmJvb2wsXG4gIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jXG59O1xuXG5leHBvcnQgZGVmYXVsdCBJY29uQnV0dG9uO1xuIl19