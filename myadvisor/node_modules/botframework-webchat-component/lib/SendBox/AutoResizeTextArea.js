"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _AccessibleTextArea = _interopRequireDefault(require("../Utils/AccessibleTextArea"));

var _useEnterKeyHint = _interopRequireDefault(require("../hooks/internal/useEnterKeyHint"));

var _useStyleSet3 = _interopRequireDefault(require("../hooks/useStyleSet"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var AutoResizeTextArea = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {
  var ariaLabel = _ref['aria-label'],
      className = _ref.className,
      dataId = _ref['data-id'],
      disabled = _ref.disabled,
      enterKeyHint = _ref.enterKeyHint,
      inputMode = _ref.inputMode,
      onChange = _ref.onChange,
      onFocus = _ref.onFocus,
      onKeyDown = _ref.onKeyDown,
      onKeyDownCapture = _ref.onKeyDownCapture,
      onKeyPress = _ref.onKeyPress,
      onSelect = _ref.onSelect,
      placeholder = _ref.placeholder,
      readOnly = _ref.readOnly,
      rows = _ref.rows,
      textAreaClassName = _ref.textAreaClassName,
      value = _ref.value;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      autoResizeTextAreaStyleSet = _useStyleSet2[0].autoResizeTextArea;

  (0, _useEnterKeyHint.default)(ref, enterKeyHint);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('webchat__auto-resize-textarea', autoResizeTextAreaStyleSet + '', className)
  }, /*#__PURE__*/_react.default.createElement("div", {
    "aria-hidden": true,
    className: "webchat__auto-resize-textarea__doppelganger"
  }, value, "\xA0"), /*#__PURE__*/_react.default.createElement(_AccessibleTextArea.default, {
    "aria-label": ariaLabel,
    className: (0, _classnames.default)('webchat__auto-resize-textarea__textarea', textAreaClassName),
    "data-id": dataId,
    disabled: disabled,
    inputMode: inputMode,
    onChange: onChange,
    onFocus: onFocus,
    onKeyDown: onKeyDown,
    onKeyDownCapture: onKeyDownCapture,
    onKeyPress: onKeyPress,
    onSelect: onSelect,
    placeholder: placeholder,
    readOnly: readOnly,
    ref: ref,
    rows: rows,
    value: value
  }));
});
AutoResizeTextArea.defaultProps = {
  'aria-label': undefined,
  'data-id': undefined,
  className: undefined,
  disabled: undefined,
  enterKeyHint: undefined,
  inputMode: undefined,
  onChange: undefined,
  onFocus: undefined,
  onKeyDown: undefined,
  onKeyDownCapture: undefined,
  onKeyPress: undefined,
  onSelect: undefined,
  placeholder: undefined,
  readOnly: undefined,
  rows: undefined,
  textAreaClassName: undefined,
  value: ''
};
AutoResizeTextArea.propTypes = {
  'aria-label': _propTypes.default.string,
  className: _propTypes.default.string,
  'data-id': _propTypes.default.string,
  disabled: _propTypes.default.bool,
  enterKeyHint: _propTypes.default.string,
  inputMode: _propTypes.default.string,
  onChange: _propTypes.default.func,
  onFocus: _propTypes.default.func,
  onKeyDown: _propTypes.default.func,
  onKeyDownCapture: _propTypes.default.func,
  onKeyPress: _propTypes.default.func,
  onSelect: _propTypes.default.func,
  placeholder: _propTypes.default.string,
  readOnly: _propTypes.default.bool,
  rows: _propTypes.default.string,
  textAreaClassName: _propTypes.default.string,
  value: _propTypes.default.string
};
var _default = AutoResizeTextArea;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9TZW5kQm94L0F1dG9SZXNpemVUZXh0QXJlYS5qcyJdLCJuYW1lcyI6WyJBdXRvUmVzaXplVGV4dEFyZWEiLCJyZWYiLCJhcmlhTGFiZWwiLCJjbGFzc05hbWUiLCJkYXRhSWQiLCJkaXNhYmxlZCIsImVudGVyS2V5SGludCIsImlucHV0TW9kZSIsIm9uQ2hhbmdlIiwib25Gb2N1cyIsIm9uS2V5RG93biIsIm9uS2V5RG93bkNhcHR1cmUiLCJvbktleVByZXNzIiwib25TZWxlY3QiLCJwbGFjZWhvbGRlciIsInJlYWRPbmx5Iiwicm93cyIsInRleHRBcmVhQ2xhc3NOYW1lIiwidmFsdWUiLCJhdXRvUmVzaXplVGV4dEFyZWFTdHlsZVNldCIsImF1dG9SZXNpemVUZXh0QXJlYSIsImRlZmF1bHRQcm9wcyIsInVuZGVmaW5lZCIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsInN0cmluZyIsImJvb2wiLCJmdW5jIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxrQkFBa0IsZ0JBQUcsdUJBQ3pCLGdCQW9CRUMsR0FwQkYsRUFxQks7QUFBQSxNQW5CYUMsU0FtQmIsUUFuQkQsWUFtQkM7QUFBQSxNQWxCREMsU0FrQkMsUUFsQkRBLFNBa0JDO0FBQUEsTUFqQlVDLE1BaUJWLFFBakJELFNBaUJDO0FBQUEsTUFoQkRDLFFBZ0JDLFFBaEJEQSxRQWdCQztBQUFBLE1BZkRDLFlBZUMsUUFmREEsWUFlQztBQUFBLE1BZERDLFNBY0MsUUFkREEsU0FjQztBQUFBLE1BYkRDLFFBYUMsUUFiREEsUUFhQztBQUFBLE1BWkRDLE9BWUMsUUFaREEsT0FZQztBQUFBLE1BWERDLFNBV0MsUUFYREEsU0FXQztBQUFBLE1BVkRDLGdCQVVDLFFBVkRBLGdCQVVDO0FBQUEsTUFUREMsVUFTQyxRQVREQSxVQVNDO0FBQUEsTUFSREMsUUFRQyxRQVJEQSxRQVFD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RUFBRVksbUJBQVVHLElBWE87QUFZN0JkLEVBQUFBLFFBQVEsRUFBRVcsbUJBQVVHLElBWlM7QUFhN0JiLEVBQUFBLFdBQVcsRUFBRVUsbUJBQVVDLE1BYk07QUFjN0JWLEVBQUFBLFFBQVEsRUFBRVMsbUJBQVVFLElBZFM7QUFlN0JWLEVBQUFBLElBQUksRUFBRVEsbUJBQVVDLE1BZmE7QUFnQjdCUixFQUFBQSxpQkFBaUIsRUFBRU8sbUJBQVVDLE1BaEJBO0FBaUI3QlAsRUFBQUEsS0FBSyxFQUFFTSxtQkFBVUM7QUFqQlksQ0FBL0I7ZUFvQmV6QixrQiIsInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0LCB7IGZvcndhcmRSZWYgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBBY2Nlc3NpYmxlVGV4dEFyZWEgZnJvbSAnLi4vVXRpbHMvQWNjZXNzaWJsZVRleHRBcmVhJztcbmltcG9ydCB1c2VFbnRlcktleUhpbnQgZnJvbSAnLi4vaG9va3MvaW50ZXJuYWwvdXNlRW50ZXJLZXlIaW50JztcbmltcG9ydCB1c2VTdHlsZVNldCBmcm9tICcuLi9ob29rcy91c2VTdHlsZVNldCc7XG5cbmNvbnN0IEF1dG9SZXNpemVUZXh0QXJlYSA9IGZvcndhcmRSZWYoXG4gIChcbiAgICB7XG4gICAgICAnYXJpYS1sYWJlbCc6IGFyaWFMYWJlbCxcbiAgICAgIGNsYXNzTmFtZSxcbiAgICAgICdkYXRhLWlkJzogZGF0YUlkLFxuICAgICAgZGlzYWJsZWQsXG4gICAgICBlbnRlcktleUhpbnQsXG4gICAgICBpbnB1dE1vZGUsXG4gICAgICBvbkNoYW5nZSxcbiAgICAgIG9uRm9jdXMsXG4gICAgICBvbktleURvd24sXG4gICAgICBvbktleURvd25DYXB0dXJlLFxuICAgICAgb25LZXlQcmVzcyxcbiAgICAgIG9uU2VsZWN0LFxuICAgICAgcGxhY2Vob2xkZXIsXG4gICAgICByZWFkT25seSxcbiAgICAgIHJvd3MsXG4gICAgICB0ZXh0QXJlYUNsYXNzTmFtZSxcbiAgICAgIHZhbHVlXG4gICAgfSxcbiAgICByZWZcbiAgKSA9PiB7XG4gICAgY29uc3QgW3sgYXV0b1Jlc2l6ZVRleHRBcmVhOiBhdXRvUmVzaXplVGV4dEFyZWFTdHlsZVNldCB9XSA9IHVzZVN0eWxlU2V0KCk7XG5cbiAgICB1c2VFbnRlcktleUhpbnQocmVmLCBlbnRlcktleUhpbnQpO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc05hbWVzKCd3ZWJjaGF0X19hdXRvLXJlc2l6ZS10ZXh0YXJlYScsIGF1dG9SZXNpemVUZXh0QXJlYVN0eWxlU2V0ICsgJycsIGNsYXNzTmFtZSl9PlxuICAgICAgICB7LyogV2UgbmVlZCB0byBhZGQgYSBzcGFjZSBoZXJlLCBzbyBibGFuayBsaW5lcyB3aWxsIGJlIGNvdW50ZWQgaW4gdGhlIGRvcHBlbGdhbmdlci4gKi99XG4gICAgICAgIDxkaXYgYXJpYS1oaWRkZW49e3RydWV9IGNsYXNzTmFtZT1cIndlYmNoYXRfX2F1dG8tcmVzaXplLXRleHRhcmVhX19kb3BwZWxnYW5nZXJcIj5cbiAgICAgICAgICB7dmFsdWV9Jm5ic3A7XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8QWNjZXNzaWJsZVRleHRBcmVhXG4gICAgICAgICAgYXJpYS1sYWJlbD17YXJpYUxhYmVsfVxuICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcygnd2ViY2hhdF9fYXV0by1yZXNpemUtdGV4dGFyZWFfX3RleHRhcmVhJywgdGV4dEFyZWFDbGFzc05hbWUpfVxuICAgICAgICAgIGRhdGEtaWQ9e2RhdGFJZH1cbiAgICAgICAgICBkaXNhYmxlZD17ZGlzYWJsZWR9XG4gICAgICAgICAgaW5wdXRNb2RlPXtpbnB1dE1vZGV9XG4gICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlfVxuICAgICAgICAgIG9uRm9jdXM9e29uRm9jdXN9XG4gICAgICAgICAgb25LZXlEb3duPXtvbktleURvd259XG4gICAgICAgICAgb25LZXlEb3duQ2FwdHVyZT17b25LZXlEb3duQ2FwdHVyZX1cbiAgICAgICAgICBvbktleVByZXNzPXtvbktleVByZXNzfVxuICAgICAgICAgIG9uU2VsZWN0PXtvblNlbGVjdH1cbiAgICAgICAgICBwbGFjZWhvbGRlcj17cGxhY2Vob2xkZXJ9XG4gICAgICAgICAgcmVhZE9ubHk9e3JlYWRPbmx5fVxuICAgICAgICAgIHJlZj17cmVmfVxuICAgICAgICAgIHJvd3M9e3Jvd3N9XG4gICAgICAgICAgdmFsdWU9e3ZhbHVlfVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuKTtcblxuQXV0b1Jlc2l6ZVRleHRBcmVhLmRlZmF1bHRQcm9wcyA9IHtcbiAgJ2FyaWEtbGFiZWwnOiB1bmRlZmluZWQsXG4gICdkYXRhLWlkJzogdW5kZWZpbmVkLFxuICBjbGFzc05hbWU6IHVuZGVmaW5lZCxcbiAgZGlzYWJsZWQ6IHVuZGVmaW5lZCxcbiAgZW50ZXJLZXlIaW50OiB1bmRlZmluZWQsXG4gIGlucHV0TW9kZTogdW5kZWZpbmVkLFxuICBvbkNoYW5nZTogdW5kZWZpbmVkLFxuICBvbkZvY3VzOiB1bmRlZmluZWQsXG4gIG9uS2V5RG93bjogdW5kZWZpbmVkLFxuICBvbktleURvd25DYXB0dXJlOiB1bmRlZmluZWQsXG4gIG9uS2V5UHJlc3M6IHVuZGVmaW5lZCxcbiAgb25TZWxlY3Q6IHVuZGVmaW5lZCxcbiAgcGxhY2Vob2xkZXI6IHVuZGVmaW5lZCxcbiAgcmVhZE9ubHk6IHVuZGVmaW5lZCxcbiAgcm93czogdW5kZWZpbmVkLFxuICB0ZXh0QXJlYUNsYXNzTmFtZTogdW5kZWZpbmVkLFxuICB2YWx1ZTogJydcbn07XG5cbkF1dG9SZXNpemVUZXh0QXJlYS5wcm9wVHlwZXMgPSB7XG4gICdhcmlhLWxhYmVsJzogUHJvcFR5cGVzLnN0cmluZyxcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAnZGF0YS1pZCc6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGRpc2FibGVkOiBQcm9wVHlwZXMuYm9vbCxcbiAgZW50ZXJLZXlIaW50OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBpbnB1dE1vZGU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIG9uQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25Gb2N1czogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uS2V5RG93bjogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uS2V5RG93bkNhcHR1cmU6IFByb3BUeXBlcy5mdW5jLFxuICBvbktleVByZXNzOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25TZWxlY3Q6IFByb3BUeXBlcy5mdW5jLFxuICBwbGFjZWhvbGRlcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgcmVhZE9ubHk6IFByb3BUeXBlcy5ib29sLFxuICByb3dzOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB0ZXh0QXJlYUNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgdmFsdWU6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEF1dG9SZXNpemVUZXh0QXJlYTtcbiJdfQ==