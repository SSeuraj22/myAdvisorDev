"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _useScrollToEnd = _interopRequireDefault(require("../hooks/useScrollToEnd"));

var _useStyleSet3 = _interopRequireDefault(require("../hooks/useStyleSet"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useDirection = _botframeworkWebchatApi.hooks.useDirection,
    useLocalizer = _botframeworkWebchatApi.hooks.useLocalizer;
var ScrollToEndButton = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {
  var className = _ref.className,
      onClick = _ref.onClick;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      scrollToEndButtonStyleSet = _useStyleSet2[0].scrollToEndButton;

  var _useDirection = useDirection(),
      _useDirection2 = _slicedToArray(_useDirection, 1),
      direction = _useDirection2[0];

  var localize = useLocalizer();
  var scrollToEnd = (0, _useScrollToEnd.default)();
  var handleClick = (0, _react.useCallback)(function (event) {
    onClick && onClick(event);
    scrollToEnd();
  }, [onClick, scrollToEnd]);
  var newMessageText = localize('TRANSCRIPT_NEW_MESSAGES');
  return /*#__PURE__*/_react.default.createElement("button", {
    "aria-label": newMessageText,
    className: (0, _classnames.default)('webchat__scrollToEndButton', scrollToEndButtonStyleSet + '', className + '', direction === 'rtl' ? 'webchat__overlay--rtl' : ''),
    onClick: handleClick,
    ref: ref,
    tabIndex: 0,
    type: "button"
  }, newMessageText);
});
ScrollToEndButton.defaultProps = {
  className: '',
  onClick: undefined
};
ScrollToEndButton.displayName = 'ScrollToEndButton';
ScrollToEndButton.propTypes = {
  className: _propTypes.default.string,
  onClick: _propTypes.default.func
};
var _default = ScrollToEndButton;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9BY3Rpdml0eS9TY3JvbGxUb0VuZEJ1dHRvbi5qcyJdLCJuYW1lcyI6WyJ1c2VEaXJlY3Rpb24iLCJob29rcyIsInVzZUxvY2FsaXplciIsIlNjcm9sbFRvRW5kQnV0dG9uIiwicmVmIiwiY2xhc3NOYW1lIiwib25DbGljayIsInNjcm9sbFRvRW5kQnV0dG9uU3R5bGVTZXQiLCJzY3JvbGxUb0VuZEJ1dHRvbiIsImRpcmVjdGlvbiIsImxvY2FsaXplIiwic2Nyb2xsVG9FbmQiLCJoYW5kbGVDbGljayIsImV2ZW50IiwibmV3TWVzc2FnZVRleHQiLCJkZWZhdWx0UHJvcHMiLCJ1bmRlZmluZWQiLCJkaXNwbGF5TmFtZSIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsInN0cmluZyIsImZ1bmMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUVRQSxZLEdBQStCQyw2QixDQUEvQkQsWTtJQUFjRSxZLEdBQWlCRCw2QixDQUFqQkMsWTtBQUV0QixJQUFNQyxpQkFBaUIsZ0JBQUcsdUJBQVcsZ0JBQXlCQyxHQUF6QixFQUFpQztBQUFBLE1BQTlCQyxTQUE4QixRQUE5QkEsU0FBOEI7QUFBQSxNQUFuQkMsT0FBbUIsUUFBbkJBLE9BQW1COztBQUFBLHFCQUNULDRCQURTO0FBQUE7QUFBQSxNQUN4Q0MseUJBRHdDLG9CQUMzREMsaUJBRDJEOztBQUFBLHNCQUVoRFIsWUFBWSxFQUZvQztBQUFBO0FBQUEsTUFFN0RTLFNBRjZEOztBQUdwRSxNQUFNQyxRQUFRLEdBQUdSLFlBQVksRUFBN0I7QUFDQSxNQUFNUyxXQUFXLEdBQUcsOEJBQXBCO0FBRUEsTUFBTUMsV0FBVyxHQUFHLHdCQUNsQixVQUFBQyxLQUFLLEVBQUk7QUFDUFAsSUFBQUEsT0FBTyxJQUFJQSxPQUFPLENBQUNPLEtBQUQsQ0FBbEI7QUFDQUYsSUFBQUEsV0FBVztBQUNaLEdBSmlCLEVBS2xCLENBQUNMLE9BQUQsRUFBVUssV0FBVixDQUxrQixDQUFwQjtBQVFBLE1BQU1HLGNBQWMsR0FBR0osUUFBUSxDQUFDLHlCQUFELENBQS9CO0FBRUEsc0JBQ0U7QUFDRSxrQkFBWUksY0FEZDtBQUVFLElBQUEsU0FBUyxFQUFFLHlCQUNULDRCQURTLEVBRVRQLHlCQUF5QixHQUFHLEVBRm5CLEVBR1RGLFNBQVMsR0FBRyxFQUhILEVBSVRJLFNBQVMsS0FBSyxLQUFkLEdBQXNCLHVCQUF0QixHQUFnRCxFQUp2QyxDQUZiO0FBUUUsSUFBQSxPQUFPLEVBQUVHLFdBUlg7QUFTRSxJQUFBLEdBQUcsRUFBRVIsR0FUUDtBQVVFLElBQUEsUUFBUSxFQUFFLENBVlo7QUFXRSxJQUFBLElBQUksRUFBQztBQVhQLEtBYUdVLGNBYkgsQ0FERjtBQWlCRCxDQWpDeUIsQ0FBMUI7QUFtQ0FYLGlCQUFpQixDQUFDWSxZQUFsQixHQUFpQztBQUMvQlYsRUFBQUEsU0FBUyxFQUFFLEVBRG9CO0FBRS9CQyxFQUFBQSxPQUFPLEVBQUVVO0FBRnNCLENBQWpDO0FBS0FiLGlCQUFpQixDQUFDYyxXQUFsQixHQUFnQyxtQkFBaEM7QUFFQWQsaUJBQWlCLENBQUNlLFNBQWxCLEdBQThCO0FBQzVCYixFQUFBQSxTQUFTLEVBQUVjLG1CQUFVQyxNQURPO0FBRTVCZCxFQUFBQSxPQUFPLEVBQUVhLG1CQUFVRTtBQUZTLENBQTlCO2VBS2VsQixpQiIsInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaG9va3MgfSBmcm9tICdib3RmcmFtZXdvcmstd2ViY2hhdC1hcGknO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0LCB7IGZvcndhcmRSZWYsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgdXNlU2Nyb2xsVG9FbmQgZnJvbSAnLi4vaG9va3MvdXNlU2Nyb2xsVG9FbmQnO1xuaW1wb3J0IHVzZVN0eWxlU2V0IGZyb20gJy4uL2hvb2tzL3VzZVN0eWxlU2V0JztcblxuY29uc3QgeyB1c2VEaXJlY3Rpb24sIHVzZUxvY2FsaXplciB9ID0gaG9va3M7XG5cbmNvbnN0IFNjcm9sbFRvRW5kQnV0dG9uID0gZm9yd2FyZFJlZigoeyBjbGFzc05hbWUsIG9uQ2xpY2sgfSwgcmVmKSA9PiB7XG4gIGNvbnN0IFt7IHNjcm9sbFRvRW5kQnV0dG9uOiBzY3JvbGxUb0VuZEJ1dHRvblN0eWxlU2V0IH1dID0gdXNlU3R5bGVTZXQoKTtcbiAgY29uc3QgW2RpcmVjdGlvbl0gPSB1c2VEaXJlY3Rpb24oKTtcbiAgY29uc3QgbG9jYWxpemUgPSB1c2VMb2NhbGl6ZXIoKTtcbiAgY29uc3Qgc2Nyb2xsVG9FbmQgPSB1c2VTY3JvbGxUb0VuZCgpO1xuXG4gIGNvbnN0IGhhbmRsZUNsaWNrID0gdXNlQ2FsbGJhY2soXG4gICAgZXZlbnQgPT4ge1xuICAgICAgb25DbGljayAmJiBvbkNsaWNrKGV2ZW50KTtcbiAgICAgIHNjcm9sbFRvRW5kKCk7XG4gICAgfSxcbiAgICBbb25DbGljaywgc2Nyb2xsVG9FbmRdXG4gICk7XG5cbiAgY29uc3QgbmV3TWVzc2FnZVRleHQgPSBsb2NhbGl6ZSgnVFJBTlNDUklQVF9ORVdfTUVTU0FHRVMnKTtcblxuICByZXR1cm4gKFxuICAgIDxidXR0b25cbiAgICAgIGFyaWEtbGFiZWw9e25ld01lc3NhZ2VUZXh0fVxuICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKFxuICAgICAgICAnd2ViY2hhdF9fc2Nyb2xsVG9FbmRCdXR0b24nLFxuICAgICAgICBzY3JvbGxUb0VuZEJ1dHRvblN0eWxlU2V0ICsgJycsXG4gICAgICAgIGNsYXNzTmFtZSArICcnLFxuICAgICAgICBkaXJlY3Rpb24gPT09ICdydGwnID8gJ3dlYmNoYXRfX292ZXJsYXktLXJ0bCcgOiAnJ1xuICAgICAgKX1cbiAgICAgIG9uQ2xpY2s9e2hhbmRsZUNsaWNrfVxuICAgICAgcmVmPXtyZWZ9XG4gICAgICB0YWJJbmRleD17MH1cbiAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgID5cbiAgICAgIHtuZXdNZXNzYWdlVGV4dH1cbiAgICA8L2J1dHRvbj5cbiAgKTtcbn0pO1xuXG5TY3JvbGxUb0VuZEJ1dHRvbi5kZWZhdWx0UHJvcHMgPSB7XG4gIGNsYXNzTmFtZTogJycsXG4gIG9uQ2xpY2s6IHVuZGVmaW5lZFxufTtcblxuU2Nyb2xsVG9FbmRCdXR0b24uZGlzcGxheU5hbWUgPSAnU2Nyb2xsVG9FbmRCdXR0b24nO1xuXG5TY3JvbGxUb0VuZEJ1dHRvbi5wcm9wVHlwZXMgPSB7XG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgb25DbGljazogUHJvcFR5cGVzLmZ1bmNcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFNjcm9sbFRvRW5kQnV0dG9uO1xuIl19