"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createBasicTranscriptStyleSet;

/* eslint no-magic-numbers: ["error", { "ignore": [2] }] */
function createBasicTranscriptStyleSet(_ref) {
  var paddingRegular = _ref.paddingRegular,
      primaryFont = _ref.primaryFont,
      transcriptActivityVisualKeyboardIndicatorColor = _ref.transcriptActivityVisualKeyboardIndicatorColor,
      transcriptActivityVisualKeyboardIndicatorStyle = _ref.transcriptActivityVisualKeyboardIndicatorStyle,
      transcriptActivityVisualKeyboardIndicatorWidth = _ref.transcriptActivityVisualKeyboardIndicatorWidth,
      transcriptTerminatorBackgroundColor = _ref.transcriptTerminatorBackgroundColor,
      transcriptTerminatorBorderRadius = _ref.transcriptTerminatorBorderRadius,
      transcriptTerminatorColor = _ref.transcriptTerminatorColor,
      transcriptTerminatorFontSize = _ref.transcriptTerminatorFontSize,
      transcriptVisualKeyboardIndicatorColor = _ref.transcriptVisualKeyboardIndicatorColor,
      transcriptVisualKeyboardIndicatorStyle = _ref.transcriptVisualKeyboardIndicatorStyle,
      transcriptVisualKeyboardIndicatorWidth = _ref.transcriptVisualKeyboardIndicatorWidth;
  return {
    '&.webchat__basic-transcript': {
      '&:focus': {
        outline: 0,
        '& .webchat__basic-transcript__activity-indicator.webchat__basic-transcript__activity-indicator--focus': {
          borderColor: transcriptActivityVisualKeyboardIndicatorColor,
          borderStyle: transcriptActivityVisualKeyboardIndicatorStyle,
          borderWidth: transcriptActivityVisualKeyboardIndicatorWidth,
          boxSizing: 'border-box',
          height: "calc(100% - ".concat(paddingRegular, "px)"),
          left: 0,
          margin: paddingRegular / 2,
          pointerEvents: 'none',
          position: 'absolute',
          top: 0,
          width: "calc(100% - ".concat(paddingRegular, "px)")
        }
      },
      '&:focus .webchat__basic-transcript__focus-indicator, .webchat__basic-transcript__terminator:focus + .webchat__basic-transcript__focus-indicator': {
        height: '100%',
        borderColor: transcriptVisualKeyboardIndicatorColor,
        borderStyle: transcriptVisualKeyboardIndicatorStyle,
        borderWidth: transcriptVisualKeyboardIndicatorWidth,
        boxSizing: 'border-box',
        pointerEvents: 'none',
        position: 'absolute',
        top: 0,
        width: '100%'
      },
      '& .webchat__basic-transcript__activity': {
        paddingTop: paddingRegular,
        position: 'relative',
        '&:not(:first-child)': {
          marginTop: -paddingRegular
        }
      },
      '& .webchat__basic-transcript__activity-box:not(:empty)': {
        paddingBottom: paddingRegular
      },
      '& .webchat__basic-transcript__activity-sentinel': {
        height: '100%',
        left: 0,
        pointerEvents: 'none',
        position: 'absolute',
        top: 0,
        width: '100%'
      },
      '& .webchat__basic-transcript__terminator': {
        bottom: 0,
        height: 0,
        outline: 0,
        position: 'relative',
        width: '100%'
      },
      '& .webchat__basic-transcript__terminator-body': {
        bottom: 0,
        display: 'flex',
        justifyContent: 'center',
        position: 'absolute',
        width: '100%'
      },
      '& .webchat__basic-transcript__terminator:not(:focus) .webchat__basic-transcript__terminator-body': {
        display: 'none'
      },
      '& .webchat__basic-transcript__terminator-text': {
        backgroundColor: transcriptTerminatorBackgroundColor,
        borderRadius: transcriptTerminatorBorderRadius,
        color: transcriptTerminatorColor,
        fontFamily: primaryFont,
        fontSize: transcriptTerminatorFontSize,
        margin: paddingRegular / 2,
        padding: paddingRegular / 2
      }
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,