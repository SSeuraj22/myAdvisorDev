"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useSendBoxSpeechInterimsVisible = useSendBoxSpeechInterimsVisible;
exports.default = void 0;

var _botframeworkWebchatCore = require("botframework-webchat-core");

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _DictationInterims = _interopRequireDefault(require("./SendBox/DictationInterims"));

var _MicrophoneButton = _interopRequireDefault(require("./SendBox/MicrophoneButton"));

var _SendButton = _interopRequireDefault(require("./SendBox/SendButton"));

var _SuggestedActions = _interopRequireDefault(require("./SendBox/SuggestedActions"));

var _TextBox = _interopRequireDefault(require("./SendBox/TextBox"));

var _UploadButton = _interopRequireDefault(require("./SendBox/UploadButton"));

var _useStyleSet3 = _interopRequireDefault(require("./hooks/useStyleSet"));

var _useStyleToEmotionObject = _interopRequireDefault(require("./hooks/internal/useStyleToEmotionObject"));

var _useWebSpeechPonyfill4 = _interopRequireDefault(require("./hooks/useWebSpeechPonyfill"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var _Constants$DictateSta = _botframeworkWebchatCore.Constants.DictateState,
    DICTATING = _Constants$DictateSta.DICTATING,
    STARTING = _Constants$DictateSta.STARTING;
var useActivities = _botframeworkWebchatApi.hooks.useActivities,
    useDirection = _botframeworkWebchatApi.hooks.useDirection,
    useDictateState = _botframeworkWebchatApi.hooks.useDictateState,
    useStyleOptions = _botframeworkWebchatApi.hooks.useStyleOptions;
var ROOT_STYLE = {
  '&.webchat__send-box': {
    '& .webchat__send-box__button': {
      flexShrink: 0
    },
    '& .webchat__send-box__dictation-interims': {
      flex: 10000
    },
    '& .webchat__send-box__main': {
      display: 'flex'
    },
    '& .webchat__send-box__microphone-button': {
      flex: 1
    },
    '& .webchat__send-box__text-box': {
      flex: 10000
    }
  }
}; // TODO: [P3] We should consider exposing core/src/definitions and use it instead

function activityIsSpeakingOrQueuedToSpeak(_ref) {
  var _ref$channelData = _ref.channelData;
  _ref$channelData = _ref$channelData === void 0 ? {} : _ref$channelData;
  var speak = _ref$channelData.speak;
  return !!speak;
}

function useSendBoxSpeechInterimsVisible() {
  var _useActivities = useActivities(),
      _useActivities2 = _slicedToArray(_useActivities, 1),
      activities = _useActivities2[0];

  var _useDictateState = useDictateState(),
      _useDictateState2 = _slicedToArray(_useDictateState, 1),
      dictateState = _useDictateState2[0];

  return [(dictateState === STARTING || dictateState === DICTATING) && !activities.filter(activityIsSpeakingOrQueuedToSpeak).length];
}

var BasicSendBox = function BasicSendBox(_ref2) {
  var className = _ref2.className;

  var _useStyleOptions = useStyleOptions(),
      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),
      _useStyleOptions2$ = _useStyleOptions2[0],
      hideUploadButton = _useStyleOptions2$.hideUploadButton,
      sendBoxButtonAlignment = _useStyleOptions2$.sendBoxButtonAlignment;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      sendBoxStyleSet = _useStyleSet2[0].sendBox;

  var _useWebSpeechPonyfill = (0, _useWebSpeechPonyfill4.default)(),
      _useWebSpeechPonyfill2 = _slicedToArray(_useWebSpeechPonyfill, 1),
      _useWebSpeechPonyfill3 = _useWebSpeechPonyfill2[0];

  _useWebSpeechPonyfill3 = _useWebSpeechPonyfill3 === void 0 ? {} : _useWebSpeechPonyfill3;
  var SpeechRecognition = _useWebSpeechPonyfill3.SpeechRecognition;

  var _useDirection = useDirection(),
      _useDirection2 = _slicedToArray(_useDirection, 1),
      direction = _useDirection2[0];

  var _useSendBoxSpeechInte = useSendBoxSpeechInterimsVisible(),
      _useSendBoxSpeechInte2 = _slicedToArray(_useSendBoxSpeechInte, 1),
      speechInterimsVisible = _useSendBoxSpeechInte2[0];

  var styleToEmotionObject = (0, _useStyleToEmotionObject.default)();
  var rootClassName = styleToEmotionObject(ROOT_STYLE) + '';
  var supportSpeechRecognition = !!SpeechRecognition;
  var buttonClassName = (0, _classnames.default)('webchat__send-box__button', {
    'webchat__send-box__button--align-bottom': sendBoxButtonAlignment === 'bottom',
    'webchat__send-box__button--align-stretch': sendBoxButtonAlignment !== 'bottom' && sendBoxButtonAlignment !== 'top',
    'webchat__send-box__button--align-top': sendBoxButtonAlignment === 'top'
  });
  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('webchat__send-box', sendBoxStyleSet + '', rootClassName + '', (className || '') + ''),
    dir: direction,
    role: "form"
  }, /*#__PURE__*/_react.default.createElement(_SuggestedActions.default, null), /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__send-box__main"
  }, !hideUploadButton && /*#__PURE__*/_react.default.createElement(_UploadButton.default, {
    className: buttonClassName
  }), speechInterimsVisible ? /*#__PURE__*/_react.default.createElement(_DictationInterims.default, {
    className: "webchat__send-box__dictation-interims"
  }) : /*#__PURE__*/_react.default.createElement(_TextBox.default, {
    className: "webchat__send-box__text-box"
  }), supportSpeechRecognition ? /*#__PURE__*/_react.default.createElement(_MicrophoneButton.default, {
    className: (0, _classnames.default)(buttonClassName, 'webchat__send-box__microphone-button')
  }) : /*#__PURE__*/_react.default.createElement(_SendButton.default, {
    className: buttonClassName
  })));
};

BasicSendBox.defaultProps = {
  className: ''
};
BasicSendBox.propTypes = {
  className: _propTypes.default.string
};
var _default = BasicSendBox;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,