"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useObserveScrollPosition;

var _react = require("react");

var _useWebChatUIContext2 = _interopRequireDefault(require("./internal/useWebChatUIContext"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function useObserveScrollPosition(observer, deps) {
  if (typeof observer !== 'function') {
    observer = undefined;
    console.warn('botframework-webchat: First argument passed to "useObserveScrollPosition" must be a function.');
  } else if (typeof deps !== 'undefined' && !Array.isArray(deps)) {
    console.warn('botframework-webchat: Second argument passed to "useObserveScrollPosition" must be an array if specified.');
  }

  var _useWebChatUIContext = (0, _useWebChatUIContext2.default)(),
      observeScrollPosition = _useWebChatUIContext.observeScrollPosition;
  /* eslint-disable-next-line react-hooks/exhaustive-deps */


  (0, _react.useEffect)(function () {
    return observer && observeScrollPosition(observer);
  }, [].concat(_toConsumableArray(deps || []), [observer, observeScrollPosition]));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ob29rcy91c2VPYnNlcnZlU2Nyb2xsUG9zaXRpb24uanMiXSwibmFtZXMiOlsidXNlT2JzZXJ2ZVNjcm9sbFBvc2l0aW9uIiwib2JzZXJ2ZXIiLCJkZXBzIiwidW5kZWZpbmVkIiwiY29uc29sZSIsIndhcm4iLCJBcnJheSIsImlzQXJyYXkiLCJvYnNlcnZlU2Nyb2xsUG9zaXRpb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztBQUVlLFNBQVNBLHdCQUFULENBQWtDQyxRQUFsQyxFQUE0Q0MsSUFBNUMsRUFBa0Q7QUFDL0QsTUFBSSxPQUFPRCxRQUFQLEtBQW9CLFVBQXhCLEVBQW9DO0FBQ2xDQSxJQUFBQSxRQUFRLEdBQUdFLFNBQVg7QUFDQUMsSUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQWEsK0ZBQWI7QUFDRCxHQUhELE1BR08sSUFBSSxPQUFPSCxJQUFQLEtBQWdCLFdBQWhCLElBQStCLENBQUNJLEtBQUssQ0FBQ0MsT0FBTixDQUFjTCxJQUFkLENBQXBDLEVBQXlEO0FBQzlERSxJQUFBQSxPQUFPLENBQUNDLElBQVIsQ0FDRSwyR0FERjtBQUdEOztBQVI4RCw2QkFVN0Isb0NBVjZCO0FBQUEsTUFVdkRHLHFCQVZ1RCx3QkFVdkRBLHFCQVZ1RDtBQVkvRDs7O0FBQ0Esd0JBQVU7QUFBQSxXQUFNUCxRQUFRLElBQUlPLHFCQUFxQixDQUFDUCxRQUFELENBQXZDO0FBQUEsR0FBViwrQkFBa0VDLElBQUksSUFBSSxFQUExRSxJQUErRUQsUUFBL0UsRUFBeUZPLHFCQUF6RjtBQUNEIiwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdXNlV2ViQ2hhdFVJQ29udGV4dCBmcm9tICcuL2ludGVybmFsL3VzZVdlYkNoYXRVSUNvbnRleHQnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VPYnNlcnZlU2Nyb2xsUG9zaXRpb24ob2JzZXJ2ZXIsIGRlcHMpIHtcbiAgaWYgKHR5cGVvZiBvYnNlcnZlciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIG9ic2VydmVyID0gdW5kZWZpbmVkO1xuICAgIGNvbnNvbGUud2FybignYm90ZnJhbWV3b3JrLXdlYmNoYXQ6IEZpcnN0IGFyZ3VtZW50IHBhc3NlZCB0byBcInVzZU9ic2VydmVTY3JvbGxQb3NpdGlvblwiIG11c3QgYmUgYSBmdW5jdGlvbi4nKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZGVwcyAhPT0gJ3VuZGVmaW5lZCcgJiYgIUFycmF5LmlzQXJyYXkoZGVwcykpIHtcbiAgICBjb25zb2xlLndhcm4oXG4gICAgICAnYm90ZnJhbWV3b3JrLXdlYmNoYXQ6IFNlY29uZCBhcmd1bWVudCBwYXNzZWQgdG8gXCJ1c2VPYnNlcnZlU2Nyb2xsUG9zaXRpb25cIiBtdXN0IGJlIGFuIGFycmF5IGlmIHNwZWNpZmllZC4nXG4gICAgKTtcbiAgfVxuXG4gIGNvbnN0IHsgb2JzZXJ2ZVNjcm9sbFBvc2l0aW9uIH0gPSB1c2VXZWJDaGF0VUlDb250ZXh0KCk7XG5cbiAgLyogZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwcyAqL1xuICB1c2VFZmZlY3QoKCkgPT4gb2JzZXJ2ZXIgJiYgb2JzZXJ2ZVNjcm9sbFBvc2l0aW9uKG9ic2VydmVyKSwgWy4uLihkZXBzIHx8IFtdKSwgb2JzZXJ2ZXIsIG9ic2VydmVTY3JvbGxQb3NpdGlvbl0pO1xufVxuIl19