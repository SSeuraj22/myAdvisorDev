"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = patchStyleOptionsFromDeprecatedProps;

var _simpleUpdateIn = _interopRequireDefault(require("simple-update-in"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// TODO: [P4] We should add a notice for people who want to use "styleSet" instead of "styleOptions".
//       "styleSet" is actually CSS stylesheet and it is based on the DOM tree.
//       DOM tree may change from time to time, thus, maintaining "styleSet" becomes a constant effort.
// eslint-disable-next-line complexity
function patchStyleOptionsFromDeprecatedProps(styleOptions, _ref) {
  var groupTimestampFromProps = _ref.groupTimestamp,
      sendTimeoutFromProps = _ref.sendTimeout;

  if (typeof groupTimestampFromProps !== 'undefined' && typeof styleOptions.groupTimestamp === 'undefined') {
    console.warn('Web Chat: "groupTimestamp" has been moved to "styleOptions". This deprecation migration will be removed on or after January 1 2022.');
    styleOptions = (0, _simpleUpdateIn.default)(styleOptions, ['groupTimestamp'], function () {
      return groupTimestampFromProps;
    });
  }

  if (typeof sendTimeoutFromProps !== 'undefined' && typeof styleOptions.sendTimeout === 'undefined') {
    console.warn('Web Chat: "sendTimeout" has been moved to "styleOptions". This deprecation migration will be removed on or after January 1 2022.');
    styleOptions = (0, _simpleUpdateIn.default)(styleOptions, ['sendTimeout'], function () {
      return sendTimeoutFromProps;
    });
  }

  if (styleOptions.slowConnectionAfter < 0) {
    console.warn('Web Chat: "slowConnectionAfter" cannot be negative, will set to 0.');
    styleOptions = (0, _simpleUpdateIn.default)(styleOptions, ['slowConnectionAfter'], function () {
      return 0;
    });
  }

  return styleOptions;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wYXRjaFN0eWxlT3B0aW9uc0Zyb21EZXByZWNhdGVkUHJvcHMuanMiXSwibmFtZXMiOlsicGF0Y2hTdHlsZU9wdGlvbnNGcm9tRGVwcmVjYXRlZFByb3BzIiwic3R5bGVPcHRpb25zIiwiZ3JvdXBUaW1lc3RhbXBGcm9tUHJvcHMiLCJncm91cFRpbWVzdGFtcCIsInNlbmRUaW1lb3V0RnJvbVByb3BzIiwic2VuZFRpbWVvdXQiLCJjb25zb2xlIiwid2FybiIsInNsb3dDb25uZWN0aW9uQWZ0ZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ2UsU0FBU0Esb0NBQVQsQ0FDYkMsWUFEYSxRQUdiO0FBQUEsTUFEa0JDLHVCQUNsQixRQURFQyxjQUNGO0FBQUEsTUFEd0RDLG9CQUN4RCxRQUQyQ0MsV0FDM0M7O0FBQ0EsTUFBSSxPQUFPSCx1QkFBUCxLQUFtQyxXQUFuQyxJQUFrRCxPQUFPRCxZQUFZLENBQUNFLGNBQXBCLEtBQXVDLFdBQTdGLEVBQTBHO0FBQ3hHRyxJQUFBQSxPQUFPLENBQUNDLElBQVIsQ0FDRSxxSUFERjtBQUlBTixJQUFBQSxZQUFZLEdBQUcsNkJBQVNBLFlBQVQsRUFBdUIsQ0FBQyxnQkFBRCxDQUF2QixFQUEyQztBQUFBLGFBQU1DLHVCQUFOO0FBQUEsS0FBM0MsQ0FBZjtBQUNEOztBQUVELE1BQUksT0FBT0Usb0JBQVAsS0FBZ0MsV0FBaEMsSUFBK0MsT0FBT0gsWUFBWSxDQUFDSSxXQUFwQixLQUFvQyxXQUF2RixFQUFvRztBQUNsR0MsSUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQ0Usa0lBREY7QUFJQU4sSUFBQUEsWUFBWSxHQUFHLDZCQUFTQSxZQUFULEVBQXVCLENBQUMsYUFBRCxDQUF2QixFQUF3QztBQUFBLGFBQU1HLG9CQUFOO0FBQUEsS0FBeEMsQ0FBZjtBQUNEOztBQUVELE1BQUlILFlBQVksQ0FBQ08sbUJBQWIsR0FBbUMsQ0FBdkMsRUFBMEM7QUFDeENGLElBQUFBLE9BQU8sQ0FBQ0MsSUFBUixDQUFhLG9FQUFiO0FBRUFOLElBQUFBLFlBQVksR0FBRyw2QkFBU0EsWUFBVCxFQUF1QixDQUFDLHFCQUFELENBQXZCLEVBQWdEO0FBQUEsYUFBTSxDQUFOO0FBQUEsS0FBaEQsQ0FBZjtBQUNEOztBQUVELFNBQU9BLFlBQVA7QUFDRCIsInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHVwZGF0ZUluIGZyb20gJ3NpbXBsZS11cGRhdGUtaW4nO1xuXG4vLyBUT0RPOiBbUDRdIFdlIHNob3VsZCBhZGQgYSBub3RpY2UgZm9yIHBlb3BsZSB3aG8gd2FudCB0byB1c2UgXCJzdHlsZVNldFwiIGluc3RlYWQgb2YgXCJzdHlsZU9wdGlvbnNcIi5cbi8vICAgICAgIFwic3R5bGVTZXRcIiBpcyBhY3R1YWxseSBDU1Mgc3R5bGVzaGVldCBhbmQgaXQgaXMgYmFzZWQgb24gdGhlIERPTSB0cmVlLlxuLy8gICAgICAgRE9NIHRyZWUgbWF5IGNoYW5nZSBmcm9tIHRpbWUgdG8gdGltZSwgdGh1cywgbWFpbnRhaW5pbmcgXCJzdHlsZVNldFwiIGJlY29tZXMgYSBjb25zdGFudCBlZmZvcnQuXG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb21wbGV4aXR5XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwYXRjaFN0eWxlT3B0aW9uc0Zyb21EZXByZWNhdGVkUHJvcHMoXG4gIHN0eWxlT3B0aW9ucyxcbiAgeyBncm91cFRpbWVzdGFtcDogZ3JvdXBUaW1lc3RhbXBGcm9tUHJvcHMsIHNlbmRUaW1lb3V0OiBzZW5kVGltZW91dEZyb21Qcm9wcyB9XG4pIHtcbiAgaWYgKHR5cGVvZiBncm91cFRpbWVzdGFtcEZyb21Qcm9wcyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHN0eWxlT3B0aW9ucy5ncm91cFRpbWVzdGFtcCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBjb25zb2xlLndhcm4oXG4gICAgICAnV2ViIENoYXQ6IFwiZ3JvdXBUaW1lc3RhbXBcIiBoYXMgYmVlbiBtb3ZlZCB0byBcInN0eWxlT3B0aW9uc1wiLiBUaGlzIGRlcHJlY2F0aW9uIG1pZ3JhdGlvbiB3aWxsIGJlIHJlbW92ZWQgb24gb3IgYWZ0ZXIgSmFudWFyeSAxIDIwMjIuJ1xuICAgICk7XG5cbiAgICBzdHlsZU9wdGlvbnMgPSB1cGRhdGVJbihzdHlsZU9wdGlvbnMsIFsnZ3JvdXBUaW1lc3RhbXAnXSwgKCkgPT4gZ3JvdXBUaW1lc3RhbXBGcm9tUHJvcHMpO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBzZW5kVGltZW91dEZyb21Qcm9wcyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHN0eWxlT3B0aW9ucy5zZW5kVGltZW91dCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBjb25zb2xlLndhcm4oXG4gICAgICAnV2ViIENoYXQ6IFwic2VuZFRpbWVvdXRcIiBoYXMgYmVlbiBtb3ZlZCB0byBcInN0eWxlT3B0aW9uc1wiLiBUaGlzIGRlcHJlY2F0aW9uIG1pZ3JhdGlvbiB3aWxsIGJlIHJlbW92ZWQgb24gb3IgYWZ0ZXIgSmFudWFyeSAxIDIwMjIuJ1xuICAgICk7XG5cbiAgICBzdHlsZU9wdGlvbnMgPSB1cGRhdGVJbihzdHlsZU9wdGlvbnMsIFsnc2VuZFRpbWVvdXQnXSwgKCkgPT4gc2VuZFRpbWVvdXRGcm9tUHJvcHMpO1xuICB9XG5cbiAgaWYgKHN0eWxlT3B0aW9ucy5zbG93Q29ubmVjdGlvbkFmdGVyIDwgMCkge1xuICAgIGNvbnNvbGUud2FybignV2ViIENoYXQ6IFwic2xvd0Nvbm5lY3Rpb25BZnRlclwiIGNhbm5vdCBiZSBuZWdhdGl2ZSwgd2lsbCBzZXQgdG8gMC4nKTtcblxuICAgIHN0eWxlT3B0aW9ucyA9IHVwZGF0ZUluKHN0eWxlT3B0aW9ucywgWydzbG93Q29ubmVjdGlvbkFmdGVyJ10sICgpID0+IDApO1xuICB9XG5cbiAgcmV0dXJuIHN0eWxlT3B0aW9ucztcbn1cbiJdfQ==